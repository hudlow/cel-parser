[
  {
    "name": "basic",
    "sections": [
      {
        "name": "self_eval_zeroish",
        "tests": [
          {
            "name": "self_eval_int_zero",
            "expression": "0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "int64Value": "0" } }
            }
          },
          {
            "name": "self_eval_uint_zero",
            "expression": "0u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [3],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "uint64Value": "0" } }
            }
          },
          {
            "name": "self_eval_uint_alias_zero",
            "expression": "0U",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [3],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "uint64Value": "0" } }
            }
          },
          {
            "name": "self_eval_float_zero",
            "expression": "0.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [4],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "doubleValue": 0 } }
            }
          },
          {
            "name": "self_eval_float_zerowithexp",
            "expression": "0e+0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [5],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "doubleValue": 0 } }
            }
          },
          {
            "name": "self_eval_string_empty",
            "expression": "''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [3],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "stringValue": "" } }
            }
          },
          {
            "name": "self_eval_string_empty_quotes",
            "expression": "\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [3],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "stringValue": "" } }
            }
          },
          {
            "name": "self_eval_string_raw_prefix",
            "expression": "r\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [4],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "stringValue": "" } }
            }
          },
          {
            "name": "self_eval_bytes_empty",
            "expression": "b\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [4],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "bytesValue": "" } }
            }
          },
          {
            "name": "self_eval_bool_false",
            "expression": "false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [6],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "boolValue": false } }
            }
          },
          {
            "name": "self_eval_null",
            "expression": "null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [5],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "nullValue": null } }
            }
          },
          {
            "name": "self_eval_empty_list",
            "expression": "[]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [3],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "listExpr": {} }
            }
          },
          {
            "name": "self_eval_empty_map",
            "expression": "{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [3],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "structExpr": {} }
            }
          },
          {
            "name": "self_eval_string_raw_prefix_triple_double",
            "expression": "r\"\"\"\"\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "stringValue": "" } }
            }
          },
          {
            "name": "self_eval_string_raw_prefix_triple_single",
            "expression": "r''''''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "stringValue": "" } }
            }
          }
        ]
      },
      {
        "name": "self_eval_nonzeroish",
        "tests": [
          {
            "name": "self_eval_int_nonzero",
            "expression": "42",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [3],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "int64Value": "42" } }
            }
          },
          {
            "name": "self_eval_uint_nonzero",
            "expression": "123456789u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "uint64Value": "123456789" } }
            }
          },
          {
            "name": "self_eval_uint_alias_nonzero",
            "expression": "123456789U",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "uint64Value": "123456789" } }
            }
          },
          {
            "name": "self_eval_int_negative_min",
            "expression": "-9223372036854775808",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 0 }
              },
              "expr": {
                "id": "1",
                "constExpr": { "int64Value": "-9223372036854775808" }
              }
            }
          },
          {
            "name": "self_eval_float_negative_exp",
            "expression": "-2.3e+1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "doubleValue": -23 } }
            }
          },
          {
            "name": "self_eval_string_excl",
            "expression": "\"!\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [4],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "stringValue": "!" } }
            }
          },
          {
            "name": "self_eval_string_escape",
            "expression": "'\\''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [5],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "stringValue": "'" } }
            }
          },
          {
            "name": "self_eval_bytes_escape",
            "expression": "b'Ã¿'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [5],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "bytesValue": "w78=" } }
            }
          },
          {
            "name": "self_eval_bytes_invalid_utf8",
            "expression": "b'\\000\\xff'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "bytesValue": "AP8=" } }
            }
          },
          {
            "name": "self_eval_list_singleitem",
            "expression": "[-1]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [5],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "1",
                "listExpr": {
                  "elements": [
                    { "id": "2", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "self_eval_map_singleitem",
            "expression": "{\"k\":\"v\"}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 4, "3": 1, "4": 5 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "entries": [
                    {
                      "id": "2",
                      "mapKey": {
                        "id": "3",
                        "constExpr": { "stringValue": "k" }
                      },
                      "value": {
                        "id": "4",
                        "constExpr": { "stringValue": "v" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "self_eval_bool_true",
            "expression": "true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [5],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "boolValue": true } }
            }
          },
          {
            "name": "self_eval_int_hex",
            "expression": "0x55555555",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "int64Value": "1431655765" } }
            }
          },
          {
            "name": "self_eval_int_hex_negative",
            "expression": "-0x55555555",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0 }
              },
              "expr": {
                "id": "1",
                "constExpr": { "int64Value": "-1431655765" }
              }
            }
          },
          {
            "name": "self_eval_uint_hex",
            "expression": "0x55555555u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0 }
              },
              "expr": {
                "id": "1",
                "constExpr": { "uint64Value": "1431655765" }
              }
            }
          },
          {
            "name": "self_eval_uint_alias_hex",
            "expression": "0x55555555U",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0 }
              },
              "expr": {
                "id": "1",
                "constExpr": { "uint64Value": "1431655765" }
              }
            }
          },
          {
            "name": "self_eval_unicode_escape_four",
            "expression": "\"\\u270c\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "stringValue": "â" } }
            }
          },
          {
            "name": "self_eval_unicode_escape_eight",
            "expression": "\"\\U0001f431\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "stringValue": "ð±" } }
            }
          },
          {
            "name": "self_eval_ascii_escape_seq",
            "expression": "\"\\a\\b\\f\\n\\r\\t\\v\\\"\\'\\\\\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": { "1": 0 }
              },
              "expr": {
                "id": "1",
                "constExpr": { "stringValue": "\u0007\b\f\n\r\t\u000b\"'\\" }
              }
            }
          }
        ]
      },
      {
        "name": "variables",
        "tests": [
          {
            "name": "self_eval_bound_lookup",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "self_eval_unbound_lookup",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "unbound_is_runtime_error",
            "expression": "x || true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 5, "3": 2 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_||_",
                  "args": [
                    { "id": "1", "identExpr": { "name": "x" } },
                    { "id": "2", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "functions",
        "tests": [
          {
            "name": "binop",
            "expression": "1 + 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [6],
                "positions": { "1": 0, "2": 2, "3": 4 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "1" } },
                    { "id": "3", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unbound",
            "expression": "f_unknown(17)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 9, "2": 10 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "f_unknown",
                  "args": [{ "id": "2", "constExpr": { "int64Value": "17" } }]
                }
              }
            }
          },
          {
            "name": "unbound_is_runtime_error",
            "expression": "f_unknown(17) || true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": { "1": 9, "2": 10, "3": 17, "4": 14 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_||_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "f_unknown",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "17" } }
                        ]
                      }
                    },
                    { "id": "3", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "reserved_const",
        "tests": [
          {
            "name": "false",
            "expression": "false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [6],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "boolValue": false } }
            }
          },
          {
            "name": "true",
            "expression": "true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [5],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "boolValue": true } }
            }
          },
          {
            "name": "null",
            "expression": "null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [5],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "nullValue": null } }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "bindings_ext",
    "sections": [
      {
        "name": "bind",
        "tests": [
          {
            "name": "boolean_literal",
            "expression": "cel.bind(t, true, t)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 0, "2": 8, "3": 9, "4": 12, "5": 18 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "bind",
                  "args": [
                    { "id": "3", "identExpr": { "name": "t" } },
                    { "id": "4", "constExpr": { "boolValue": true } },
                    { "id": "5", "identExpr": { "name": "t" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_concat",
            "expression": "cel.bind(msg, \"hello\", msg + msg + msg)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": {
                  "1": 0,
                  "2": 8,
                  "3": 9,
                  "4": 14,
                  "5": 23,
                  "6": 27,
                  "7": 29,
                  "8": 33,
                  "9": 35
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "bind",
                  "args": [
                    { "id": "3", "identExpr": { "name": "msg" } },
                    { "id": "4", "constExpr": { "stringValue": "hello" } },
                    {
                      "id": "8",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          {
                            "id": "6",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                { "id": "5", "identExpr": { "name": "msg" } },
                                { "id": "7", "identExpr": { "name": "msg" } }
                              ]
                            }
                          },
                          { "id": "9", "identExpr": { "name": "msg" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "bind_nested",
            "expression": "cel.bind(t1, true, cel.bind(t2, true, t1 \u0026\u0026 t2))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": {
                  "1": 0,
                  "2": 8,
                  "3": 9,
                  "4": 13,
                  "5": 19,
                  "6": 27,
                  "7": 28,
                  "8": 32,
                  "9": 38,
                  "10": 44,
                  "11": 41
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "bind",
                  "args": [
                    { "id": "3", "identExpr": { "name": "t1" } },
                    { "id": "4", "constExpr": { "boolValue": true } },
                    {
                      "id": "6",
                      "callExpr": {
                        "target": { "id": "5", "identExpr": { "name": "cel" } },
                        "function": "bind",
                        "args": [
                          { "id": "7", "identExpr": { "name": "t2" } },
                          { "id": "8", "constExpr": { "boolValue": true } },
                          {
                            "id": "11",
                            "callExpr": {
                              "function": "_\u0026\u0026_",
                              "args": [
                                { "id": "9", "identExpr": { "name": "t1" } },
                                { "id": "10", "identExpr": { "name": "t2" } }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "macro_exists",
            "expression": "cel.bind(valid_elems, [1, 2, 3], [3, 4, 5].exists(e, e in valid_elems))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [72],
                "positions": {
                  "1": 0,
                  "2": 8,
                  "3": 9,
                  "4": 22,
                  "5": 23,
                  "6": 26,
                  "7": 29,
                  "8": 33,
                  "9": 34,
                  "10": 37,
                  "11": 40,
                  "13": 50,
                  "14": 53,
                  "15": 55,
                  "16": 58,
                  "17": 49,
                  "18": 49,
                  "19": 49,
                  "20": 49,
                  "21": 49,
                  "22": 49,
                  "23": 49,
                  "24": 49
                },
                "macroCalls": {
                  "24": {
                    "callExpr": {
                      "target": {
                        "id": "8",
                        "listExpr": {
                          "elements": [
                            { "id": "9", "constExpr": { "int64Value": "3" } },
                            { "id": "10", "constExpr": { "int64Value": "4" } },
                            { "id": "11", "constExpr": { "int64Value": "5" } }
                          ]
                        }
                      },
                      "function": "exists",
                      "args": [
                        { "id": "13", "identExpr": { "name": "e" } },
                        {
                          "id": "15",
                          "callExpr": {
                            "function": "@in",
                            "args": [
                              { "id": "14", "identExpr": { "name": "e" } },
                              {
                                "id": "16",
                                "identExpr": { "name": "valid_elems" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "bind",
                  "args": [
                    { "id": "3", "identExpr": { "name": "valid_elems" } },
                    {
                      "id": "4",
                      "listExpr": {
                        "elements": [
                          { "id": "5", "constExpr": { "int64Value": "1" } },
                          { "id": "6", "constExpr": { "int64Value": "2" } },
                          { "id": "7", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    {
                      "id": "24",
                      "comprehensionExpr": {
                        "iterVar": "e",
                        "iterRange": {
                          "id": "8",
                          "listExpr": {
                            "elements": [
                              { "id": "9", "constExpr": { "int64Value": "3" } },
                              {
                                "id": "10",
                                "constExpr": { "int64Value": "4" }
                              },
                              { "id": "11", "constExpr": { "int64Value": "5" } }
                            ]
                          }
                        },
                        "accuVar": "__result__",
                        "accuInit": {
                          "id": "17",
                          "constExpr": { "boolValue": false }
                        },
                        "loopCondition": {
                          "id": "20",
                          "callExpr": {
                            "function": "@not_strictly_false",
                            "args": [
                              {
                                "id": "19",
                                "callExpr": {
                                  "function": "!_",
                                  "args": [
                                    {
                                      "id": "18",
                                      "identExpr": { "name": "__result__" }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "loopStep": {
                          "id": "22",
                          "callExpr": {
                            "function": "_||_",
                            "args": [
                              {
                                "id": "21",
                                "identExpr": { "name": "__result__" }
                              },
                              {
                                "id": "15",
                                "callExpr": {
                                  "function": "@in",
                                  "args": [
                                    {
                                      "id": "14",
                                      "identExpr": { "name": "e" }
                                    },
                                    {
                                      "id": "16",
                                      "identExpr": { "name": "valid_elems" }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "result": {
                          "id": "23",
                          "identExpr": { "name": "__result__" }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "macro_not_exists",
            "expression": "cel.bind(valid_elems, [1, 2, 3], ![4, 5].exists(e, e in valid_elems))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [70],
                "positions": {
                  "1": 0,
                  "2": 8,
                  "3": 9,
                  "4": 22,
                  "5": 23,
                  "6": 26,
                  "7": 29,
                  "8": 33,
                  "9": 34,
                  "10": 35,
                  "11": 38,
                  "13": 48,
                  "14": 51,
                  "15": 53,
                  "16": 56,
                  "17": 47,
                  "18": 47,
                  "19": 47,
                  "20": 47,
                  "21": 47,
                  "22": 47,
                  "23": 47,
                  "24": 47
                },
                "macroCalls": {
                  "24": {
                    "callExpr": {
                      "target": {
                        "id": "9",
                        "listExpr": {
                          "elements": [
                            { "id": "10", "constExpr": { "int64Value": "4" } },
                            { "id": "11", "constExpr": { "int64Value": "5" } }
                          ]
                        }
                      },
                      "function": "exists",
                      "args": [
                        { "id": "13", "identExpr": { "name": "e" } },
                        {
                          "id": "15",
                          "callExpr": {
                            "function": "@in",
                            "args": [
                              { "id": "14", "identExpr": { "name": "e" } },
                              {
                                "id": "16",
                                "identExpr": { "name": "valid_elems" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "bind",
                  "args": [
                    { "id": "3", "identExpr": { "name": "valid_elems" } },
                    {
                      "id": "4",
                      "listExpr": {
                        "elements": [
                          { "id": "5", "constExpr": { "int64Value": "1" } },
                          { "id": "6", "constExpr": { "int64Value": "2" } },
                          { "id": "7", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    {
                      "id": "8",
                      "callExpr": {
                        "function": "!_",
                        "args": [
                          {
                            "id": "24",
                            "comprehensionExpr": {
                              "iterVar": "e",
                              "iterRange": {
                                "id": "9",
                                "listExpr": {
                                  "elements": [
                                    {
                                      "id": "10",
                                      "constExpr": { "int64Value": "4" }
                                    },
                                    {
                                      "id": "11",
                                      "constExpr": { "int64Value": "5" }
                                    }
                                  ]
                                }
                              },
                              "accuVar": "__result__",
                              "accuInit": {
                                "id": "17",
                                "constExpr": { "boolValue": false }
                              },
                              "loopCondition": {
                                "id": "20",
                                "callExpr": {
                                  "function": "@not_strictly_false",
                                  "args": [
                                    {
                                      "id": "19",
                                      "callExpr": {
                                        "function": "!_",
                                        "args": [
                                          {
                                            "id": "18",
                                            "identExpr": {
                                              "name": "__result__"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "loopStep": {
                                "id": "22",
                                "callExpr": {
                                  "function": "_||_",
                                  "args": [
                                    {
                                      "id": "21",
                                      "identExpr": { "name": "__result__" }
                                    },
                                    {
                                      "id": "15",
                                      "callExpr": {
                                        "function": "@in",
                                        "args": [
                                          {
                                            "id": "14",
                                            "identExpr": { "name": "e" }
                                          },
                                          {
                                            "id": "16",
                                            "identExpr": {
                                              "name": "valid_elems"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "result": {
                                "id": "23",
                                "identExpr": { "name": "__result__" }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "block_ext",
    "sections": [
      {
        "name": "basic",
        "tests": [
          {
            "name": "int_add",
            "expression": "cel.block([1, cel.index(0) + 1, cel.index(1) + 1, cel.index(2) + 1], cel.index(3))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [83],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 14,
                  "6": 23,
                  "7": 24,
                  "8": 27,
                  "9": 29,
                  "10": 32,
                  "11": 41,
                  "12": 42,
                  "13": 45,
                  "14": 47,
                  "15": 50,
                  "16": 59,
                  "17": 60,
                  "18": 63,
                  "19": 65,
                  "20": 69,
                  "21": 78,
                  "22": 79
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          {
                            "id": "8",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "6",
                                  "callExpr": {
                                    "target": {
                                      "id": "5",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "7",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "9",
                                  "constExpr": { "int64Value": "1" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "13",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "11",
                                  "callExpr": {
                                    "target": {
                                      "id": "10",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "12",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "14",
                                  "constExpr": { "int64Value": "1" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "18",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "16",
                                  "callExpr": {
                                    "target": {
                                      "id": "15",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "17",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "19",
                                  "constExpr": { "int64Value": "1" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "21",
                      "callExpr": {
                        "target": {
                          "id": "20",
                          "identExpr": { "name": "cel" }
                        },
                        "function": "index",
                        "args": [
                          { "id": "22", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "size_1",
            "expression": "cel.block([[1, 2], size(cel.index(0)), cel.index(1) + cel.index(1), cel.index(2) + 1], cel.index(3))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [101],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 12,
                  "6": 15,
                  "7": 23,
                  "8": 24,
                  "9": 33,
                  "10": 34,
                  "11": 39,
                  "12": 48,
                  "13": 49,
                  "14": 52,
                  "15": 54,
                  "16": 63,
                  "17": 64,
                  "18": 68,
                  "19": 77,
                  "20": 78,
                  "21": 81,
                  "22": 83,
                  "23": 87,
                  "24": 96,
                  "25": 97
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "6",
                                  "constExpr": { "int64Value": "2" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "7",
                            "callExpr": {
                              "function": "size",
                              "args": [
                                {
                                  "id": "9",
                                  "callExpr": {
                                    "target": {
                                      "id": "8",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "10",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "14",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "12",
                                  "callExpr": {
                                    "target": {
                                      "id": "11",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "13",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "16",
                                  "callExpr": {
                                    "target": {
                                      "id": "15",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "17",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "21",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "19",
                                  "callExpr": {
                                    "target": {
                                      "id": "18",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "20",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "22",
                                  "constExpr": { "int64Value": "1" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "24",
                      "callExpr": {
                        "target": {
                          "id": "23",
                          "identExpr": { "name": "cel" }
                        },
                        "function": "index",
                        "args": [
                          { "id": "25", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "size_2",
            "expression": "cel.block([[1, 2], size(cel.index(0)), 2 + cel.index(1), cel.index(2) + cel.index(1), cel.index(3) + 1], cel.index(4))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [119],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 12,
                  "6": 15,
                  "7": 23,
                  "8": 24,
                  "9": 33,
                  "10": 34,
                  "11": 39,
                  "12": 41,
                  "13": 43,
                  "14": 52,
                  "15": 53,
                  "16": 57,
                  "17": 66,
                  "18": 67,
                  "19": 70,
                  "20": 72,
                  "21": 81,
                  "22": 82,
                  "23": 86,
                  "24": 95,
                  "25": 96,
                  "26": 99,
                  "27": 101,
                  "28": 105,
                  "29": 114,
                  "30": 115
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "6",
                                  "constExpr": { "int64Value": "2" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "7",
                            "callExpr": {
                              "function": "size",
                              "args": [
                                {
                                  "id": "9",
                                  "callExpr": {
                                    "target": {
                                      "id": "8",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "10",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "12",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "11",
                                  "constExpr": { "int64Value": "2" }
                                },
                                {
                                  "id": "14",
                                  "callExpr": {
                                    "target": {
                                      "id": "13",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "15",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "19",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "17",
                                  "callExpr": {
                                    "target": {
                                      "id": "16",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "18",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "21",
                                  "callExpr": {
                                    "target": {
                                      "id": "20",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "22",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "26",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "24",
                                  "callExpr": {
                                    "target": {
                                      "id": "23",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "25",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "27",
                                  "constExpr": { "int64Value": "1" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "29",
                      "callExpr": {
                        "target": {
                          "id": "28",
                          "identExpr": { "name": "cel" }
                        },
                        "function": "index",
                        "args": [
                          { "id": "30", "constExpr": { "int64Value": "4" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "size_3",
            "expression": "cel.block([[0], size(cel.index(0)), [1, 2], size(cel.index(2)), cel.index(1) + cel.index(1), cel.index(4) + cel.index(3), cel.index(5) + cel.index(3)], cel.index(6))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [166],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 12,
                  "6": 20,
                  "7": 21,
                  "8": 30,
                  "9": 31,
                  "10": 36,
                  "11": 37,
                  "12": 40,
                  "13": 48,
                  "14": 49,
                  "15": 58,
                  "16": 59,
                  "17": 64,
                  "18": 73,
                  "19": 74,
                  "20": 77,
                  "21": 79,
                  "22": 88,
                  "23": 89,
                  "24": 93,
                  "25": 102,
                  "26": 103,
                  "27": 106,
                  "28": 108,
                  "29": 117,
                  "30": 118,
                  "31": 122,
                  "32": 131,
                  "33": 132,
                  "34": 135,
                  "35": 137,
                  "36": 146,
                  "37": 147,
                  "38": 152,
                  "39": 161,
                  "40": 162
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "6",
                            "callExpr": {
                              "function": "size",
                              "args": [
                                {
                                  "id": "8",
                                  "callExpr": {
                                    "target": {
                                      "id": "7",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "9",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "10",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "11",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "12",
                                  "constExpr": { "int64Value": "2" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "13",
                            "callExpr": {
                              "function": "size",
                              "args": [
                                {
                                  "id": "15",
                                  "callExpr": {
                                    "target": {
                                      "id": "14",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "16",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "20",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "18",
                                  "callExpr": {
                                    "target": {
                                      "id": "17",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "19",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "22",
                                  "callExpr": {
                                    "target": {
                                      "id": "21",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "23",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "27",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "25",
                                  "callExpr": {
                                    "target": {
                                      "id": "24",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "26",
                                        "constExpr": { "int64Value": "4" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "29",
                                  "callExpr": {
                                    "target": {
                                      "id": "28",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "30",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "34",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "32",
                                  "callExpr": {
                                    "target": {
                                      "id": "31",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "33",
                                        "constExpr": { "int64Value": "5" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "36",
                                  "callExpr": {
                                    "target": {
                                      "id": "35",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "37",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "39",
                      "callExpr": {
                        "target": {
                          "id": "38",
                          "identExpr": { "name": "cel" }
                        },
                        "function": "index",
                        "args": [
                          { "id": "40", "constExpr": { "int64Value": "6" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "size_4",
            "expression": "cel.block([[0], size(cel.index(0)), [1, 2], size(cel.index(2)), [1, 2, 3], size(cel.index(4)), 5 + cel.index(1), cel.index(6) + cel.index(1), cel.index(7) + cel.index(3), cel.index(8) + cel.index(3), cel.index(9) + cel.index(5), cel.index(10) + cel.index(5)], cel.index(11))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [275],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 12,
                  "6": 20,
                  "7": 21,
                  "8": 30,
                  "9": 31,
                  "10": 36,
                  "11": 37,
                  "12": 40,
                  "13": 48,
                  "14": 49,
                  "15": 58,
                  "16": 59,
                  "17": 64,
                  "18": 65,
                  "19": 68,
                  "20": 71,
                  "21": 79,
                  "22": 80,
                  "23": 89,
                  "24": 90,
                  "25": 95,
                  "26": 97,
                  "27": 99,
                  "28": 108,
                  "29": 109,
                  "30": 113,
                  "31": 122,
                  "32": 123,
                  "33": 126,
                  "34": 128,
                  "35": 137,
                  "36": 138,
                  "37": 142,
                  "38": 151,
                  "39": 152,
                  "40": 155,
                  "41": 157,
                  "42": 166,
                  "43": 167,
                  "44": 171,
                  "45": 180,
                  "46": 181,
                  "47": 184,
                  "48": 186,
                  "49": 195,
                  "50": 196,
                  "51": 200,
                  "52": 209,
                  "53": 210,
                  "54": 213,
                  "55": 215,
                  "56": 224,
                  "57": 225,
                  "58": 229,
                  "59": 238,
                  "60": 239,
                  "61": 243,
                  "62": 245,
                  "63": 254,
                  "64": 255,
                  "65": 260,
                  "66": 269,
                  "67": 270
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "6",
                            "callExpr": {
                              "function": "size",
                              "args": [
                                {
                                  "id": "8",
                                  "callExpr": {
                                    "target": {
                                      "id": "7",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "9",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "10",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "11",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "12",
                                  "constExpr": { "int64Value": "2" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "13",
                            "callExpr": {
                              "function": "size",
                              "args": [
                                {
                                  "id": "15",
                                  "callExpr": {
                                    "target": {
                                      "id": "14",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "16",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "17",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "18",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "19",
                                  "constExpr": { "int64Value": "2" }
                                },
                                {
                                  "id": "20",
                                  "constExpr": { "int64Value": "3" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "21",
                            "callExpr": {
                              "function": "size",
                              "args": [
                                {
                                  "id": "23",
                                  "callExpr": {
                                    "target": {
                                      "id": "22",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "24",
                                        "constExpr": { "int64Value": "4" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "26",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "25",
                                  "constExpr": { "int64Value": "5" }
                                },
                                {
                                  "id": "28",
                                  "callExpr": {
                                    "target": {
                                      "id": "27",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "29",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "33",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "31",
                                  "callExpr": {
                                    "target": {
                                      "id": "30",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "32",
                                        "constExpr": { "int64Value": "6" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "35",
                                  "callExpr": {
                                    "target": {
                                      "id": "34",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "36",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "40",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "38",
                                  "callExpr": {
                                    "target": {
                                      "id": "37",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "39",
                                        "constExpr": { "int64Value": "7" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "42",
                                  "callExpr": {
                                    "target": {
                                      "id": "41",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "43",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "47",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "45",
                                  "callExpr": {
                                    "target": {
                                      "id": "44",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "46",
                                        "constExpr": { "int64Value": "8" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "49",
                                  "callExpr": {
                                    "target": {
                                      "id": "48",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "50",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "54",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "52",
                                  "callExpr": {
                                    "target": {
                                      "id": "51",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "53",
                                        "constExpr": { "int64Value": "9" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "56",
                                  "callExpr": {
                                    "target": {
                                      "id": "55",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "57",
                                        "constExpr": { "int64Value": "5" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "61",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "59",
                                  "callExpr": {
                                    "target": {
                                      "id": "58",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "60",
                                        "constExpr": { "int64Value": "10" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "63",
                                  "callExpr": {
                                    "target": {
                                      "id": "62",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "64",
                                        "constExpr": { "int64Value": "5" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "66",
                      "callExpr": {
                        "target": {
                          "id": "65",
                          "identExpr": { "name": "cel" }
                        },
                        "function": "index",
                        "args": [
                          { "id": "67", "constExpr": { "int64Value": "11" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "timestamp",
            "expression": "cel.block([timestamp(1000000000), int(cel.index(0)), timestamp(cel.index(1)), cel.index(2).getFullYear(), timestamp(50), int(cel.index(4)), timestamp(cel.index(5)), timestamp(200), int(cel.index(7)), timestamp(cel.index(8)), cel.index(9).getFullYear(), timestamp(75), int(cel.index(11)), timestamp(cel.index(12)), cel.index(13).getFullYear(), cel.index(3) + cel.index(14), cel.index(6).getFullYear(), cel.index(15) + cel.index(16), cel.index(17) + cel.index(3), cel.index(6).getSeconds(), cel.index(18) + cel.index(19), cel.index(20) + cel.index(10), cel.index(21) + cel.index(10), cel.index(13).getMinutes(), cel.index(22) + cel.index(23), cel.index(24) + cel.index(3)], cel.index(25))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [687],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 20,
                  "5": 21,
                  "6": 37,
                  "7": 38,
                  "8": 47,
                  "9": 48,
                  "10": 62,
                  "11": 63,
                  "12": 72,
                  "13": 73,
                  "14": 78,
                  "15": 87,
                  "16": 88,
                  "17": 102,
                  "18": 115,
                  "19": 116,
                  "20": 124,
                  "21": 125,
                  "22": 134,
                  "23": 135,
                  "24": 149,
                  "25": 150,
                  "26": 159,
                  "27": 160,
                  "28": 174,
                  "29": 175,
                  "30": 184,
                  "31": 185,
                  "32": 194,
                  "33": 195,
                  "34": 209,
                  "35": 210,
                  "36": 219,
                  "37": 220,
                  "38": 225,
                  "39": 234,
                  "40": 235,
                  "41": 249,
                  "42": 262,
                  "43": 263,
                  "44": 271,
                  "45": 272,
                  "46": 281,
                  "47": 282,
                  "48": 297,
                  "49": 298,
                  "50": 307,
                  "51": 308,
                  "52": 314,
                  "53": 323,
                  "54": 324,
                  "55": 339,
                  "56": 343,
                  "57": 352,
                  "58": 353,
                  "59": 356,
                  "60": 358,
                  "61": 367,
                  "62": 368,
                  "63": 373,
                  "64": 382,
                  "65": 383,
                  "66": 397,
                  "67": 401,
                  "68": 410,
                  "69": 411,
                  "70": 415,
                  "71": 417,
                  "72": 426,
                  "73": 427,
                  "74": 432,
                  "75": 441,
                  "76": 442,
                  "77": 446,
                  "78": 448,
                  "79": 457,
                  "80": 458,
                  "81": 462,
                  "82": 471,
                  "83": 472,
                  "84": 485,
                  "85": 489,
                  "86": 498,
                  "87": 499,
                  "88": 503,
                  "89": 505,
                  "90": 514,
                  "91": 515,
                  "92": 520,
                  "93": 529,
                  "94": 530,
                  "95": 534,
                  "96": 536,
                  "97": 545,
                  "98": 546,
                  "99": 551,
                  "100": 560,
                  "101": 561,
                  "102": 565,
                  "103": 567,
                  "104": 576,
                  "105": 577,
                  "106": 582,
                  "107": 591,
                  "108": 592,
                  "109": 606,
                  "110": 610,
                  "111": 619,
                  "112": 620,
                  "113": 624,
                  "114": 626,
                  "115": 635,
                  "116": 636,
                  "117": 641,
                  "118": 650,
                  "119": 651,
                  "120": 655,
                  "121": 657,
                  "122": 666,
                  "123": 667,
                  "124": 672,
                  "125": 681,
                  "126": 682
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "1000000000" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "6",
                            "callExpr": {
                              "function": "int",
                              "args": [
                                {
                                  "id": "8",
                                  "callExpr": {
                                    "target": {
                                      "id": "7",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "9",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "10",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "12",
                                  "callExpr": {
                                    "target": {
                                      "id": "11",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "13",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "17",
                            "callExpr": {
                              "target": {
                                "id": "15",
                                "callExpr": {
                                  "target": {
                                    "id": "14",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "16",
                                      "constExpr": { "int64Value": "2" }
                                    }
                                  ]
                                }
                              },
                              "function": "getFullYear"
                            }
                          },
                          {
                            "id": "18",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "19",
                                  "constExpr": { "int64Value": "50" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "20",
                            "callExpr": {
                              "function": "int",
                              "args": [
                                {
                                  "id": "22",
                                  "callExpr": {
                                    "target": {
                                      "id": "21",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "23",
                                        "constExpr": { "int64Value": "4" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "24",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "26",
                                  "callExpr": {
                                    "target": {
                                      "id": "25",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "27",
                                        "constExpr": { "int64Value": "5" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "28",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "29",
                                  "constExpr": { "int64Value": "200" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "30",
                            "callExpr": {
                              "function": "int",
                              "args": [
                                {
                                  "id": "32",
                                  "callExpr": {
                                    "target": {
                                      "id": "31",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "33",
                                        "constExpr": { "int64Value": "7" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "34",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "36",
                                  "callExpr": {
                                    "target": {
                                      "id": "35",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "37",
                                        "constExpr": { "int64Value": "8" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "41",
                            "callExpr": {
                              "target": {
                                "id": "39",
                                "callExpr": {
                                  "target": {
                                    "id": "38",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "40",
                                      "constExpr": { "int64Value": "9" }
                                    }
                                  ]
                                }
                              },
                              "function": "getFullYear"
                            }
                          },
                          {
                            "id": "42",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "43",
                                  "constExpr": { "int64Value": "75" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "44",
                            "callExpr": {
                              "function": "int",
                              "args": [
                                {
                                  "id": "46",
                                  "callExpr": {
                                    "target": {
                                      "id": "45",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "47",
                                        "constExpr": { "int64Value": "11" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "48",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "50",
                                  "callExpr": {
                                    "target": {
                                      "id": "49",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "51",
                                        "constExpr": { "int64Value": "12" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "55",
                            "callExpr": {
                              "target": {
                                "id": "53",
                                "callExpr": {
                                  "target": {
                                    "id": "52",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "54",
                                      "constExpr": { "int64Value": "13" }
                                    }
                                  ]
                                }
                              },
                              "function": "getFullYear"
                            }
                          },
                          {
                            "id": "59",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "57",
                                  "callExpr": {
                                    "target": {
                                      "id": "56",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "58",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "61",
                                  "callExpr": {
                                    "target": {
                                      "id": "60",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "62",
                                        "constExpr": { "int64Value": "14" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "66",
                            "callExpr": {
                              "target": {
                                "id": "64",
                                "callExpr": {
                                  "target": {
                                    "id": "63",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "65",
                                      "constExpr": { "int64Value": "6" }
                                    }
                                  ]
                                }
                              },
                              "function": "getFullYear"
                            }
                          },
                          {
                            "id": "70",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "68",
                                  "callExpr": {
                                    "target": {
                                      "id": "67",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "69",
                                        "constExpr": { "int64Value": "15" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "72",
                                  "callExpr": {
                                    "target": {
                                      "id": "71",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "73",
                                        "constExpr": { "int64Value": "16" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "77",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "75",
                                  "callExpr": {
                                    "target": {
                                      "id": "74",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "76",
                                        "constExpr": { "int64Value": "17" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "79",
                                  "callExpr": {
                                    "target": {
                                      "id": "78",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "80",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "84",
                            "callExpr": {
                              "target": {
                                "id": "82",
                                "callExpr": {
                                  "target": {
                                    "id": "81",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "83",
                                      "constExpr": { "int64Value": "6" }
                                    }
                                  ]
                                }
                              },
                              "function": "getSeconds"
                            }
                          },
                          {
                            "id": "88",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "86",
                                  "callExpr": {
                                    "target": {
                                      "id": "85",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "87",
                                        "constExpr": { "int64Value": "18" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "90",
                                  "callExpr": {
                                    "target": {
                                      "id": "89",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "91",
                                        "constExpr": { "int64Value": "19" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "95",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "93",
                                  "callExpr": {
                                    "target": {
                                      "id": "92",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "94",
                                        "constExpr": { "int64Value": "20" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "97",
                                  "callExpr": {
                                    "target": {
                                      "id": "96",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "98",
                                        "constExpr": { "int64Value": "10" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "102",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "100",
                                  "callExpr": {
                                    "target": {
                                      "id": "99",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "101",
                                        "constExpr": { "int64Value": "21" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "104",
                                  "callExpr": {
                                    "target": {
                                      "id": "103",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "105",
                                        "constExpr": { "int64Value": "10" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "109",
                            "callExpr": {
                              "target": {
                                "id": "107",
                                "callExpr": {
                                  "target": {
                                    "id": "106",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "108",
                                      "constExpr": { "int64Value": "13" }
                                    }
                                  ]
                                }
                              },
                              "function": "getMinutes"
                            }
                          },
                          {
                            "id": "113",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "111",
                                  "callExpr": {
                                    "target": {
                                      "id": "110",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "112",
                                        "constExpr": { "int64Value": "22" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "115",
                                  "callExpr": {
                                    "target": {
                                      "id": "114",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "116",
                                        "constExpr": { "int64Value": "23" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "120",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "118",
                                  "callExpr": {
                                    "target": {
                                      "id": "117",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "119",
                                        "constExpr": { "int64Value": "24" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "122",
                                  "callExpr": {
                                    "target": {
                                      "id": "121",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "123",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "125",
                      "callExpr": {
                        "target": {
                          "id": "124",
                          "identExpr": { "name": "cel" }
                        },
                        "function": "index",
                        "args": [
                          { "id": "126", "constExpr": { "int64Value": "25" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "map_index",
            "expression": "cel.block([{\"a\": 2}, cel.index(0)[\"a\"], cel.index(1) * cel.index(1), cel.index(1) + cel.index(2)], cel.index(3))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [113],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 15,
                  "6": 12,
                  "7": 17,
                  "8": 21,
                  "9": 30,
                  "10": 31,
                  "11": 33,
                  "12": 34,
                  "13": 40,
                  "14": 49,
                  "15": 50,
                  "16": 53,
                  "17": 55,
                  "18": 64,
                  "19": 65,
                  "20": 69,
                  "21": 78,
                  "22": 79,
                  "23": 82,
                  "24": 84,
                  "25": 93,
                  "26": 94,
                  "27": 99,
                  "28": 108,
                  "29": 109
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "5",
                                  "mapKey": {
                                    "id": "6",
                                    "constExpr": { "stringValue": "a" }
                                  },
                                  "value": {
                                    "id": "7",
                                    "constExpr": { "int64Value": "2" }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "11",
                            "callExpr": {
                              "function": "_[_]",
                              "args": [
                                {
                                  "id": "9",
                                  "callExpr": {
                                    "target": {
                                      "id": "8",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "10",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "12",
                                  "constExpr": { "stringValue": "a" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "16",
                            "callExpr": {
                              "function": "_*_",
                              "args": [
                                {
                                  "id": "14",
                                  "callExpr": {
                                    "target": {
                                      "id": "13",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "15",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "18",
                                  "callExpr": {
                                    "target": {
                                      "id": "17",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "19",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "23",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "21",
                                  "callExpr": {
                                    "target": {
                                      "id": "20",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "22",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "25",
                                  "callExpr": {
                                    "target": {
                                      "id": "24",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "26",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "28",
                      "callExpr": {
                        "target": {
                          "id": "27",
                          "identExpr": { "name": "cel" }
                        },
                        "function": "index",
                        "args": [
                          { "id": "29", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "nested_map_construction",
            "expression": "cel.block([{\"b\": 1}, {\"e\": cel.index(0)}], {\"a\": cel.index(0), \"c\": cel.index(0), \"d\": cel.index(1), \"e\": cel.index(1)})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [121],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 15,
                  "6": 12,
                  "7": 17,
                  "8": 21,
                  "9": 25,
                  "10": 22,
                  "11": 27,
                  "12": 36,
                  "13": 37,
                  "14": 43,
                  "15": 47,
                  "16": 44,
                  "17": 49,
                  "18": 58,
                  "19": 59,
                  "20": 66,
                  "21": 63,
                  "22": 68,
                  "23": 77,
                  "24": 78,
                  "25": 85,
                  "26": 82,
                  "27": 87,
                  "28": 96,
                  "29": 97,
                  "30": 104,
                  "31": 101,
                  "32": 106,
                  "33": 115,
                  "34": 116
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "5",
                                  "mapKey": {
                                    "id": "6",
                                    "constExpr": { "stringValue": "b" }
                                  },
                                  "value": {
                                    "id": "7",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "8",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "9",
                                  "mapKey": {
                                    "id": "10",
                                    "constExpr": { "stringValue": "e" }
                                  },
                                  "value": {
                                    "id": "12",
                                    "callExpr": {
                                      "target": {
                                        "id": "11",
                                        "identExpr": { "name": "cel" }
                                      },
                                      "function": "index",
                                      "args": [
                                        {
                                          "id": "13",
                                          "constExpr": { "int64Value": "0" }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "14",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "15",
                            "mapKey": {
                              "id": "16",
                              "constExpr": { "stringValue": "a" }
                            },
                            "value": {
                              "id": "18",
                              "callExpr": {
                                "target": {
                                  "id": "17",
                                  "identExpr": { "name": "cel" }
                                },
                                "function": "index",
                                "args": [
                                  {
                                    "id": "19",
                                    "constExpr": { "int64Value": "0" }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "id": "20",
                            "mapKey": {
                              "id": "21",
                              "constExpr": { "stringValue": "c" }
                            },
                            "value": {
                              "id": "23",
                              "callExpr": {
                                "target": {
                                  "id": "22",
                                  "identExpr": { "name": "cel" }
                                },
                                "function": "index",
                                "args": [
                                  {
                                    "id": "24",
                                    "constExpr": { "int64Value": "0" }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "id": "25",
                            "mapKey": {
                              "id": "26",
                              "constExpr": { "stringValue": "d" }
                            },
                            "value": {
                              "id": "28",
                              "callExpr": {
                                "target": {
                                  "id": "27",
                                  "identExpr": { "name": "cel" }
                                },
                                "function": "index",
                                "args": [
                                  {
                                    "id": "29",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "id": "30",
                            "mapKey": {
                              "id": "31",
                              "constExpr": { "stringValue": "e" }
                            },
                            "value": {
                              "id": "33",
                              "callExpr": {
                                "target": {
                                  "id": "32",
                                  "identExpr": { "name": "cel" }
                                },
                                "function": "index",
                                "args": [
                                  {
                                    "id": "34",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "nested_list_construction",
            "expression": "cel.block([[1, 2, 3, 4], [1, 2], [cel.index(1), cel.index(0)]], [1, cel.index(0), 2, cel.index(0), 5, cel.index(0), 7, cel.index(2), cel.index(1)])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [148],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 12,
                  "6": 15,
                  "7": 18,
                  "8": 21,
                  "9": 25,
                  "10": 26,
                  "11": 29,
                  "12": 33,
                  "13": 34,
                  "14": 43,
                  "15": 44,
                  "16": 48,
                  "17": 57,
                  "18": 58,
                  "19": 64,
                  "20": 65,
                  "21": 68,
                  "22": 77,
                  "23": 78,
                  "24": 82,
                  "25": 85,
                  "26": 94,
                  "27": 95,
                  "28": 99,
                  "29": 102,
                  "30": 111,
                  "31": 112,
                  "32": 116,
                  "33": 119,
                  "34": 128,
                  "35": 129,
                  "36": 133,
                  "37": 142,
                  "38": 143
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "6",
                                  "constExpr": { "int64Value": "2" }
                                },
                                {
                                  "id": "7",
                                  "constExpr": { "int64Value": "3" }
                                },
                                {
                                  "id": "8",
                                  "constExpr": { "int64Value": "4" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "9",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "10",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "11",
                                  "constExpr": { "int64Value": "2" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "12",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "14",
                                  "callExpr": {
                                    "target": {
                                      "id": "13",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "15",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "17",
                                  "callExpr": {
                                    "target": {
                                      "id": "16",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "18",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "19",
                      "listExpr": {
                        "elements": [
                          { "id": "20", "constExpr": { "int64Value": "1" } },
                          {
                            "id": "22",
                            "callExpr": {
                              "target": {
                                "id": "21",
                                "identExpr": { "name": "cel" }
                              },
                              "function": "index",
                              "args": [
                                {
                                  "id": "23",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          { "id": "24", "constExpr": { "int64Value": "2" } },
                          {
                            "id": "26",
                            "callExpr": {
                              "target": {
                                "id": "25",
                                "identExpr": { "name": "cel" }
                              },
                              "function": "index",
                              "args": [
                                {
                                  "id": "27",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          { "id": "28", "constExpr": { "int64Value": "5" } },
                          {
                            "id": "30",
                            "callExpr": {
                              "target": {
                                "id": "29",
                                "identExpr": { "name": "cel" }
                              },
                              "function": "index",
                              "args": [
                                {
                                  "id": "31",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          { "id": "32", "constExpr": { "int64Value": "7" } },
                          {
                            "id": "34",
                            "callExpr": {
                              "target": {
                                "id": "33",
                                "identExpr": { "name": "cel" }
                              },
                              "function": "index",
                              "args": [
                                {
                                  "id": "35",
                                  "constExpr": { "int64Value": "2" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "37",
                            "callExpr": {
                              "target": {
                                "id": "36",
                                "identExpr": { "name": "cel" }
                              },
                              "function": "index",
                              "args": [
                                {
                                  "id": "38",
                                  "constExpr": { "int64Value": "1" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "select",
            "expression": "cel.block([msg.single_int64, cel.index(0) + cel.index(0)], cel.index(1))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [73],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 14,
                  "6": 29,
                  "7": 38,
                  "8": 39,
                  "9": 42,
                  "10": 44,
                  "11": 53,
                  "12": 54,
                  "13": 59,
                  "14": 68,
                  "15": 69
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "5",
                            "selectExpr": {
                              "operand": {
                                "id": "4",
                                "identExpr": { "name": "msg" }
                              },
                              "field": "single_int64"
                            }
                          },
                          {
                            "id": "9",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "7",
                                  "callExpr": {
                                    "target": {
                                      "id": "6",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "8",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "11",
                                  "callExpr": {
                                    "target": {
                                      "id": "10",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "12",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "14",
                      "callExpr": {
                        "target": {
                          "id": "13",
                          "identExpr": { "name": "cel" }
                        },
                        "function": "index",
                        "args": [
                          { "id": "15", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "select_nested_1",
            "expression": "cel.block([msg.oneof_type, cel.index(0).payload, cel.index(1).single_int64, cel.index(1).single_int32, cel.index(2) + cel.index(3), cel.index(4) + cel.index(2), msg.single_int64, cel.index(5) + cel.index(6), cel.index(1).oneof_type, cel.index(8).payload, cel.index(9).single_int64, cel.index(7) + cel.index(10)], cel.index(11))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [328],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 14,
                  "6": 27,
                  "7": 36,
                  "8": 37,
                  "9": 39,
                  "10": 49,
                  "11": 58,
                  "12": 59,
                  "13": 61,
                  "14": 76,
                  "15": 85,
                  "16": 86,
                  "17": 88,
                  "18": 103,
                  "19": 112,
                  "20": 113,
                  "21": 116,
                  "22": 118,
                  "23": 127,
                  "24": 128,
                  "25": 132,
                  "26": 141,
                  "27": 142,
                  "28": 145,
                  "29": 147,
                  "30": 156,
                  "31": 157,
                  "32": 161,
                  "33": 164,
                  "34": 179,
                  "35": 188,
                  "36": 189,
                  "37": 192,
                  "38": 194,
                  "39": 203,
                  "40": 204,
                  "41": 208,
                  "42": 217,
                  "43": 218,
                  "44": 220,
                  "45": 233,
                  "46": 242,
                  "47": 243,
                  "48": 245,
                  "49": 255,
                  "50": 264,
                  "51": 265,
                  "52": 267,
                  "53": 282,
                  "54": 291,
                  "55": 292,
                  "56": 295,
                  "57": 297,
                  "58": 306,
                  "59": 307,
                  "60": 313,
                  "61": 322,
                  "62": 323
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "5",
                            "selectExpr": {
                              "operand": {
                                "id": "4",
                                "identExpr": { "name": "msg" }
                              },
                              "field": "oneof_type"
                            }
                          },
                          {
                            "id": "9",
                            "selectExpr": {
                              "operand": {
                                "id": "7",
                                "callExpr": {
                                  "target": {
                                    "id": "6",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "8",
                                      "constExpr": { "int64Value": "0" }
                                    }
                                  ]
                                }
                              },
                              "field": "payload"
                            }
                          },
                          {
                            "id": "13",
                            "selectExpr": {
                              "operand": {
                                "id": "11",
                                "callExpr": {
                                  "target": {
                                    "id": "10",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "12",
                                      "constExpr": { "int64Value": "1" }
                                    }
                                  ]
                                }
                              },
                              "field": "single_int64"
                            }
                          },
                          {
                            "id": "17",
                            "selectExpr": {
                              "operand": {
                                "id": "15",
                                "callExpr": {
                                  "target": {
                                    "id": "14",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "16",
                                      "constExpr": { "int64Value": "1" }
                                    }
                                  ]
                                }
                              },
                              "field": "single_int32"
                            }
                          },
                          {
                            "id": "21",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "19",
                                  "callExpr": {
                                    "target": {
                                      "id": "18",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "20",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "23",
                                  "callExpr": {
                                    "target": {
                                      "id": "22",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "24",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "28",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "26",
                                  "callExpr": {
                                    "target": {
                                      "id": "25",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "27",
                                        "constExpr": { "int64Value": "4" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "30",
                                  "callExpr": {
                                    "target": {
                                      "id": "29",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "31",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "33",
                            "selectExpr": {
                              "operand": {
                                "id": "32",
                                "identExpr": { "name": "msg" }
                              },
                              "field": "single_int64"
                            }
                          },
                          {
                            "id": "37",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "35",
                                  "callExpr": {
                                    "target": {
                                      "id": "34",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "36",
                                        "constExpr": { "int64Value": "5" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "39",
                                  "callExpr": {
                                    "target": {
                                      "id": "38",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "40",
                                        "constExpr": { "int64Value": "6" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "44",
                            "selectExpr": {
                              "operand": {
                                "id": "42",
                                "callExpr": {
                                  "target": {
                                    "id": "41",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "43",
                                      "constExpr": { "int64Value": "1" }
                                    }
                                  ]
                                }
                              },
                              "field": "oneof_type"
                            }
                          },
                          {
                            "id": "48",
                            "selectExpr": {
                              "operand": {
                                "id": "46",
                                "callExpr": {
                                  "target": {
                                    "id": "45",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "47",
                                      "constExpr": { "int64Value": "8" }
                                    }
                                  ]
                                }
                              },
                              "field": "payload"
                            }
                          },
                          {
                            "id": "52",
                            "selectExpr": {
                              "operand": {
                                "id": "50",
                                "callExpr": {
                                  "target": {
                                    "id": "49",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "51",
                                      "constExpr": { "int64Value": "9" }
                                    }
                                  ]
                                }
                              },
                              "field": "single_int64"
                            }
                          },
                          {
                            "id": "56",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "54",
                                  "callExpr": {
                                    "target": {
                                      "id": "53",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "55",
                                        "constExpr": { "int64Value": "7" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "58",
                                  "callExpr": {
                                    "target": {
                                      "id": "57",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "59",
                                        "constExpr": { "int64Value": "10" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "61",
                      "callExpr": {
                        "target": {
                          "id": "60",
                          "identExpr": { "name": "cel" }
                        },
                        "function": "index",
                        "args": [
                          { "id": "62", "constExpr": { "int64Value": "11" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "select_nested_2",
            "expression": "cel.block([msg.oneof_type, cel.index(0).payload, cel.index(1).oneof_type, cel.index(2).payload, cel.index(3).oneof_type, cel.index(4).payload, cel.index(5).oneof_type, cel.index(6).payload, cel.index(7).single_bool, true || cel.index(8), cel.index(4).child, cel.index(10).child, cel.index(11).payload, cel.index(12).single_bool], cel.index(9) || cel.index(13))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [361],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 14,
                  "6": 27,
                  "7": 36,
                  "8": 37,
                  "9": 39,
                  "10": 49,
                  "11": 58,
                  "12": 59,
                  "13": 61,
                  "14": 74,
                  "15": 83,
                  "16": 84,
                  "17": 86,
                  "18": 96,
                  "19": 105,
                  "20": 106,
                  "21": 108,
                  "22": 121,
                  "23": 130,
                  "24": 131,
                  "25": 133,
                  "26": 143,
                  "27": 152,
                  "28": 153,
                  "29": 155,
                  "30": 168,
                  "31": 177,
                  "32": 178,
                  "33": 180,
                  "34": 190,
                  "35": 199,
                  "36": 200,
                  "37": 202,
                  "38": 216,
                  "39": 224,
                  "40": 233,
                  "41": 234,
                  "42": 221,
                  "43": 238,
                  "44": 247,
                  "45": 248,
                  "46": 250,
                  "47": 258,
                  "48": 267,
                  "49": 268,
                  "50": 271,
                  "51": 279,
                  "52": 288,
                  "53": 289,
                  "54": 292,
                  "55": 302,
                  "56": 311,
                  "57": 312,
                  "58": 315,
                  "59": 330,
                  "60": 339,
                  "61": 340,
                  "62": 346,
                  "63": 355,
                  "64": 356,
                  "65": 343
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "5",
                            "selectExpr": {
                              "operand": {
                                "id": "4",
                                "identExpr": { "name": "msg" }
                              },
                              "field": "oneof_type"
                            }
                          },
                          {
                            "id": "9",
                            "selectExpr": {
                              "operand": {
                                "id": "7",
                                "callExpr": {
                                  "target": {
                                    "id": "6",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "8",
                                      "constExpr": { "int64Value": "0" }
                                    }
                                  ]
                                }
                              },
                              "field": "payload"
                            }
                          },
                          {
                            "id": "13",
                            "selectExpr": {
                              "operand": {
                                "id": "11",
                                "callExpr": {
                                  "target": {
                                    "id": "10",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "12",
                                      "constExpr": { "int64Value": "1" }
                                    }
                                  ]
                                }
                              },
                              "field": "oneof_type"
                            }
                          },
                          {
                            "id": "17",
                            "selectExpr": {
                              "operand": {
                                "id": "15",
                                "callExpr": {
                                  "target": {
                                    "id": "14",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "16",
                                      "constExpr": { "int64Value": "2" }
                                    }
                                  ]
                                }
                              },
                              "field": "payload"
                            }
                          },
                          {
                            "id": "21",
                            "selectExpr": {
                              "operand": {
                                "id": "19",
                                "callExpr": {
                                  "target": {
                                    "id": "18",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "20",
                                      "constExpr": { "int64Value": "3" }
                                    }
                                  ]
                                }
                              },
                              "field": "oneof_type"
                            }
                          },
                          {
                            "id": "25",
                            "selectExpr": {
                              "operand": {
                                "id": "23",
                                "callExpr": {
                                  "target": {
                                    "id": "22",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "24",
                                      "constExpr": { "int64Value": "4" }
                                    }
                                  ]
                                }
                              },
                              "field": "payload"
                            }
                          },
                          {
                            "id": "29",
                            "selectExpr": {
                              "operand": {
                                "id": "27",
                                "callExpr": {
                                  "target": {
                                    "id": "26",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "28",
                                      "constExpr": { "int64Value": "5" }
                                    }
                                  ]
                                }
                              },
                              "field": "oneof_type"
                            }
                          },
                          {
                            "id": "33",
                            "selectExpr": {
                              "operand": {
                                "id": "31",
                                "callExpr": {
                                  "target": {
                                    "id": "30",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "32",
                                      "constExpr": { "int64Value": "6" }
                                    }
                                  ]
                                }
                              },
                              "field": "payload"
                            }
                          },
                          {
                            "id": "37",
                            "selectExpr": {
                              "operand": {
                                "id": "35",
                                "callExpr": {
                                  "target": {
                                    "id": "34",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "36",
                                      "constExpr": { "int64Value": "7" }
                                    }
                                  ]
                                }
                              },
                              "field": "single_bool"
                            }
                          },
                          {
                            "id": "42",
                            "callExpr": {
                              "function": "_||_",
                              "args": [
                                {
                                  "id": "38",
                                  "constExpr": { "boolValue": true }
                                },
                                {
                                  "id": "40",
                                  "callExpr": {
                                    "target": {
                                      "id": "39",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "41",
                                        "constExpr": { "int64Value": "8" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "46",
                            "selectExpr": {
                              "operand": {
                                "id": "44",
                                "callExpr": {
                                  "target": {
                                    "id": "43",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "45",
                                      "constExpr": { "int64Value": "4" }
                                    }
                                  ]
                                }
                              },
                              "field": "child"
                            }
                          },
                          {
                            "id": "50",
                            "selectExpr": {
                              "operand": {
                                "id": "48",
                                "callExpr": {
                                  "target": {
                                    "id": "47",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "49",
                                      "constExpr": { "int64Value": "10" }
                                    }
                                  ]
                                }
                              },
                              "field": "child"
                            }
                          },
                          {
                            "id": "54",
                            "selectExpr": {
                              "operand": {
                                "id": "52",
                                "callExpr": {
                                  "target": {
                                    "id": "51",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "53",
                                      "constExpr": { "int64Value": "11" }
                                    }
                                  ]
                                }
                              },
                              "field": "payload"
                            }
                          },
                          {
                            "id": "58",
                            "selectExpr": {
                              "operand": {
                                "id": "56",
                                "callExpr": {
                                  "target": {
                                    "id": "55",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "57",
                                      "constExpr": { "int64Value": "12" }
                                    }
                                  ]
                                }
                              },
                              "field": "single_bool"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "65",
                      "callExpr": {
                        "function": "_||_",
                        "args": [
                          {
                            "id": "60",
                            "callExpr": {
                              "target": {
                                "id": "59",
                                "identExpr": { "name": "cel" }
                              },
                              "function": "index",
                              "args": [
                                {
                                  "id": "61",
                                  "constExpr": { "int64Value": "9" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "63",
                            "callExpr": {
                              "target": {
                                "id": "62",
                                "identExpr": { "name": "cel" }
                              },
                              "function": "index",
                              "args": [
                                {
                                  "id": "64",
                                  "constExpr": { "int64Value": "13" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "select_nested_message_map_index_1",
            "expression": "cel.block([msg.oneof_type, cel.index(0).payload, cel.index(1).map_int32_int64, cel.index(2)[1], cel.index(3) + cel.index(3), cel.index(4) + cel.index(3)], cel.index(5))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [169],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 14,
                  "6": 27,
                  "7": 36,
                  "8": 37,
                  "9": 39,
                  "10": 49,
                  "11": 58,
                  "12": 59,
                  "13": 61,
                  "14": 79,
                  "15": 88,
                  "16": 89,
                  "17": 91,
                  "18": 92,
                  "19": 96,
                  "20": 105,
                  "21": 106,
                  "22": 109,
                  "23": 111,
                  "24": 120,
                  "25": 121,
                  "26": 125,
                  "27": 134,
                  "28": 135,
                  "29": 138,
                  "30": 140,
                  "31": 149,
                  "32": 150,
                  "33": 155,
                  "34": 164,
                  "35": 165
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "5",
                            "selectExpr": {
                              "operand": {
                                "id": "4",
                                "identExpr": { "name": "msg" }
                              },
                              "field": "oneof_type"
                            }
                          },
                          {
                            "id": "9",
                            "selectExpr": {
                              "operand": {
                                "id": "7",
                                "callExpr": {
                                  "target": {
                                    "id": "6",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "8",
                                      "constExpr": { "int64Value": "0" }
                                    }
                                  ]
                                }
                              },
                              "field": "payload"
                            }
                          },
                          {
                            "id": "13",
                            "selectExpr": {
                              "operand": {
                                "id": "11",
                                "callExpr": {
                                  "target": {
                                    "id": "10",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "12",
                                      "constExpr": { "int64Value": "1" }
                                    }
                                  ]
                                }
                              },
                              "field": "map_int32_int64"
                            }
                          },
                          {
                            "id": "17",
                            "callExpr": {
                              "function": "_[_]",
                              "args": [
                                {
                                  "id": "15",
                                  "callExpr": {
                                    "target": {
                                      "id": "14",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "16",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "18",
                                  "constExpr": { "int64Value": "1" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "22",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "20",
                                  "callExpr": {
                                    "target": {
                                      "id": "19",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "21",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "24",
                                  "callExpr": {
                                    "target": {
                                      "id": "23",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "25",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "29",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "27",
                                  "callExpr": {
                                    "target": {
                                      "id": "26",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "28",
                                        "constExpr": { "int64Value": "4" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "31",
                                  "callExpr": {
                                    "target": {
                                      "id": "30",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "32",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "34",
                      "callExpr": {
                        "target": {
                          "id": "33",
                          "identExpr": { "name": "cel" }
                        },
                        "function": "index",
                        "args": [
                          { "id": "35", "constExpr": { "int64Value": "5" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "select_nested_message_map_index_2",
            "expression": "cel.block([msg.oneof_type, cel.index(0).payload, cel.index(1).map_int32_int64, cel.index(2)[0], cel.index(2)[1], cel.index(3) + cel.index(4), cel.index(2)[2], cel.index(5) + cel.index(6)], cel.index(7))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [203],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 14,
                  "6": 27,
                  "7": 36,
                  "8": 37,
                  "9": 39,
                  "10": 49,
                  "11": 58,
                  "12": 59,
                  "13": 61,
                  "14": 79,
                  "15": 88,
                  "16": 89,
                  "17": 91,
                  "18": 92,
                  "19": 96,
                  "20": 105,
                  "21": 106,
                  "22": 108,
                  "23": 109,
                  "24": 113,
                  "25": 122,
                  "26": 123,
                  "27": 126,
                  "28": 128,
                  "29": 137,
                  "30": 138,
                  "31": 142,
                  "32": 151,
                  "33": 152,
                  "34": 154,
                  "35": 155,
                  "36": 159,
                  "37": 168,
                  "38": 169,
                  "39": 172,
                  "40": 174,
                  "41": 183,
                  "42": 184,
                  "43": 189,
                  "44": 198,
                  "45": 199
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "5",
                            "selectExpr": {
                              "operand": {
                                "id": "4",
                                "identExpr": { "name": "msg" }
                              },
                              "field": "oneof_type"
                            }
                          },
                          {
                            "id": "9",
                            "selectExpr": {
                              "operand": {
                                "id": "7",
                                "callExpr": {
                                  "target": {
                                    "id": "6",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "8",
                                      "constExpr": { "int64Value": "0" }
                                    }
                                  ]
                                }
                              },
                              "field": "payload"
                            }
                          },
                          {
                            "id": "13",
                            "selectExpr": {
                              "operand": {
                                "id": "11",
                                "callExpr": {
                                  "target": {
                                    "id": "10",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "12",
                                      "constExpr": { "int64Value": "1" }
                                    }
                                  ]
                                }
                              },
                              "field": "map_int32_int64"
                            }
                          },
                          {
                            "id": "17",
                            "callExpr": {
                              "function": "_[_]",
                              "args": [
                                {
                                  "id": "15",
                                  "callExpr": {
                                    "target": {
                                      "id": "14",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "16",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "18",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "22",
                            "callExpr": {
                              "function": "_[_]",
                              "args": [
                                {
                                  "id": "20",
                                  "callExpr": {
                                    "target": {
                                      "id": "19",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "21",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "23",
                                  "constExpr": { "int64Value": "1" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "27",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "25",
                                  "callExpr": {
                                    "target": {
                                      "id": "24",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "26",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "29",
                                  "callExpr": {
                                    "target": {
                                      "id": "28",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "30",
                                        "constExpr": { "int64Value": "4" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "34",
                            "callExpr": {
                              "function": "_[_]",
                              "args": [
                                {
                                  "id": "32",
                                  "callExpr": {
                                    "target": {
                                      "id": "31",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "33",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "35",
                                  "constExpr": { "int64Value": "2" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "39",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "37",
                                  "callExpr": {
                                    "target": {
                                      "id": "36",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "38",
                                        "constExpr": { "int64Value": "5" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "41",
                                  "callExpr": {
                                    "target": {
                                      "id": "40",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "42",
                                        "constExpr": { "int64Value": "6" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "44",
                      "callExpr": {
                        "target": {
                          "id": "43",
                          "identExpr": { "name": "cel" }
                        },
                        "function": "index",
                        "args": [
                          { "id": "45", "constExpr": { "int64Value": "7" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary",
            "expression": "cel.block([msg.single_int64, cel.index(0) \u003e 0, cel.index(1) ? cel.index(0) : 0], cel.index(2))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [95],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 14,
                  "6": 29,
                  "7": 38,
                  "8": 39,
                  "9": 42,
                  "10": 44,
                  "11": 47,
                  "12": 56,
                  "13": 57,
                  "14": 60,
                  "15": 62,
                  "16": 71,
                  "17": 72,
                  "18": 77,
                  "19": 81,
                  "20": 90,
                  "21": 91
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "5",
                            "selectExpr": {
                              "operand": {
                                "id": "4",
                                "identExpr": { "name": "msg" }
                              },
                              "field": "single_int64"
                            }
                          },
                          {
                            "id": "9",
                            "callExpr": {
                              "function": "_\u003e_",
                              "args": [
                                {
                                  "id": "7",
                                  "callExpr": {
                                    "target": {
                                      "id": "6",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "8",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "10",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "14",
                            "callExpr": {
                              "function": "_?_:_",
                              "args": [
                                {
                                  "id": "12",
                                  "callExpr": {
                                    "target": {
                                      "id": "11",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "13",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "16",
                                  "callExpr": {
                                    "target": {
                                      "id": "15",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "17",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "18",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "20",
                      "callExpr": {
                        "target": {
                          "id": "19",
                          "identExpr": { "name": "cel" }
                        },
                        "function": "index",
                        "args": [
                          { "id": "21", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "nested_ternary",
            "expression": "cel.block([msg.single_int64, msg.single_int32, cel.index(0) \u003e 0, cel.index(1) \u003e 0, cel.index(0) + cel.index(1), cel.index(3) ? cel.index(4) : 0, cel.index(2) ? cel.index(5) : 0], cel.index(6))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [193],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 14,
                  "6": 29,
                  "7": 32,
                  "8": 47,
                  "9": 56,
                  "10": 57,
                  "11": 60,
                  "12": 62,
                  "13": 65,
                  "14": 74,
                  "15": 75,
                  "16": 78,
                  "17": 80,
                  "18": 83,
                  "19": 92,
                  "20": 93,
                  "21": 96,
                  "22": 98,
                  "23": 107,
                  "24": 108,
                  "25": 112,
                  "26": 121,
                  "27": 122,
                  "28": 125,
                  "29": 127,
                  "30": 136,
                  "31": 137,
                  "32": 142,
                  "33": 145,
                  "34": 154,
                  "35": 155,
                  "36": 158,
                  "37": 160,
                  "38": 169,
                  "39": 170,
                  "40": 175,
                  "41": 179,
                  "42": 188,
                  "43": 189
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "5",
                            "selectExpr": {
                              "operand": {
                                "id": "4",
                                "identExpr": { "name": "msg" }
                              },
                              "field": "single_int64"
                            }
                          },
                          {
                            "id": "7",
                            "selectExpr": {
                              "operand": {
                                "id": "6",
                                "identExpr": { "name": "msg" }
                              },
                              "field": "single_int32"
                            }
                          },
                          {
                            "id": "11",
                            "callExpr": {
                              "function": "_\u003e_",
                              "args": [
                                {
                                  "id": "9",
                                  "callExpr": {
                                    "target": {
                                      "id": "8",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "10",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "12",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "16",
                            "callExpr": {
                              "function": "_\u003e_",
                              "args": [
                                {
                                  "id": "14",
                                  "callExpr": {
                                    "target": {
                                      "id": "13",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "15",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "17",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "21",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "19",
                                  "callExpr": {
                                    "target": {
                                      "id": "18",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "20",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "23",
                                  "callExpr": {
                                    "target": {
                                      "id": "22",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "24",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "28",
                            "callExpr": {
                              "function": "_?_:_",
                              "args": [
                                {
                                  "id": "26",
                                  "callExpr": {
                                    "target": {
                                      "id": "25",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "27",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "30",
                                  "callExpr": {
                                    "target": {
                                      "id": "29",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "31",
                                        "constExpr": { "int64Value": "4" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "32",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "36",
                            "callExpr": {
                              "function": "_?_:_",
                              "args": [
                                {
                                  "id": "34",
                                  "callExpr": {
                                    "target": {
                                      "id": "33",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "35",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "38",
                                  "callExpr": {
                                    "target": {
                                      "id": "37",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "39",
                                        "constExpr": { "int64Value": "5" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "40",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "42",
                      "callExpr": {
                        "target": {
                          "id": "41",
                          "identExpr": { "name": "cel" }
                        },
                        "function": "index",
                        "args": [
                          { "id": "43", "constExpr": { "int64Value": "6" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "inclusion_list",
            "expression": "cel.block([[1, 2, 3], 1 in cel.index(0), 2 in cel.index(0), cel.index(1) \u0026\u0026 cel.index(2), [3, cel.index(0)], 3 in cel.index(4), cel.index(5) \u0026\u0026 cel.index(1)], cel.index(3) \u0026\u0026 cel.index(6))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [189],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 12,
                  "6": 15,
                  "7": 18,
                  "8": 22,
                  "9": 24,
                  "10": 27,
                  "11": 36,
                  "12": 37,
                  "13": 41,
                  "14": 43,
                  "15": 46,
                  "16": 55,
                  "17": 56,
                  "18": 60,
                  "19": 69,
                  "20": 70,
                  "21": 76,
                  "22": 85,
                  "23": 86,
                  "24": 73,
                  "25": 90,
                  "26": 91,
                  "27": 94,
                  "28": 103,
                  "29": 104,
                  "30": 109,
                  "31": 111,
                  "32": 114,
                  "33": 123,
                  "34": 124,
                  "35": 128,
                  "36": 137,
                  "37": 138,
                  "38": 144,
                  "39": 153,
                  "40": 154,
                  "41": 141,
                  "42": 159,
                  "43": 168,
                  "44": 169,
                  "45": 175,
                  "46": 184,
                  "47": 185,
                  "48": 172
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "6",
                                  "constExpr": { "int64Value": "2" }
                                },
                                {
                                  "id": "7",
                                  "constExpr": { "int64Value": "3" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "9",
                            "callExpr": {
                              "function": "@in",
                              "args": [
                                {
                                  "id": "8",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "11",
                                  "callExpr": {
                                    "target": {
                                      "id": "10",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "12",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "14",
                            "callExpr": {
                              "function": "@in",
                              "args": [
                                {
                                  "id": "13",
                                  "constExpr": { "int64Value": "2" }
                                },
                                {
                                  "id": "16",
                                  "callExpr": {
                                    "target": {
                                      "id": "15",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "17",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "24",
                            "callExpr": {
                              "function": "_\u0026\u0026_",
                              "args": [
                                {
                                  "id": "19",
                                  "callExpr": {
                                    "target": {
                                      "id": "18",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "20",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "22",
                                  "callExpr": {
                                    "target": {
                                      "id": "21",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "23",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "25",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "26",
                                  "constExpr": { "int64Value": "3" }
                                },
                                {
                                  "id": "28",
                                  "callExpr": {
                                    "target": {
                                      "id": "27",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "29",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "31",
                            "callExpr": {
                              "function": "@in",
                              "args": [
                                {
                                  "id": "30",
                                  "constExpr": { "int64Value": "3" }
                                },
                                {
                                  "id": "33",
                                  "callExpr": {
                                    "target": {
                                      "id": "32",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "34",
                                        "constExpr": { "int64Value": "4" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "41",
                            "callExpr": {
                              "function": "_\u0026\u0026_",
                              "args": [
                                {
                                  "id": "36",
                                  "callExpr": {
                                    "target": {
                                      "id": "35",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "37",
                                        "constExpr": { "int64Value": "5" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "39",
                                  "callExpr": {
                                    "target": {
                                      "id": "38",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "40",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "48",
                      "callExpr": {
                        "function": "_\u0026\u0026_",
                        "args": [
                          {
                            "id": "43",
                            "callExpr": {
                              "target": {
                                "id": "42",
                                "identExpr": { "name": "cel" }
                              },
                              "function": "index",
                              "args": [
                                {
                                  "id": "44",
                                  "constExpr": { "int64Value": "3" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "46",
                            "callExpr": {
                              "target": {
                                "id": "45",
                                "identExpr": { "name": "cel" }
                              },
                              "function": "index",
                              "args": [
                                {
                                  "id": "47",
                                  "constExpr": { "int64Value": "6" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "inclusion_map",
            "expression": "cel.block([{true: false}, {\"a\": 1, 2: cel.index(0), 3: cel.index(0)}], 2 in cel.index(1))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [90],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 16,
                  "6": 12,
                  "7": 18,
                  "8": 26,
                  "9": 30,
                  "10": 27,
                  "11": 32,
                  "12": 36,
                  "13": 35,
                  "14": 38,
                  "15": 47,
                  "16": 48,
                  "17": 53,
                  "18": 52,
                  "19": 55,
                  "20": 64,
                  "21": 65,
                  "22": 71,
                  "23": 73,
                  "24": 76,
                  "25": 85,
                  "26": 86
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "5",
                                  "mapKey": {
                                    "id": "6",
                                    "constExpr": { "boolValue": true }
                                  },
                                  "value": {
                                    "id": "7",
                                    "constExpr": { "boolValue": false }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "8",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "9",
                                  "mapKey": {
                                    "id": "10",
                                    "constExpr": { "stringValue": "a" }
                                  },
                                  "value": {
                                    "id": "11",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                },
                                {
                                  "id": "12",
                                  "mapKey": {
                                    "id": "13",
                                    "constExpr": { "int64Value": "2" }
                                  },
                                  "value": {
                                    "id": "15",
                                    "callExpr": {
                                      "target": {
                                        "id": "14",
                                        "identExpr": { "name": "cel" }
                                      },
                                      "function": "index",
                                      "args": [
                                        {
                                          "id": "16",
                                          "constExpr": { "int64Value": "0" }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": "17",
                                  "mapKey": {
                                    "id": "18",
                                    "constExpr": { "int64Value": "3" }
                                  },
                                  "value": {
                                    "id": "20",
                                    "callExpr": {
                                      "target": {
                                        "id": "19",
                                        "identExpr": { "name": "cel" }
                                      },
                                      "function": "index",
                                      "args": [
                                        {
                                          "id": "21",
                                          "constExpr": { "int64Value": "0" }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "23",
                      "callExpr": {
                        "function": "@in",
                        "args": [
                          { "id": "22", "constExpr": { "int64Value": "2" } },
                          {
                            "id": "25",
                            "callExpr": {
                              "target": {
                                "id": "24",
                                "identExpr": { "name": "cel" }
                              },
                              "function": "index",
                              "args": [
                                {
                                  "id": "26",
                                  "constExpr": { "int64Value": "1" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "presence_test",
            "expression": "cel.block([{\"a\": true}, has(cel.index(0).a), cel.index(0)[\"a\"]], cel.index(1) \u0026\u0026 cel.index(2))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [95],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 15,
                  "6": 12,
                  "7": 17,
                  "9": 28,
                  "10": 37,
                  "11": 38,
                  "12": 40,
                  "13": 27,
                  "14": 45,
                  "15": 54,
                  "16": 55,
                  "17": 57,
                  "18": 58,
                  "19": 65,
                  "20": 74,
                  "21": 75,
                  "22": 81,
                  "23": 90,
                  "24": 91,
                  "25": 78
                },
                "macroCalls": {
                  "13": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "12",
                          "selectExpr": {
                            "operand": {
                              "id": "10",
                              "callExpr": {
                                "target": {
                                  "id": "9",
                                  "identExpr": { "name": "cel" }
                                },
                                "function": "index",
                                "args": [
                                  {
                                    "id": "11",
                                    "constExpr": { "int64Value": "0" }
                                  }
                                ]
                              }
                            },
                            "field": "a"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "5",
                                  "mapKey": {
                                    "id": "6",
                                    "constExpr": { "stringValue": "a" }
                                  },
                                  "value": {
                                    "id": "7",
                                    "constExpr": { "boolValue": true }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "13",
                            "selectExpr": {
                              "operand": {
                                "id": "10",
                                "callExpr": {
                                  "target": {
                                    "id": "9",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "11",
                                      "constExpr": { "int64Value": "0" }
                                    }
                                  ]
                                }
                              },
                              "field": "a",
                              "testOnly": true
                            }
                          },
                          {
                            "id": "17",
                            "callExpr": {
                              "function": "_[_]",
                              "args": [
                                {
                                  "id": "15",
                                  "callExpr": {
                                    "target": {
                                      "id": "14",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "16",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "18",
                                  "constExpr": { "stringValue": "a" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "25",
                      "callExpr": {
                        "function": "_\u0026\u0026_",
                        "args": [
                          {
                            "id": "20",
                            "callExpr": {
                              "target": {
                                "id": "19",
                                "identExpr": { "name": "cel" }
                              },
                              "function": "index",
                              "args": [
                                {
                                  "id": "21",
                                  "constExpr": { "int64Value": "1" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "23",
                            "callExpr": {
                              "target": {
                                "id": "22",
                                "identExpr": { "name": "cel" }
                              },
                              "function": "index",
                              "args": [
                                {
                                  "id": "24",
                                  "constExpr": { "int64Value": "2" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "presence_test_2",
            "expression": "cel.block([{\"a\": true}, has(cel.index(0).a)], cel.index(1) \u0026\u0026 cel.index(1))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [76],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 15,
                  "6": 12,
                  "7": 17,
                  "9": 28,
                  "10": 37,
                  "11": 38,
                  "12": 40,
                  "13": 27,
                  "14": 46,
                  "15": 55,
                  "16": 56,
                  "17": 62,
                  "18": 71,
                  "19": 72,
                  "20": 59
                },
                "macroCalls": {
                  "13": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "12",
                          "selectExpr": {
                            "operand": {
                              "id": "10",
                              "callExpr": {
                                "target": {
                                  "id": "9",
                                  "identExpr": { "name": "cel" }
                                },
                                "function": "index",
                                "args": [
                                  {
                                    "id": "11",
                                    "constExpr": { "int64Value": "0" }
                                  }
                                ]
                              }
                            },
                            "field": "a"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "5",
                                  "mapKey": {
                                    "id": "6",
                                    "constExpr": { "stringValue": "a" }
                                  },
                                  "value": {
                                    "id": "7",
                                    "constExpr": { "boolValue": true }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "13",
                            "selectExpr": {
                              "operand": {
                                "id": "10",
                                "callExpr": {
                                  "target": {
                                    "id": "9",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "11",
                                      "constExpr": { "int64Value": "0" }
                                    }
                                  ]
                                }
                              },
                              "field": "a",
                              "testOnly": true
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "20",
                      "callExpr": {
                        "function": "_\u0026\u0026_",
                        "args": [
                          {
                            "id": "15",
                            "callExpr": {
                              "target": {
                                "id": "14",
                                "identExpr": { "name": "cel" }
                              },
                              "function": "index",
                              "args": [
                                {
                                  "id": "16",
                                  "constExpr": { "int64Value": "1" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "18",
                            "callExpr": {
                              "target": {
                                "id": "17",
                                "identExpr": { "name": "cel" }
                              },
                              "function": "index",
                              "args": [
                                {
                                  "id": "19",
                                  "constExpr": { "int64Value": "1" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "presence_test_with_ternary",
            "expression": "cel.block([msg.oneof_type, has(cel.index(0).payload), cel.index(0).payload, cel.index(2).single_int64, cel.index(1) ? cel.index(3) : 0], cel.index(4))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [151],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 14,
                  "7": 31,
                  "8": 40,
                  "9": 41,
                  "10": 43,
                  "11": 30,
                  "12": 54,
                  "13": 63,
                  "14": 64,
                  "15": 66,
                  "16": 76,
                  "17": 85,
                  "18": 86,
                  "19": 88,
                  "20": 103,
                  "21": 112,
                  "22": 113,
                  "23": 116,
                  "24": 118,
                  "25": 127,
                  "26": 128,
                  "27": 133,
                  "28": 137,
                  "29": 146,
                  "30": 147
                },
                "macroCalls": {
                  "11": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "10",
                          "selectExpr": {
                            "operand": {
                              "id": "8",
                              "callExpr": {
                                "target": {
                                  "id": "7",
                                  "identExpr": { "name": "cel" }
                                },
                                "function": "index",
                                "args": [
                                  {
                                    "id": "9",
                                    "constExpr": { "int64Value": "0" }
                                  }
                                ]
                              }
                            },
                            "field": "payload"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "5",
                            "selectExpr": {
                              "operand": {
                                "id": "4",
                                "identExpr": { "name": "msg" }
                              },
                              "field": "oneof_type"
                            }
                          },
                          {
                            "id": "11",
                            "selectExpr": {
                              "operand": {
                                "id": "8",
                                "callExpr": {
                                  "target": {
                                    "id": "7",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "9",
                                      "constExpr": { "int64Value": "0" }
                                    }
                                  ]
                                }
                              },
                              "field": "payload",
                              "testOnly": true
                            }
                          },
                          {
                            "id": "15",
                            "selectExpr": {
                              "operand": {
                                "id": "13",
                                "callExpr": {
                                  "target": {
                                    "id": "12",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "14",
                                      "constExpr": { "int64Value": "0" }
                                    }
                                  ]
                                }
                              },
                              "field": "payload"
                            }
                          },
                          {
                            "id": "19",
                            "selectExpr": {
                              "operand": {
                                "id": "17",
                                "callExpr": {
                                  "target": {
                                    "id": "16",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "18",
                                      "constExpr": { "int64Value": "2" }
                                    }
                                  ]
                                }
                              },
                              "field": "single_int64"
                            }
                          },
                          {
                            "id": "23",
                            "callExpr": {
                              "function": "_?_:_",
                              "args": [
                                {
                                  "id": "21",
                                  "callExpr": {
                                    "target": {
                                      "id": "20",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "22",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "25",
                                  "callExpr": {
                                    "target": {
                                      "id": "24",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "26",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "27",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "29",
                      "callExpr": {
                        "target": {
                          "id": "28",
                          "identExpr": { "name": "cel" }
                        },
                        "function": "index",
                        "args": [
                          { "id": "30", "constExpr": { "int64Value": "4" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "presence_test_with_ternary_2",
            "expression": "cel.block([msg.oneof_type, cel.index(0).payload, cel.index(1).single_int64, has(cel.index(0).payload), cel.index(2) * 0, cel.index(3) ? cel.index(2) : cel.index(4)], cel.index(5))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [180],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 14,
                  "6": 27,
                  "7": 36,
                  "8": 37,
                  "9": 39,
                  "10": 49,
                  "11": 58,
                  "12": 59,
                  "13": 61,
                  "15": 80,
                  "16": 89,
                  "17": 90,
                  "18": 92,
                  "19": 79,
                  "20": 103,
                  "21": 112,
                  "22": 113,
                  "23": 116,
                  "24": 118,
                  "25": 121,
                  "26": 130,
                  "27": 131,
                  "28": 134,
                  "29": 136,
                  "30": 145,
                  "31": 146,
                  "32": 151,
                  "33": 160,
                  "34": 161,
                  "35": 166,
                  "36": 175,
                  "37": 176
                },
                "macroCalls": {
                  "19": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "18",
                          "selectExpr": {
                            "operand": {
                              "id": "16",
                              "callExpr": {
                                "target": {
                                  "id": "15",
                                  "identExpr": { "name": "cel" }
                                },
                                "function": "index",
                                "args": [
                                  {
                                    "id": "17",
                                    "constExpr": { "int64Value": "0" }
                                  }
                                ]
                              }
                            },
                            "field": "payload"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "5",
                            "selectExpr": {
                              "operand": {
                                "id": "4",
                                "identExpr": { "name": "msg" }
                              },
                              "field": "oneof_type"
                            }
                          },
                          {
                            "id": "9",
                            "selectExpr": {
                              "operand": {
                                "id": "7",
                                "callExpr": {
                                  "target": {
                                    "id": "6",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "8",
                                      "constExpr": { "int64Value": "0" }
                                    }
                                  ]
                                }
                              },
                              "field": "payload"
                            }
                          },
                          {
                            "id": "13",
                            "selectExpr": {
                              "operand": {
                                "id": "11",
                                "callExpr": {
                                  "target": {
                                    "id": "10",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "12",
                                      "constExpr": { "int64Value": "1" }
                                    }
                                  ]
                                }
                              },
                              "field": "single_int64"
                            }
                          },
                          {
                            "id": "19",
                            "selectExpr": {
                              "operand": {
                                "id": "16",
                                "callExpr": {
                                  "target": {
                                    "id": "15",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "17",
                                      "constExpr": { "int64Value": "0" }
                                    }
                                  ]
                                }
                              },
                              "field": "payload",
                              "testOnly": true
                            }
                          },
                          {
                            "id": "23",
                            "callExpr": {
                              "function": "_*_",
                              "args": [
                                {
                                  "id": "21",
                                  "callExpr": {
                                    "target": {
                                      "id": "20",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "22",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "24",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "28",
                            "callExpr": {
                              "function": "_?_:_",
                              "args": [
                                {
                                  "id": "26",
                                  "callExpr": {
                                    "target": {
                                      "id": "25",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "27",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "30",
                                  "callExpr": {
                                    "target": {
                                      "id": "29",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "31",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "33",
                                  "callExpr": {
                                    "target": {
                                      "id": "32",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "34",
                                        "constExpr": { "int64Value": "4" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "36",
                      "callExpr": {
                        "target": {
                          "id": "35",
                          "identExpr": { "name": "cel" }
                        },
                        "function": "index",
                        "args": [
                          { "id": "37", "constExpr": { "int64Value": "5" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "presence_test_with_ternary_3",
            "expression": "cel.block([msg.oneof_type, cel.index(0).payload, cel.index(1).single_int64, has(cel.index(1).single_int64), cel.index(2) * 0, cel.index(3) ? cel.index(2) : cel.index(4)], cel.index(5))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [185],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 14,
                  "6": 27,
                  "7": 36,
                  "8": 37,
                  "9": 39,
                  "10": 49,
                  "11": 58,
                  "12": 59,
                  "13": 61,
                  "15": 80,
                  "16": 89,
                  "17": 90,
                  "18": 92,
                  "19": 79,
                  "20": 108,
                  "21": 117,
                  "22": 118,
                  "23": 121,
                  "24": 123,
                  "25": 126,
                  "26": 135,
                  "27": 136,
                  "28": 139,
                  "29": 141,
                  "30": 150,
                  "31": 151,
                  "32": 156,
                  "33": 165,
                  "34": 166,
                  "35": 171,
                  "36": 180,
                  "37": 181
                },
                "macroCalls": {
                  "19": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "18",
                          "selectExpr": {
                            "operand": {
                              "id": "16",
                              "callExpr": {
                                "target": {
                                  "id": "15",
                                  "identExpr": { "name": "cel" }
                                },
                                "function": "index",
                                "args": [
                                  {
                                    "id": "17",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                ]
                              }
                            },
                            "field": "single_int64"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "5",
                            "selectExpr": {
                              "operand": {
                                "id": "4",
                                "identExpr": { "name": "msg" }
                              },
                              "field": "oneof_type"
                            }
                          },
                          {
                            "id": "9",
                            "selectExpr": {
                              "operand": {
                                "id": "7",
                                "callExpr": {
                                  "target": {
                                    "id": "6",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "8",
                                      "constExpr": { "int64Value": "0" }
                                    }
                                  ]
                                }
                              },
                              "field": "payload"
                            }
                          },
                          {
                            "id": "13",
                            "selectExpr": {
                              "operand": {
                                "id": "11",
                                "callExpr": {
                                  "target": {
                                    "id": "10",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "12",
                                      "constExpr": { "int64Value": "1" }
                                    }
                                  ]
                                }
                              },
                              "field": "single_int64"
                            }
                          },
                          {
                            "id": "19",
                            "selectExpr": {
                              "operand": {
                                "id": "16",
                                "callExpr": {
                                  "target": {
                                    "id": "15",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "17",
                                      "constExpr": { "int64Value": "1" }
                                    }
                                  ]
                                }
                              },
                              "field": "single_int64",
                              "testOnly": true
                            }
                          },
                          {
                            "id": "23",
                            "callExpr": {
                              "function": "_*_",
                              "args": [
                                {
                                  "id": "21",
                                  "callExpr": {
                                    "target": {
                                      "id": "20",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "22",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "24",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "28",
                            "callExpr": {
                              "function": "_?_:_",
                              "args": [
                                {
                                  "id": "26",
                                  "callExpr": {
                                    "target": {
                                      "id": "25",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "27",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "30",
                                  "callExpr": {
                                    "target": {
                                      "id": "29",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "31",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "33",
                                  "callExpr": {
                                    "target": {
                                      "id": "32",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "34",
                                        "constExpr": { "int64Value": "4" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "36",
                      "callExpr": {
                        "target": {
                          "id": "35",
                          "identExpr": { "name": "cel" }
                        },
                        "function": "index",
                        "args": [
                          { "id": "37", "constExpr": { "int64Value": "5" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "presence_test_with_ternary_nested",
            "expression": "cel.block([msg.oneof_type, cel.index(0).payload, cel.index(1).map_string_string, has(msg.oneof_type), has(cel.index(0).payload), cel.index(3) \u0026\u0026 cel.index(4), has(cel.index(1).single_int64), cel.index(5) \u0026\u0026 cel.index(6), has(cel.index(1).map_string_string), has(cel.index(2).key), cel.index(8) \u0026\u0026 cel.index(9), cel.index(2).key, cel.index(11) == \"A\", cel.index(10) ? cel.index(12) : false], cel.index(7) ? cel.index(13) : false)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [429],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 14,
                  "6": 27,
                  "7": 36,
                  "8": 37,
                  "9": 39,
                  "10": 49,
                  "11": 58,
                  "12": 59,
                  "13": 61,
                  "15": 85,
                  "16": 88,
                  "17": 84,
                  "19": 106,
                  "20": 115,
                  "21": 116,
                  "22": 118,
                  "23": 105,
                  "24": 129,
                  "25": 138,
                  "26": 139,
                  "27": 145,
                  "28": 154,
                  "29": 155,
                  "30": 142,
                  "32": 163,
                  "33": 172,
                  "34": 173,
                  "35": 175,
                  "36": 162,
                  "37": 191,
                  "38": 200,
                  "39": 201,
                  "40": 207,
                  "41": 216,
                  "42": 217,
                  "43": 204,
                  "45": 225,
                  "46": 234,
                  "47": 235,
                  "48": 237,
                  "49": 224,
                  "51": 262,
                  "52": 271,
                  "53": 272,
                  "54": 274,
                  "55": 261,
                  "56": 281,
                  "57": 290,
                  "58": 291,
                  "59": 297,
                  "60": 306,
                  "61": 307,
                  "62": 294,
                  "63": 311,
                  "64": 320,
                  "65": 321,
                  "66": 323,
                  "67": 329,
                  "68": 338,
                  "69": 339,
                  "70": 343,
                  "71": 346,
                  "72": 351,
                  "73": 360,
                  "74": 361,
                  "75": 365,
                  "76": 367,
                  "77": 376,
                  "78": 377,
                  "79": 383,
                  "80": 391,
                  "81": 400,
                  "82": 401,
                  "83": 404,
                  "84": 406,
                  "85": 415,
                  "86": 416,
                  "87": 422
                },
                "macroCalls": {
                  "17": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "16",
                          "selectExpr": {
                            "operand": {
                              "id": "15",
                              "identExpr": { "name": "msg" }
                            },
                            "field": "oneof_type"
                          }
                        }
                      ]
                    }
                  },
                  "23": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "22",
                          "selectExpr": {
                            "operand": {
                              "id": "20",
                              "callExpr": {
                                "target": {
                                  "id": "19",
                                  "identExpr": { "name": "cel" }
                                },
                                "function": "index",
                                "args": [
                                  {
                                    "id": "21",
                                    "constExpr": { "int64Value": "0" }
                                  }
                                ]
                              }
                            },
                            "field": "payload"
                          }
                        }
                      ]
                    }
                  },
                  "36": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "35",
                          "selectExpr": {
                            "operand": {
                              "id": "33",
                              "callExpr": {
                                "target": {
                                  "id": "32",
                                  "identExpr": { "name": "cel" }
                                },
                                "function": "index",
                                "args": [
                                  {
                                    "id": "34",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                ]
                              }
                            },
                            "field": "single_int64"
                          }
                        }
                      ]
                    }
                  },
                  "49": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "48",
                          "selectExpr": {
                            "operand": {
                              "id": "46",
                              "callExpr": {
                                "target": {
                                  "id": "45",
                                  "identExpr": { "name": "cel" }
                                },
                                "function": "index",
                                "args": [
                                  {
                                    "id": "47",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                ]
                              }
                            },
                            "field": "map_string_string"
                          }
                        }
                      ]
                    }
                  },
                  "55": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "54",
                          "selectExpr": {
                            "operand": {
                              "id": "52",
                              "callExpr": {
                                "target": {
                                  "id": "51",
                                  "identExpr": { "name": "cel" }
                                },
                                "function": "index",
                                "args": [
                                  {
                                    "id": "53",
                                    "constExpr": { "int64Value": "2" }
                                  }
                                ]
                              }
                            },
                            "field": "key"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "5",
                            "selectExpr": {
                              "operand": {
                                "id": "4",
                                "identExpr": { "name": "msg" }
                              },
                              "field": "oneof_type"
                            }
                          },
                          {
                            "id": "9",
                            "selectExpr": {
                              "operand": {
                                "id": "7",
                                "callExpr": {
                                  "target": {
                                    "id": "6",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "8",
                                      "constExpr": { "int64Value": "0" }
                                    }
                                  ]
                                }
                              },
                              "field": "payload"
                            }
                          },
                          {
                            "id": "13",
                            "selectExpr": {
                              "operand": {
                                "id": "11",
                                "callExpr": {
                                  "target": {
                                    "id": "10",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "12",
                                      "constExpr": { "int64Value": "1" }
                                    }
                                  ]
                                }
                              },
                              "field": "map_string_string"
                            }
                          },
                          {
                            "id": "17",
                            "selectExpr": {
                              "operand": {
                                "id": "15",
                                "identExpr": { "name": "msg" }
                              },
                              "field": "oneof_type",
                              "testOnly": true
                            }
                          },
                          {
                            "id": "23",
                            "selectExpr": {
                              "operand": {
                                "id": "20",
                                "callExpr": {
                                  "target": {
                                    "id": "19",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "21",
                                      "constExpr": { "int64Value": "0" }
                                    }
                                  ]
                                }
                              },
                              "field": "payload",
                              "testOnly": true
                            }
                          },
                          {
                            "id": "30",
                            "callExpr": {
                              "function": "_\u0026\u0026_",
                              "args": [
                                {
                                  "id": "25",
                                  "callExpr": {
                                    "target": {
                                      "id": "24",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "26",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "28",
                                  "callExpr": {
                                    "target": {
                                      "id": "27",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "29",
                                        "constExpr": { "int64Value": "4" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "36",
                            "selectExpr": {
                              "operand": {
                                "id": "33",
                                "callExpr": {
                                  "target": {
                                    "id": "32",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "34",
                                      "constExpr": { "int64Value": "1" }
                                    }
                                  ]
                                }
                              },
                              "field": "single_int64",
                              "testOnly": true
                            }
                          },
                          {
                            "id": "43",
                            "callExpr": {
                              "function": "_\u0026\u0026_",
                              "args": [
                                {
                                  "id": "38",
                                  "callExpr": {
                                    "target": {
                                      "id": "37",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "39",
                                        "constExpr": { "int64Value": "5" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "41",
                                  "callExpr": {
                                    "target": {
                                      "id": "40",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "42",
                                        "constExpr": { "int64Value": "6" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "49",
                            "selectExpr": {
                              "operand": {
                                "id": "46",
                                "callExpr": {
                                  "target": {
                                    "id": "45",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "47",
                                      "constExpr": { "int64Value": "1" }
                                    }
                                  ]
                                }
                              },
                              "field": "map_string_string",
                              "testOnly": true
                            }
                          },
                          {
                            "id": "55",
                            "selectExpr": {
                              "operand": {
                                "id": "52",
                                "callExpr": {
                                  "target": {
                                    "id": "51",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "53",
                                      "constExpr": { "int64Value": "2" }
                                    }
                                  ]
                                }
                              },
                              "field": "key",
                              "testOnly": true
                            }
                          },
                          {
                            "id": "62",
                            "callExpr": {
                              "function": "_\u0026\u0026_",
                              "args": [
                                {
                                  "id": "57",
                                  "callExpr": {
                                    "target": {
                                      "id": "56",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "58",
                                        "constExpr": { "int64Value": "8" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "60",
                                  "callExpr": {
                                    "target": {
                                      "id": "59",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "61",
                                        "constExpr": { "int64Value": "9" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "66",
                            "selectExpr": {
                              "operand": {
                                "id": "64",
                                "callExpr": {
                                  "target": {
                                    "id": "63",
                                    "identExpr": { "name": "cel" }
                                  },
                                  "function": "index",
                                  "args": [
                                    {
                                      "id": "65",
                                      "constExpr": { "int64Value": "2" }
                                    }
                                  ]
                                }
                              },
                              "field": "key"
                            }
                          },
                          {
                            "id": "70",
                            "callExpr": {
                              "function": "_==_",
                              "args": [
                                {
                                  "id": "68",
                                  "callExpr": {
                                    "target": {
                                      "id": "67",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "69",
                                        "constExpr": { "int64Value": "11" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "71",
                                  "constExpr": { "stringValue": "A" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "75",
                            "callExpr": {
                              "function": "_?_:_",
                              "args": [
                                {
                                  "id": "73",
                                  "callExpr": {
                                    "target": {
                                      "id": "72",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "74",
                                        "constExpr": { "int64Value": "10" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "77",
                                  "callExpr": {
                                    "target": {
                                      "id": "76",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "78",
                                        "constExpr": { "int64Value": "12" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "79",
                                  "constExpr": { "boolValue": false }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "83",
                      "callExpr": {
                        "function": "_?_:_",
                        "args": [
                          {
                            "id": "81",
                            "callExpr": {
                              "target": {
                                "id": "80",
                                "identExpr": { "name": "cel" }
                              },
                              "function": "index",
                              "args": [
                                {
                                  "id": "82",
                                  "constExpr": { "int64Value": "7" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "85",
                            "callExpr": {
                              "target": {
                                "id": "84",
                                "identExpr": { "name": "cel" }
                              },
                              "function": "index",
                              "args": [
                                {
                                  "id": "86",
                                  "constExpr": { "int64Value": "13" }
                                }
                              ]
                            }
                          },
                          { "id": "87", "constExpr": { "boolValue": false } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "call",
            "expression": "cel.block([\"h\" + \"e\", cel.index(0) + \"l\", cel.index(1) + \"l\", cel.index(2) + \"o\", cel.index(3) + \" world\"], cel.index(4).matches(cel.index(3)))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [144],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 15,
                  "6": 17,
                  "7": 22,
                  "8": 31,
                  "9": 32,
                  "10": 35,
                  "11": 37,
                  "12": 42,
                  "13": 51,
                  "14": 52,
                  "15": 55,
                  "16": 57,
                  "17": 62,
                  "18": 71,
                  "19": 72,
                  "20": 75,
                  "21": 77,
                  "22": 82,
                  "23": 91,
                  "24": 92,
                  "25": 95,
                  "26": 97,
                  "27": 108,
                  "28": 117,
                  "29": 118,
                  "30": 128,
                  "31": 129,
                  "32": 138,
                  "33": 139
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "cel" } },
                  "function": "block",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "5",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "4",
                                  "constExpr": { "stringValue": "h" }
                                },
                                {
                                  "id": "6",
                                  "constExpr": { "stringValue": "e" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "10",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "8",
                                  "callExpr": {
                                    "target": {
                                      "id": "7",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "9",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "11",
                                  "constExpr": { "stringValue": "l" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "15",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "13",
                                  "callExpr": {
                                    "target": {
                                      "id": "12",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "14",
                                        "constExpr": { "int64Value": "1" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "16",
                                  "constExpr": { "stringValue": "l" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "20",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "18",
                                  "callExpr": {
                                    "target": {
                                      "id": "17",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "19",
                                        "constExpr": { "int64Value": "2" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "21",
                                  "constExpr": { "stringValue": "o" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "25",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "23",
                                  "callExpr": {
                                    "target": {
                                      "id": "22",
                                      "identExpr": { "name": "cel" }
                                    },
                                    "function": "index",
                                    "args": [
                                      {
                                        "id": "24",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "26",
                                  "constExpr": { "stringValue": " world" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "30",
                      "callExpr": {
                        "target": {
                          "id": "28",
                          "callExpr": {
                            "target": {
                              "id": "27",
                              "identExpr": { "name": "cel" }
                            },
                            "function": "index",
                            "args": [
                              { "id": "29", "constExpr": { "int64Value": "4" } }
                            ]
                          }
                        },
                        "function": "matches",
                        "args": [
                          {
                            "id": "32",
                            "callExpr": {
                              "target": {
                                "id": "31",
                                "identExpr": { "name": "cel" }
                              },
                              "function": "index",
                              "args": [
                                {
                                  "id": "33",
                                  "constExpr": { "int64Value": "3" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "comparisons",
    "sections": [
      {
        "name": "eq_literal",
        "tests": [
          {
            "name": "eq_int",
            "expression": "1 == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 2, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "1" } },
                    { "id": "3", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_int",
            "expression": "-1 == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "-1" } },
                    { "id": "3", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_int_uint",
            "expression": "dyn(1) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_int_uint",
            "expression": "dyn(2) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_int_double",
            "expression": "dyn(1) == 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_int_double",
            "expression": "dyn(2) == 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_uint",
            "expression": "2u == 2u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "2" } },
                    { "id": "3", "constExpr": { "uint64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_uint",
            "expression": "1u == 2u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "1" } },
                    { "id": "3", "constExpr": { "uint64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_uint_int",
            "expression": "dyn(1u) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_uint_int",
            "expression": "dyn(2u) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_uint_double",
            "expression": "dyn(1u) == 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_uint_double",
            "expression": "dyn(2u) == 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_double",
            "expression": "1.0 == 1.0e+0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 1 } },
                    { "id": "3", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_double",
            "expression": "-1.0 == 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 5, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": -1 } },
                    { "id": "3", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_double_nan",
            "expression": "0.0/0.0 == 0.0/0.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": {
                  "1": 0,
                  "2": 3,
                  "3": 4,
                  "4": 8,
                  "5": 11,
                  "6": 14,
                  "7": 15
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_/_",
                        "args": [
                          { "id": "1", "constExpr": { "doubleValue": 0 } },
                          { "id": "3", "constExpr": { "doubleValue": 0 } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "callExpr": {
                        "function": "_/_",
                        "args": [
                          { "id": "5", "constExpr": { "doubleValue": 0 } },
                          { "id": "7", "constExpr": { "doubleValue": 0 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_int_double_nan",
            "expression": "dyn(1) == 0.0/0.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": {
                  "1": 3,
                  "2": 4,
                  "3": 7,
                  "4": 10,
                  "5": 13,
                  "6": 14
                }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "_/_",
                        "args": [
                          { "id": "4", "constExpr": { "doubleValue": 0 } },
                          { "id": "6", "constExpr": { "doubleValue": 0 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_uint_double_nan",
            "expression": "dyn(1u) == 0.0/0.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": {
                  "1": 3,
                  "2": 4,
                  "3": 8,
                  "4": 11,
                  "5": 14,
                  "6": 15
                }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "_/_",
                        "args": [
                          { "id": "4", "constExpr": { "doubleValue": 0 } },
                          { "id": "6", "constExpr": { "doubleValue": 0 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_double_int",
            "expression": "dyn(1.0) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_double_int",
            "expression": "dyn(2.0) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 2 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_double_uint",
            "expression": "dyn(1.0) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_double_uint",
            "expression": "dyn(2.0) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 2 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_string",
            "expression": "'' == \"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "" } },
                    { "id": "3", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_string",
            "expression": "'a' == 'b'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "a" } },
                    { "id": "3", "constExpr": { "stringValue": "b" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_raw_string",
            "expression": "'abc' == r'abc'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 6, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "abc" } },
                    { "id": "3", "constExpr": { "stringValue": "abc" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_string_case",
            "expression": "'abc' == 'ABC'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 6, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "abc" } },
                    { "id": "3", "constExpr": { "stringValue": "ABC" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_string_unicode",
            "expression": "'Î¯ÏÎ¿Ï' == 'Î¯ÏÎ¿Ï'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 7, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "Î¯ÏÎ¿Ï" } },
                    { "id": "3", "constExpr": { "stringValue": "Î¯ÏÎ¿Ï" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_string_unicode_ascii",
            "expression": "'a' == 'Ã '",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "a" } },
                    { "id": "3", "constExpr": { "stringValue": "Ã " } }
                  ]
                }
              }
            }
          },
          {
            "name": "no_string_normalization",
            "expression": "'Am\\u00E9lie' == 'Ame\\u0301lie'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 0, "2": 14, "3": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "AmÃ©lie" } },
                    { "id": "3", "constExpr": { "stringValue": "AmeÌlie" } }
                  ]
                }
              }
            }
          },
          {
            "name": "no_string_normalization_surrogate",
            "expression": "'\\U0001F436' == '\\xef\\xbf\\xbd\\xef\\xbf\\bd'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 0, "2": 13, "3": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "ð¶" } },
                    { "id": "3", "constExpr": { "stringValue": "Ã¯Â¿Â½Ã¯Â¿\bd" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_null",
            "expression": "null == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 5, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "nullValue": null } },
                    { "id": "3", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_bool",
            "expression": "true == true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 5, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    { "id": "3", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_bool",
            "expression": "false == true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 6, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": false } },
                    { "id": "3", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_bytes",
            "expression": "b'Ã¿' == b'\\303\\277'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 5, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "w78=" } },
                    { "id": "3", "constExpr": { "bytesValue": "w78=" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_bytes",
            "expression": "b'abc' == b'abcd'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 7, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "YWJj" } },
                    { "id": "3", "constExpr": { "bytesValue": "YWJjZA==" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_list_empty",
            "expression": "[] == []",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "listExpr": {} },
                    { "id": "3", "listExpr": {} }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_list_null",
            "expression": "[null] == [null]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 1, "3": 7, "4": 10, "5": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "nullValue": null } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "listExpr": {
                        "elements": [
                          { "id": "5", "constExpr": { "nullValue": null } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_list_null",
            "expression": "['1', '2', null] == ['1', '2', '3']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 6,
                  "4": 11,
                  "5": 17,
                  "6": 20,
                  "7": 21,
                  "8": 26,
                  "9": 31
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "stringValue": "1" } },
                          { "id": "3", "constExpr": { "stringValue": "2" } },
                          { "id": "4", "constExpr": { "nullValue": null } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "listExpr": {
                        "elements": [
                          { "id": "7", "constExpr": { "stringValue": "1" } },
                          { "id": "8", "constExpr": { "stringValue": "2" } },
                          { "id": "9", "constExpr": { "stringValue": "3" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_list_numbers",
            "expression": "[1, 2, 3] == [1, 2, 3]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "5": 10,
                  "6": 13,
                  "7": 14,
                  "8": 17,
                  "9": 20
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "int64Value": "1" } },
                          { "id": "3", "constExpr": { "int64Value": "2" } },
                          { "id": "4", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "listExpr": {
                        "elements": [
                          { "id": "7", "constExpr": { "int64Value": "1" } },
                          { "id": "8", "constExpr": { "int64Value": "2" } },
                          { "id": "9", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_list_mixed_type_numbers",
            "expression": "[1.0, 2.0, 3] == [1u, 2, 3u]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 6,
                  "4": 11,
                  "5": 14,
                  "6": 17,
                  "7": 18,
                  "8": 22,
                  "9": 25
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "doubleValue": 1 } },
                          { "id": "3", "constExpr": { "doubleValue": 2 } },
                          { "id": "4", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "listExpr": {
                        "elements": [
                          { "id": "7", "constExpr": { "uint64Value": "1" } },
                          { "id": "8", "constExpr": { "int64Value": "2" } },
                          { "id": "9", "constExpr": { "uint64Value": "3" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_list_mixed_type_numbers",
            "expression": "[1.0, 2.1] == [1u, 2]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 6,
                  "4": 11,
                  "5": 14,
                  "6": 15,
                  "7": 19
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "doubleValue": 1 } },
                          { "id": "3", "constExpr": { "doubleValue": 2.1 } }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "listExpr": {
                        "elements": [
                          { "id": "6", "constExpr": { "uint64Value": "1" } },
                          { "id": "7", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_list_order",
            "expression": "[1, 2, 3] == [1, 3, 2]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "5": 10,
                  "6": 13,
                  "7": 14,
                  "8": 17,
                  "9": 20
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "int64Value": "1" } },
                          { "id": "3", "constExpr": { "int64Value": "2" } },
                          { "id": "4", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "listExpr": {
                        "elements": [
                          { "id": "7", "constExpr": { "int64Value": "1" } },
                          { "id": "8", "constExpr": { "int64Value": "3" } },
                          { "id": "9", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_list_string_case",
            "expression": "['case'] == ['cAse']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 0, "2": 1, "3": 9, "4": 12, "5": 13 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "stringValue": "case" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "listExpr": {
                        "elements": [
                          { "id": "5", "constExpr": { "stringValue": "cAse" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_list_length",
            "expression": "['one'] == [2, 3]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 8,
                  "4": 11,
                  "5": 12,
                  "6": 15
                }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "stringValue": "one" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "listExpr": {
                        "elements": [
                          { "id": "5", "constExpr": { "int64Value": "2" } },
                          { "id": "6", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_list_false_vs_types",
            "expression": "[1, 'dos', 3] == [1, 2, 4]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 11,
                  "5": 14,
                  "6": 17,
                  "7": 18,
                  "8": 21,
                  "9": 24
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "int64Value": "1" } },
                          { "id": "3", "constExpr": { "stringValue": "dos" } },
                          { "id": "4", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "listExpr": {
                        "elements": [
                          { "id": "7", "constExpr": { "int64Value": "1" } },
                          { "id": "8", "constExpr": { "int64Value": "2" } },
                          { "id": "9", "constExpr": { "int64Value": "4" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_map_empty",
            "expression": "{} == {}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "structExpr": {} },
                    { "id": "3", "structExpr": {} }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_map_null",
            "expression": "{'k': null} == {'k': null}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 1,
                  "4": 6,
                  "5": 12,
                  "6": 15,
                  "7": 19,
                  "8": 16,
                  "9": 21
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "stringValue": "k" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "stringValue": "k" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_map_null",
            "expression": "{'k': 1, 'j': 2} == {'k': 1, 'j': null}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 1,
                  "4": 6,
                  "5": 12,
                  "6": 9,
                  "7": 14,
                  "8": 17,
                  "9": 20,
                  "10": 24,
                  "11": 21,
                  "12": 26,
                  "13": 32,
                  "14": 29,
                  "15": 34
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "stringValue": "k" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "int64Value": "1" }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "stringValue": "j" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "int64Value": "2" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "10",
                            "mapKey": {
                              "id": "11",
                              "constExpr": { "stringValue": "k" }
                            },
                            "value": {
                              "id": "12",
                              "constExpr": { "int64Value": "1" }
                            }
                          },
                          {
                            "id": "13",
                            "mapKey": {
                              "id": "14",
                              "constExpr": { "stringValue": "j" }
                            },
                            "value": {
                              "id": "15",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_map_onekey",
            "expression": "{'k':'v'} == {\"k\":\"v\"}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 1,
                  "4": 5,
                  "5": 10,
                  "6": 13,
                  "7": 17,
                  "8": 14,
                  "9": 18
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "stringValue": "k" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "stringValue": "v" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "stringValue": "k" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "stringValue": "v" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_map_double_value",
            "expression": "{'k':1.0} == {'k':1e+0}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 1,
                  "4": 5,
                  "5": 10,
                  "6": 13,
                  "7": 17,
                  "8": 14,
                  "9": 18
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "stringValue": "k" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "doubleValue": 1 }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "stringValue": "k" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "doubleValue": 1 }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_map_mixed_type_numbers",
            "expression": "{1: 1.0, 2u: 3u} == {1u: 1, 2: 3.0}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": {
                  "1": 0,
                  "2": 2,
                  "3": 1,
                  "4": 4,
                  "5": 11,
                  "6": 9,
                  "7": 13,
                  "8": 17,
                  "9": 20,
                  "10": 23,
                  "11": 21,
                  "12": 25,
                  "13": 29,
                  "14": 28,
                  "15": 31
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "int64Value": "1" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "doubleValue": 1 }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "uint64Value": "2" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "uint64Value": "3" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "10",
                            "mapKey": {
                              "id": "11",
                              "constExpr": { "uint64Value": "1" }
                            },
                            "value": {
                              "id": "12",
                              "constExpr": { "int64Value": "1" }
                            }
                          },
                          {
                            "id": "13",
                            "mapKey": {
                              "id": "14",
                              "constExpr": { "int64Value": "2" }
                            },
                            "value": {
                              "id": "15",
                              "constExpr": { "doubleValue": 3 }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_map_value",
            "expression": "{'k':'v'} == {'k':'v1'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 1,
                  "4": 5,
                  "5": 10,
                  "6": 13,
                  "7": 17,
                  "8": 14,
                  "9": 18
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "stringValue": "k" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "stringValue": "v" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "stringValue": "k" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "stringValue": "v1" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_map_extra_key",
            "expression": "{'k':'v','k1':'v1'} == {'k':'v'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 1,
                  "4": 5,
                  "5": 13,
                  "6": 9,
                  "7": 14,
                  "8": 20,
                  "9": 23,
                  "10": 27,
                  "11": 24,
                  "12": 28
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "stringValue": "k" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "stringValue": "v" }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "stringValue": "k1" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "stringValue": "v1" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "10",
                            "mapKey": {
                              "id": "11",
                              "constExpr": { "stringValue": "k" }
                            },
                            "value": {
                              "id": "12",
                              "constExpr": { "stringValue": "v" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_map_key_order",
            "expression": "{'k1':'v1','k2':'v2'} == {'k2':'v2','k1':'v1'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": {
                  "1": 0,
                  "2": 5,
                  "3": 1,
                  "4": 6,
                  "5": 15,
                  "6": 11,
                  "7": 16,
                  "8": 22,
                  "9": 25,
                  "10": 30,
                  "11": 26,
                  "12": 31,
                  "13": 40,
                  "14": 36,
                  "15": 41
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "stringValue": "k1" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "stringValue": "v1" }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "stringValue": "k2" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "stringValue": "v2" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "10",
                            "mapKey": {
                              "id": "11",
                              "constExpr": { "stringValue": "k2" }
                            },
                            "value": {
                              "id": "12",
                              "constExpr": { "stringValue": "v2" }
                            }
                          },
                          {
                            "id": "13",
                            "mapKey": {
                              "id": "14",
                              "constExpr": { "stringValue": "k1" }
                            },
                            "value": {
                              "id": "15",
                              "constExpr": { "stringValue": "v1" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_map_key_casing",
            "expression": "{'key':'value'} == {'Key':'value'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": {
                  "1": 0,
                  "2": 6,
                  "3": 1,
                  "4": 7,
                  "5": 16,
                  "6": 19,
                  "7": 25,
                  "8": 20,
                  "9": 26
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "stringValue": "key" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "stringValue": "value" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "stringValue": "Key" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "stringValue": "value" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_map_false_vs_types",
            "expression": "{'k1': 1, 'k2': 'dos', 'k3': 3} == {'k1': 1, 'k2': 2, 'k3': 4}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [63],
                "positions": {
                  "1": 0,
                  "2": 5,
                  "3": 1,
                  "4": 7,
                  "5": 14,
                  "6": 10,
                  "7": 16,
                  "8": 27,
                  "9": 23,
                  "10": 29,
                  "11": 32,
                  "12": 35,
                  "13": 40,
                  "14": 36,
                  "15": 42,
                  "16": 49,
                  "17": 45,
                  "18": 51,
                  "19": 58,
                  "20": 54,
                  "21": 60
                }
              },
              "expr": {
                "id": "11",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "stringValue": "k1" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "int64Value": "1" }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "stringValue": "k2" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "stringValue": "dos" }
                            }
                          },
                          {
                            "id": "8",
                            "mapKey": {
                              "id": "9",
                              "constExpr": { "stringValue": "k3" }
                            },
                            "value": {
                              "id": "10",
                              "constExpr": { "int64Value": "3" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "12",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "13",
                            "mapKey": {
                              "id": "14",
                              "constExpr": { "stringValue": "k1" }
                            },
                            "value": {
                              "id": "15",
                              "constExpr": { "int64Value": "1" }
                            }
                          },
                          {
                            "id": "16",
                            "mapKey": {
                              "id": "17",
                              "constExpr": { "stringValue": "k2" }
                            },
                            "value": {
                              "id": "18",
                              "constExpr": { "int64Value": "2" }
                            }
                          },
                          {
                            "id": "19",
                            "mapKey": {
                              "id": "20",
                              "constExpr": { "stringValue": "k3" }
                            },
                            "value": {
                              "id": "21",
                              "constExpr": { "int64Value": "4" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_mixed_types",
            "expression": "1.0 == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 1 } },
                    { "id": "3", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_list_elem_mixed_types",
            "expression": "[1] == [1.0]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 1, "3": 4, "4": 7, "5": 8 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "listExpr": {
                        "elements": [
                          { "id": "5", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_map_value_mixed_types",
            "expression": "{'k':'v', 1:1} == {'k':'v', 1:'v1'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 1,
                  "4": 5,
                  "5": 11,
                  "6": 10,
                  "7": 12,
                  "8": 15,
                  "9": 18,
                  "10": 22,
                  "11": 19,
                  "12": 23,
                  "13": 29,
                  "14": 28,
                  "15": 30
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "stringValue": "k" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "stringValue": "v" }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "int64Value": "1" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "int64Value": "1" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "10",
                            "mapKey": {
                              "id": "11",
                              "constExpr": { "stringValue": "k" }
                            },
                            "value": {
                              "id": "12",
                              "constExpr": { "stringValue": "v" }
                            }
                          },
                          {
                            "id": "13",
                            "mapKey": {
                              "id": "14",
                              "constExpr": { "int64Value": "1" }
                            },
                            "value": {
                              "id": "15",
                              "constExpr": { "stringValue": "v1" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_dyn_json_null",
            "expression": "dyn(google.protobuf.Value{}) == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 3, "2": 25, "3": 29, "4": 32 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "structExpr": {
                              "messageName": "google.protobuf.Value"
                            }
                          }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_dyn_bool_null",
            "expression": "dyn(false) == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 3, "2": 4, "3": 11, "4": 14 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "boolValue": false } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_dyn_bytes_null",
            "expression": "dyn(b'') == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "bytesValue": "" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_dyn_double_null",
            "expression": "dyn(2.1) == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 2.1 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_dyn_duration_null",
            "expression": "dyn(duration('0s')) == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 3, "2": 12, "3": 13, "4": 20, "5": 23 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "callExpr": {
                              "function": "duration",
                              "args": [
                                {
                                  "id": "3",
                                  "constExpr": { "stringValue": "0s" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_dyn_int_null",
            "expression": "dyn(1) == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_dyn_list_null",
            "expression": "dyn([]) == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [{ "id": "2", "listExpr": {} }]
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_dyn_map_null",
            "expression": "dyn({}) == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [{ "id": "2", "structExpr": {} }]
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_dyn_proto2_msg_null",
            "expression": "dyn(TestAllTypes{}) == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 3, "2": 16, "3": 20, "4": 23 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "structExpr": { "messageName": "TestAllTypes" }
                          }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_dyn_proto3_msg_null",
            "expression": "dyn(TestAllTypes{}) == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 3, "2": 16, "3": 20, "4": 23 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "structExpr": { "messageName": "TestAllTypes" }
                          }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_dyn_string_null",
            "expression": "dyn('') == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "stringValue": "" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_dyn_timestamp_null",
            "expression": "dyn(timestamp(0)) == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 3, "2": 13, "3": 14, "4": 18, "5": 21 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "3",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_list_elem_null",
            "expression": "[1, 2, null] == [1, null, 3]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "5": 13,
                  "6": 16,
                  "7": 17,
                  "8": 20,
                  "9": 26
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "int64Value": "1" } },
                          { "id": "3", "constExpr": { "int64Value": "2" } },
                          { "id": "4", "constExpr": { "nullValue": null } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "listExpr": {
                        "elements": [
                          { "id": "7", "constExpr": { "int64Value": "1" } },
                          { "id": "8", "constExpr": { "nullValue": null } },
                          { "id": "9", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_map_value_null",
            "expression": "{1:'hello', 2:'world'} == {1:'goodbye', 2:null}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [48],
                "positions": {
                  "1": 0,
                  "2": 2,
                  "3": 1,
                  "4": 3,
                  "5": 13,
                  "6": 12,
                  "7": 14,
                  "8": 23,
                  "9": 26,
                  "10": 28,
                  "11": 27,
                  "12": 29,
                  "13": 41,
                  "14": 40,
                  "15": 42
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "int64Value": "1" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "stringValue": "hello" }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "int64Value": "2" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "stringValue": "world" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "10",
                            "mapKey": {
                              "id": "11",
                              "constExpr": { "int64Value": "1" }
                            },
                            "value": {
                              "id": "12",
                              "constExpr": { "stringValue": "goodbye" }
                            }
                          },
                          {
                            "id": "13",
                            "mapKey": {
                              "id": "14",
                              "constExpr": { "int64Value": "2" }
                            },
                            "value": {
                              "id": "15",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_dyn_int_uint",
            "expression": "dyn(1) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_dyn_int_double",
            "expression": "dyn(1) == 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_dyn_uint_int",
            "expression": "dyn(1u) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_dyn_uint_double",
            "expression": "dyn(1u) == 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_dyn_double_int",
            "expression": "dyn(1.0) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_dyn_double_uint",
            "expression": "dyn(1.0) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_dyn_int_uint",
            "expression": "dyn(1) == 2u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_dyn_int_double",
            "expression": "dyn(1) == 2.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 2 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_dyn_uint_int",
            "expression": "dyn(1u) == 2",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_dyn_uint_double",
            "expression": "dyn(1u) == 120",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "120" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_dyn_double_int",
            "expression": "dyn(1.0) == 2",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_eq_dyn_double_uint",
            "expression": "dyn(1.0) == 2u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "2" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "eq_wrapper",
        "tests": [
          {
            "name": "eq_bool",
            "expression": "google.protobuf.BoolValue{value: true} == true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": { "1": 25, "2": 31, "3": 33, "4": 39, "5": 42 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.BoolValue",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "boolValue": true }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_bool_empty",
            "expression": "google.protobuf.BoolValue{} == false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 25, "2": 28, "3": 31 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.BoolValue"
                      }
                    },
                    { "id": "3", "constExpr": { "boolValue": false } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_bool_not_null",
            "expression": "google.protobuf.BoolValue{} != null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 25, "2": 28, "3": 31 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.BoolValue"
                      }
                    },
                    { "id": "3", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_bool_proto2_null",
            "expression": "TestAllTypes{}.single_bool_wrapper == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [43],
                "positions": { "1": 12, "2": 14, "3": 35, "4": 38 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "single_bool_wrapper"
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_bool_proto3_null",
            "expression": "TestAllTypes{}.single_bool_wrapper == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [43],
                "positions": { "1": 12, "2": 14, "3": 35, "4": 38 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "single_bool_wrapper"
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_bytes",
            "expression": "google.protobuf.BytesValue{value: b'set'} == b'set'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": { "1": 26, "2": 32, "3": 34, "4": 42, "5": 45 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.BytesValue",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "bytesValue": "c2V0" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "bytesValue": "c2V0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_bytes_empty",
            "expression": "google.protobuf.BytesValue{} == b''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 26, "2": 29, "3": 32 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.BytesValue"
                      }
                    },
                    { "id": "3", "constExpr": { "bytesValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_bytes_not_null",
            "expression": "google.protobuf.BytesValue{} != null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 26, "2": 29, "3": 32 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.BytesValue"
                      }
                    },
                    { "id": "3", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_bytes_proto2_null",
            "expression": "TestAllTypes{}.single_bytes_wrapper == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 12, "2": 14, "3": 36, "4": 39 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "single_bytes_wrapper"
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_bytes_proto3_null",
            "expression": "TestAllTypes{}.single_bytes_wrapper == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 12, "2": 14, "3": 36, "4": 39 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "single_bytes_wrapper"
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_double",
            "expression": "google.protobuf.DoubleValue{value: -1.175494e-40} == -1.175494e-40",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [67],
                "positions": { "1": 27, "2": 33, "3": 35, "4": 50, "5": 53 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.DoubleValue",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "doubleValue": -1.175494e-40 }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "doubleValue": -1.175494e-40 } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_double_empty",
            "expression": "google.protobuf.DoubleValue{} == 0.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 27, "2": 30, "3": 33 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.DoubleValue"
                      }
                    },
                    { "id": "3", "constExpr": { "doubleValue": 0 } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_double_not_null",
            "expression": "google.protobuf.DoubleValue{} != null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "1": 27, "2": 30, "3": 33 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.DoubleValue"
                      }
                    },
                    { "id": "3", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_double_proto2_null",
            "expression": "TestAllTypes{}.single_double_wrapper == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 12, "2": 14, "3": 37, "4": 40 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "single_double_wrapper"
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_double_proto3_null",
            "expression": "TestAllTypes{}.single_double_wrapper == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 12, "2": 14, "3": 37, "4": 40 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "single_double_wrapper"
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_float",
            "expression": "google.protobuf.FloatValue{value: -1.5} == -1.5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [48],
                "positions": { "1": 26, "2": 32, "3": 34, "4": 40, "5": 43 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.FloatValue",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "doubleValue": -1.5 }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "doubleValue": -1.5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_float_empty",
            "expression": "google.protobuf.FloatValue{} == 0.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 26, "2": 29, "3": 32 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.FloatValue"
                      }
                    },
                    { "id": "3", "constExpr": { "doubleValue": 0 } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_float_not_null",
            "expression": "google.protobuf.FloatValue{} != null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 26, "2": 29, "3": 32 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.FloatValue"
                      }
                    },
                    { "id": "3", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_float_proto2_null",
            "expression": "TestAllTypes{}.single_float_wrapper == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 12, "2": 14, "3": 36, "4": 39 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "single_float_wrapper"
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_float_proto3_null",
            "expression": "TestAllTypes{}.single_float_wrapper == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 12, "2": 14, "3": 36, "4": 39 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "single_float_wrapper"
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_int32",
            "expression": "google.protobuf.Int32Value{value: 123} == 123",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 26, "2": 32, "3": 34, "4": 39, "5": 42 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.Int32Value",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "int64Value": "123" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "123" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_int32_empty",
            "expression": "google.protobuf.Int32Value{} == 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 26, "2": 29, "3": 32 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.Int32Value"
                      }
                    },
                    { "id": "3", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_int32_not_null",
            "expression": "google.protobuf.Int32Value{} != null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 26, "2": 29, "3": 32 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.Int32Value"
                      }
                    },
                    { "id": "3", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_int32_proto2_null",
            "expression": "TestAllTypes{}.single_int32_wrapper == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 12, "2": 14, "3": 36, "4": 39 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "single_int32_wrapper"
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_int32_proto3_null",
            "expression": "TestAllTypes{}.single_int32_wrapper == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 12, "2": 14, "3": 36, "4": 39 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "single_int32_wrapper"
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_int64",
            "expression": "google.protobuf.Int64Value{value: 2147483650} == 2147483650",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [60],
                "positions": { "1": 26, "2": 32, "3": 34, "4": 46, "5": 49 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.Int64Value",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "int64Value": "2147483650" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "2147483650" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_int64_empty",
            "expression": "google.protobuf.Int64Value{} == 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 26, "2": 29, "3": 32 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.Int64Value"
                      }
                    },
                    { "id": "3", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_int64_not_null",
            "expression": "google.protobuf.Int64Value{} != null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 26, "2": 29, "3": 32 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.Int64Value"
                      }
                    },
                    { "id": "3", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_int64_proto2_null",
            "expression": "TestAllTypes{}.single_int64_wrapper == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 12, "2": 14, "3": 36, "4": 39 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "single_int64_wrapper"
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_int64_proto3_null",
            "expression": "TestAllTypes{}.single_int64_wrapper == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 12, "2": 14, "3": 36, "4": 39 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "single_int64_wrapper"
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_string",
            "expression": "google.protobuf.StringValue{value: 'set'} == 'set'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [51],
                "positions": { "1": 27, "2": 33, "3": 35, "4": 42, "5": 45 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.StringValue",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "stringValue": "set" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "stringValue": "set" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_string_empty",
            "expression": "google.protobuf.StringValue{} == ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 27, "2": 30, "3": 33 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.StringValue"
                      }
                    },
                    { "id": "3", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_string_not_null",
            "expression": "google.protobuf.StringValue{} != null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "1": 27, "2": 30, "3": 33 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.StringValue"
                      }
                    },
                    { "id": "3", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_string_proto2_null",
            "expression": "TestAllTypes{}.single_string_wrapper == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 12, "2": 14, "3": 37, "4": 40 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "single_string_wrapper"
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_string_proto3_null",
            "expression": "TestAllTypes{}.single_string_wrapper == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 12, "2": 14, "3": 37, "4": 40 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "single_string_wrapper"
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_uint32",
            "expression": "google.protobuf.UInt32Value{value: 42u} == 42u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": { "1": 27, "2": 33, "3": 35, "4": 40, "5": 43 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.UInt32Value",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "uint64Value": "42" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "uint64Value": "42" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_uint32_empty",
            "expression": "google.protobuf.UInt32Value{} == 0u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 27, "2": 30, "3": 33 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.UInt32Value"
                      }
                    },
                    { "id": "3", "constExpr": { "uint64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_uint32_not_null",
            "expression": "google.protobuf.UInt32Value{} != null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "1": 27, "2": 30, "3": 33 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.UInt32Value"
                      }
                    },
                    { "id": "3", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_uint32_proto2_null",
            "expression": "TestAllTypes{}.single_uint32_wrapper == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 12, "2": 14, "3": 37, "4": 40 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "single_uint32_wrapper"
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_uint32_proto3_null",
            "expression": "TestAllTypes{}.single_uint32_wrapper == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 12, "2": 14, "3": 37, "4": 40 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "single_uint32_wrapper"
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_uint64",
            "expression": "google.protobuf.UInt64Value{value: 4294967296u} == 4294967296u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [63],
                "positions": { "1": 27, "2": 33, "3": 35, "4": 48, "5": 51 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.UInt64Value",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "uint64Value": "4294967296" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "uint64Value": "4294967296" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_uint64_empty",
            "expression": "google.protobuf.UInt64Value{} == 0u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 27, "2": 30, "3": 33 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.UInt64Value"
                      }
                    },
                    { "id": "3", "constExpr": { "uint64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_uint64_not_null",
            "expression": "google.protobuf.UInt64Value{} != null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "1": 27, "2": 30, "3": 33 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.UInt64Value"
                      }
                    },
                    { "id": "3", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_uint64_proto2_null",
            "expression": "TestAllTypes{}.single_uint64_wrapper == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 12, "2": 14, "3": 37, "4": 40 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "single_uint64_wrapper"
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_uint64_proto3_null",
            "expression": "TestAllTypes{}.single_uint64_wrapper == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 12, "2": 14, "3": 37, "4": 40 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "single_uint64_wrapper"
                      }
                    },
                    { "id": "4", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_proto2",
            "expression": "TestAllTypes{single_int64: 1234, single_string: '1234'} == TestAllTypes{single_int64: 1234, single_string: '1234'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [115],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 27,
                  "4": 46,
                  "5": 48,
                  "6": 56,
                  "7": 71,
                  "8": 84,
                  "9": 86,
                  "10": 105,
                  "11": 107
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_int64",
                            "value": {
                              "id": "3",
                              "constExpr": { "int64Value": "1234" }
                            }
                          },
                          {
                            "id": "4",
                            "fieldKey": "single_string",
                            "value": {
                              "id": "5",
                              "constExpr": { "stringValue": "1234" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "7",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "8",
                            "fieldKey": "single_int64",
                            "value": {
                              "id": "9",
                              "constExpr": { "int64Value": "1234" }
                            }
                          },
                          {
                            "id": "10",
                            "fieldKey": "single_string",
                            "value": {
                              "id": "11",
                              "constExpr": { "stringValue": "1234" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_proto3",
            "expression": "TestAllTypes{single_int64: 1234, single_string: '1234'} == TestAllTypes{single_int64: 1234, single_string: '1234'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [115],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 27,
                  "4": 46,
                  "5": 48,
                  "6": 56,
                  "7": 71,
                  "8": 84,
                  "9": 86,
                  "10": 105,
                  "11": 107
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_int64",
                            "value": {
                              "id": "3",
                              "constExpr": { "int64Value": "1234" }
                            }
                          },
                          {
                            "id": "4",
                            "fieldKey": "single_string",
                            "value": {
                              "id": "5",
                              "constExpr": { "stringValue": "1234" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "7",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "8",
                            "fieldKey": "single_int64",
                            "value": {
                              "id": "9",
                              "constExpr": { "int64Value": "1234" }
                            }
                          },
                          {
                            "id": "10",
                            "fieldKey": "single_string",
                            "value": {
                              "id": "11",
                              "constExpr": { "stringValue": "1234" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_proto2_missing_fields_neq",
            "expression": "TestAllTypes{single_int64: 1234} == TestAllTypes{single_string: '1234'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [72],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 27,
                  "4": 33,
                  "5": 48,
                  "6": 62,
                  "7": 64
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_int64",
                            "value": {
                              "id": "3",
                              "constExpr": { "int64Value": "1234" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "6",
                            "fieldKey": "single_string",
                            "value": {
                              "id": "7",
                              "constExpr": { "stringValue": "1234" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_proto3_missing_fields_neq",
            "expression": "TestAllTypes{single_int64: 1234} == TestAllTypes{single_string: '1234'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [72],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 27,
                  "4": 33,
                  "5": 48,
                  "6": 62,
                  "7": 64
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_int64",
                            "value": {
                              "id": "3",
                              "constExpr": { "int64Value": "1234" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "6",
                            "fieldKey": "single_string",
                            "value": {
                              "id": "7",
                              "constExpr": { "stringValue": "1234" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_proto_nan_equal",
            "expression": "TestAllTypes{single_double: double('NaN')} == TestAllTypes{single_double: double('NaN')}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [89],
                "positions": {
                  "1": 12,
                  "2": 26,
                  "3": 34,
                  "4": 35,
                  "5": 43,
                  "6": 58,
                  "7": 72,
                  "8": 80,
                  "9": 81
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_double",
                            "value": {
                              "id": "3",
                              "callExpr": {
                                "function": "double",
                                "args": [
                                  {
                                    "id": "4",
                                    "constExpr": { "stringValue": "NaN" }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "7",
                            "fieldKey": "single_double",
                            "value": {
                              "id": "8",
                              "callExpr": {
                                "function": "double",
                                "args": [
                                  {
                                    "id": "9",
                                    "constExpr": { "stringValue": "NaN" }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_proto_different_types",
            "expression": "dyn(TestAllTypes{}) == dyn(NestedTestAllTypes{})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "1": 3, "2": 16, "3": 20, "4": 26, "5": 45 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "structExpr": { "messageName": "TestAllTypes" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "5",
                            "structExpr": {
                              "messageName": "NestedTestAllTypes"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_proto2_any_unpack_equal",
            "expression": "TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001r\\0041234'}} == TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'r\\0041234\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001'}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [365],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 37,
                  "4": 46,
                  "5": 48,
                  "6": 120,
                  "7": 122,
                  "8": 181,
                  "9": 196,
                  "10": 207,
                  "11": 221,
                  "12": 230,
                  "13": 232,
                  "14": 304,
                  "15": 306
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "3",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "4",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "5",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "6",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "7",
                                      "constExpr": {
                                        "bytesValue": "EK72/////////wFyBDEyMzQ="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "10",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "11",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "12",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "13",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "14",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "15",
                                      "constExpr": {
                                        "bytesValue": "cgQxMjM0EK72/////////wE="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_proto2_any_unpack_not_equal",
            "expression": "TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'a\\000\\000\\000\\000\\000H\\223\\300r\\0041234'}} == TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'r\\0041234\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001'}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [351],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 37,
                  "4": 46,
                  "5": 48,
                  "6": 120,
                  "7": 122,
                  "8": 167,
                  "9": 182,
                  "10": 193,
                  "11": 207,
                  "12": 216,
                  "13": 218,
                  "14": 290,
                  "15": 292
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "3",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "4",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "5",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "6",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "7",
                                      "constExpr": {
                                        "bytesValue": "YQAAAAAASJPAcgQxMjM0"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "10",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "11",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "12",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "13",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "14",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "15",
                                      "constExpr": {
                                        "bytesValue": "cgQxMjM0EK72/////////wE="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_proto2_any_unpack_bytewise_fallback_not_equal",
            "expression": "TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'\\242\\006\\023\\022\\021\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001r\\0041234'}} == TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'\\242\\006\\023\\022\\021r\\0041234\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001'}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [405],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 37,
                  "4": 46,
                  "5": 48,
                  "6": 120,
                  "7": 122,
                  "8": 201,
                  "9": 216,
                  "10": 227,
                  "11": 241,
                  "12": 250,
                  "13": 252,
                  "14": 324,
                  "15": 326
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "3",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "4",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "5",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "6",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "7",
                                      "constExpr": {
                                        "bytesValue": "ogYTEhEQrvb/////////AXIEMTIzNA=="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "10",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "11",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "12",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "13",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "14",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "15",
                                      "constExpr": {
                                        "bytesValue": "ogYTEhFyBDEyMzQQrvb/////////AQ=="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_proto2_any_unpack_bytewise_fallback_equal",
            "expression": "TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'\\242\\006\\023\\022\\021\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001r\\0041234'}} == TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'\\242\\006\\023\\022\\021\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001r\\0041234'}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [405],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 37,
                  "4": 46,
                  "5": 48,
                  "6": 120,
                  "7": 122,
                  "8": 201,
                  "9": 216,
                  "10": 227,
                  "11": 241,
                  "12": 250,
                  "13": 252,
                  "14": 324,
                  "15": 326
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "3",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "4",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "5",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "6",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "7",
                                      "constExpr": {
                                        "bytesValue": "ogYTEhEQrvb/////////AXIEMTIzNA=="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "10",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "11",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "12",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "13",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "14",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "15",
                                      "constExpr": {
                                        "bytesValue": "ogYTEhEQrvb/////////AXIEMTIzNA=="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_proto3_any_unpack_equal",
            "expression": "TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001r\\0041234'}} == TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'r\\0041234\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001'}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [365],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 37,
                  "4": 46,
                  "5": 48,
                  "6": 120,
                  "7": 122,
                  "8": 181,
                  "9": 196,
                  "10": 207,
                  "11": 221,
                  "12": 230,
                  "13": 232,
                  "14": 304,
                  "15": 306
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "3",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "4",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "5",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "6",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "7",
                                      "constExpr": {
                                        "bytesValue": "EK72/////////wFyBDEyMzQ="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "10",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "11",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "12",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "13",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "14",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "15",
                                      "constExpr": {
                                        "bytesValue": "cgQxMjM0EK72/////////wE="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_proto3_any_unpack_not_equal",
            "expression": "TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'a\\000\\000\\000\\000\\000H\\223\\300r\\0041234'}} == TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'r\\0041234\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001'}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [351],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 37,
                  "4": 46,
                  "5": 48,
                  "6": 120,
                  "7": 122,
                  "8": 167,
                  "9": 182,
                  "10": 193,
                  "11": 207,
                  "12": 216,
                  "13": 218,
                  "14": 290,
                  "15": 292
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "3",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "4",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "5",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "6",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "7",
                                      "constExpr": {
                                        "bytesValue": "YQAAAAAASJPAcgQxMjM0"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "10",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "11",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "12",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "13",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "14",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "15",
                                      "constExpr": {
                                        "bytesValue": "cgQxMjM0EK72/////////wE="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_proto3_any_unpack_bytewise_fallback_not_equal",
            "expression": "TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'\\242\\006\\023\\022\\021\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001r\\0041234'}} == TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'\\242\\006\\023\\022\\021r\\0041234\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001'}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [405],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 37,
                  "4": 46,
                  "5": 48,
                  "6": 120,
                  "7": 122,
                  "8": 201,
                  "9": 216,
                  "10": 227,
                  "11": 241,
                  "12": 250,
                  "13": 252,
                  "14": 324,
                  "15": 326
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "3",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "4",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "5",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "6",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "7",
                                      "constExpr": {
                                        "bytesValue": "ogYTEhEQrvb/////////AXIEMTIzNA=="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "10",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "11",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "12",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "13",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "14",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "15",
                                      "constExpr": {
                                        "bytesValue": "ogYTEhFyBDEyMzQQrvb/////////AQ=="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_proto3_any_unpack_bytewise_fallback_equal",
            "expression": "TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'\\242\\006\\023\\022\\021\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001r\\0041234'}} == TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'\\242\\006\\023\\022\\021\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001r\\0041234'}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [405],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 37,
                  "4": 46,
                  "5": 48,
                  "6": 120,
                  "7": 122,
                  "8": 201,
                  "9": 216,
                  "10": 227,
                  "11": 241,
                  "12": 250,
                  "13": 252,
                  "14": 324,
                  "15": 326
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "3",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "4",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "5",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "6",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "7",
                                      "constExpr": {
                                        "bytesValue": "ogYTEhEQrvb/////////AXIEMTIzNA=="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "10",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "11",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "12",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "13",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "14",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "15",
                                      "constExpr": {
                                        "bytesValue": "ogYTEhEQrvb/////////AXIEMTIzNA=="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "ne_literal",
        "tests": [
          {
            "name": "ne_int",
            "expression": "24 != 42",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "24" } },
                    { "id": "3", "constExpr": { "int64Value": "42" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_int",
            "expression": "1 != 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 2, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "1" } },
                    { "id": "3", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_int_double",
            "expression": "dyn(24) != 24.1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "24" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 24.1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_int_double",
            "expression": "dyn(1) != 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_int_uint",
            "expression": "dyn(24) != 42u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "24" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "42" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_int_uint",
            "expression": "dyn(1) != 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_uint",
            "expression": "1u != 2u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "1" } },
                    { "id": "3", "constExpr": { "uint64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_uint",
            "expression": "99u != 99u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "99" } },
                    { "id": "3", "constExpr": { "uint64Value": "99" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_uint_double",
            "expression": "dyn(1u) != 2.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 2 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_uint_double",
            "expression": "dyn(99u) != 99.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "99" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 99 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_double",
            "expression": "9.0e+3 != 9001.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 7, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 9000 } },
                    { "id": "3", "constExpr": { "doubleValue": 9001 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_double_nan",
            "expression": "0.0/0.0 != 0.0/0.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": {
                  "1": 0,
                  "2": 3,
                  "3": 4,
                  "4": 8,
                  "5": 11,
                  "6": 14,
                  "7": 15
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_/_",
                        "args": [
                          { "id": "1", "constExpr": { "doubleValue": 0 } },
                          { "id": "3", "constExpr": { "doubleValue": 0 } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "callExpr": {
                        "function": "_/_",
                        "args": [
                          { "id": "5", "constExpr": { "doubleValue": 0 } },
                          { "id": "7", "constExpr": { "doubleValue": 0 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_int_double_nan",
            "expression": "dyn(1) != 0.0/0.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": {
                  "1": 3,
                  "2": 4,
                  "3": 7,
                  "4": 10,
                  "5": 13,
                  "6": 14
                }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "_/_",
                        "args": [
                          { "id": "4", "constExpr": { "doubleValue": 0 } },
                          { "id": "6", "constExpr": { "doubleValue": 0 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_uint_double_nan",
            "expression": "dyn(1u) != 0.0/0.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": {
                  "1": 3,
                  "2": 4,
                  "3": 8,
                  "4": 11,
                  "5": 14,
                  "6": 15
                }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "_/_",
                        "args": [
                          { "id": "4", "constExpr": { "doubleValue": 0 } },
                          { "id": "6", "constExpr": { "doubleValue": 0 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_double",
            "expression": "1.0 != 1e+0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 1 } },
                    { "id": "3", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_double_int",
            "expression": "dyn(9000) != 9001.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 3, "2": 4, "3": 10, "4": 13 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "9000" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 9001 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_double_int",
            "expression": "dyn(1) != 1e+0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_double_uint",
            "expression": "dyn(9000u) != 9001.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 3, "2": 4, "3": 11, "4": 14 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "9000" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 9001 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_double_uint",
            "expression": "dyn(1u) != 1e+0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_double_nan",
            "expression": "0.0/0.0 != 0.0/0.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": {
                  "1": 0,
                  "2": 3,
                  "3": 4,
                  "4": 8,
                  "5": 11,
                  "6": 14,
                  "7": 15
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_/_",
                        "args": [
                          { "id": "1", "constExpr": { "doubleValue": 0 } },
                          { "id": "3", "constExpr": { "doubleValue": 0 } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "callExpr": {
                        "function": "_/_",
                        "args": [
                          { "id": "5", "constExpr": { "doubleValue": 0 } },
                          { "id": "7", "constExpr": { "doubleValue": 0 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_string",
            "expression": "'abc' != ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 6, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "abc" } },
                    { "id": "3", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_string",
            "expression": "'abc' != 'abc'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 6, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "abc" } },
                    { "id": "3", "constExpr": { "stringValue": "abc" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_string_unicode",
            "expression": "'rÃ©sumÃ©' != 'resume'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 0, "2": 9, "3": 12 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "rÃ©sumÃ©" } },
                    { "id": "3", "constExpr": { "stringValue": "resume" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_string_unicode",
            "expression": "'Î¯Î´Î¹Î¿' != 'Î¯Î´Î¹Î¿'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 7, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "Î¯Î´Î¹Î¿" } },
                    { "id": "3", "constExpr": { "stringValue": "Î¯Î´Î¹Î¿" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_bytes",
            "expression": "b'\\x00\\xFF' != b'Ã¿'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 12, "3": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "AP8=" } },
                    { "id": "3", "constExpr": { "bytesValue": "w78=" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_bytes",
            "expression": "b'\\303\\277' != b'Ã¿'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 12, "3": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "w78=" } },
                    { "id": "3", "constExpr": { "bytesValue": "w78=" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_bool",
            "expression": "false != true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 6, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": false } },
                    { "id": "3", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_bool",
            "expression": "true != true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 5, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    { "id": "3", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_null",
            "expression": "null != null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 5, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "constExpr": { "nullValue": null } },
                    { "id": "3", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_list_empty",
            "expression": "[] != [1]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 3, "3": 6, "4": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "listExpr": {} },
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_list_empty",
            "expression": "[] != []",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "listExpr": {} },
                    { "id": "3", "listExpr": {} }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_list_bool",
            "expression": "[true, false, true] != [true, true, false]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [43],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 7,
                  "4": 14,
                  "5": 20,
                  "6": 23,
                  "7": 24,
                  "8": 30,
                  "9": 36
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "boolValue": true } },
                          { "id": "3", "constExpr": { "boolValue": false } },
                          { "id": "4", "constExpr": { "boolValue": true } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "listExpr": {
                        "elements": [
                          { "id": "7", "constExpr": { "boolValue": true } },
                          { "id": "8", "constExpr": { "boolValue": true } },
                          { "id": "9", "constExpr": { "boolValue": false } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_list_bool",
            "expression": "[false, true] != [false, true]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 8,
                  "4": 14,
                  "5": 17,
                  "6": 18,
                  "7": 25
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "boolValue": false } },
                          { "id": "3", "constExpr": { "boolValue": true } }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "listExpr": {
                        "elements": [
                          { "id": "6", "constExpr": { "boolValue": false } },
                          { "id": "7", "constExpr": { "boolValue": true } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_list_of_list",
            "expression": "[[]] != [[]]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 1, "3": 5, "4": 8, "5": 9 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [{ "id": "2", "listExpr": {} }]
                      }
                    },
                    {
                      "id": "4",
                      "listExpr": {
                        "elements": [{ "id": "5", "listExpr": {} }]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_map_by_value",
            "expression": "{'k':'v'} != {'k':'v1'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 1,
                  "4": 5,
                  "5": 10,
                  "6": 13,
                  "7": 17,
                  "8": 14,
                  "9": 18
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "stringValue": "k" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "stringValue": "v" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "stringValue": "k" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "stringValue": "v1" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_map_by_key",
            "expression": "{'k':true} != {'k1':true}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 1,
                  "4": 5,
                  "5": 11,
                  "6": 14,
                  "7": 19,
                  "8": 15,
                  "9": 20
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "stringValue": "k" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "boolValue": true }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "stringValue": "k1" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "boolValue": true }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_map_int_to_float",
            "expression": "{1:1.0} != {1:1.0}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": {
                  "1": 0,
                  "2": 2,
                  "3": 1,
                  "4": 3,
                  "5": 8,
                  "6": 11,
                  "7": 13,
                  "8": 12,
                  "9": 14
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "int64Value": "1" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "doubleValue": 1 }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "int64Value": "1" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "doubleValue": 1 }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_ne_map_key_order",
            "expression": "{'a':'b','c':'d'} != {'c':'d','a':'b'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 1,
                  "4": 5,
                  "5": 12,
                  "6": 9,
                  "7": 13,
                  "8": 18,
                  "9": 21,
                  "10": 25,
                  "11": 22,
                  "12": 26,
                  "13": 33,
                  "14": 30,
                  "15": 34
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "stringValue": "a" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "stringValue": "b" }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "stringValue": "c" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "stringValue": "d" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "10",
                            "mapKey": {
                              "id": "11",
                              "constExpr": { "stringValue": "c" }
                            },
                            "value": {
                              "id": "12",
                              "constExpr": { "stringValue": "d" }
                            }
                          },
                          {
                            "id": "13",
                            "mapKey": {
                              "id": "14",
                              "constExpr": { "stringValue": "a" }
                            },
                            "value": {
                              "id": "15",
                              "constExpr": { "stringValue": "b" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_mixed_types",
            "expression": "2u != 2",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "2" } },
                    { "id": "3", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_proto2",
            "expression": "TestAllTypes{single_int64: 1234, single_string: '1234'} != TestAllTypes{single_int64: 1234, single_string: '1234'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [115],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 27,
                  "4": 46,
                  "5": 48,
                  "6": 56,
                  "7": 71,
                  "8": 84,
                  "9": 86,
                  "10": 105,
                  "11": 107
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_int64",
                            "value": {
                              "id": "3",
                              "constExpr": { "int64Value": "1234" }
                            }
                          },
                          {
                            "id": "4",
                            "fieldKey": "single_string",
                            "value": {
                              "id": "5",
                              "constExpr": { "stringValue": "1234" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "7",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "8",
                            "fieldKey": "single_int64",
                            "value": {
                              "id": "9",
                              "constExpr": { "int64Value": "1234" }
                            }
                          },
                          {
                            "id": "10",
                            "fieldKey": "single_string",
                            "value": {
                              "id": "11",
                              "constExpr": { "stringValue": "1234" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_proto3",
            "expression": "TestAllTypes{single_int64: 1234, single_string: '1234'} != TestAllTypes{single_int64: 1234, single_string: '1234'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [115],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 27,
                  "4": 46,
                  "5": 48,
                  "6": 56,
                  "7": 71,
                  "8": 84,
                  "9": 86,
                  "10": 105,
                  "11": 107
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_int64",
                            "value": {
                              "id": "3",
                              "constExpr": { "int64Value": "1234" }
                            }
                          },
                          {
                            "id": "4",
                            "fieldKey": "single_string",
                            "value": {
                              "id": "5",
                              "constExpr": { "stringValue": "1234" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "7",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "8",
                            "fieldKey": "single_int64",
                            "value": {
                              "id": "9",
                              "constExpr": { "int64Value": "1234" }
                            }
                          },
                          {
                            "id": "10",
                            "fieldKey": "single_string",
                            "value": {
                              "id": "11",
                              "constExpr": { "stringValue": "1234" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_proto2_missing_fields_neq",
            "expression": "TestAllTypes{single_int64: 1234} != TestAllTypes{single_string: '1234'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [72],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 27,
                  "4": 33,
                  "5": 48,
                  "6": 62,
                  "7": 64
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_int64",
                            "value": {
                              "id": "3",
                              "constExpr": { "int64Value": "1234" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "6",
                            "fieldKey": "single_string",
                            "value": {
                              "id": "7",
                              "constExpr": { "stringValue": "1234" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_proto3_missing_fields_neq",
            "expression": "TestAllTypes{single_int64: 1234} != TestAllTypes{single_string: '1234'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [72],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 27,
                  "4": 33,
                  "5": 48,
                  "6": 62,
                  "7": 64
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_int64",
                            "value": {
                              "id": "3",
                              "constExpr": { "int64Value": "1234" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "6",
                            "fieldKey": "single_string",
                            "value": {
                              "id": "7",
                              "constExpr": { "stringValue": "1234" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_proto_nan_not_equal",
            "expression": "TestAllTypes{single_double: double('NaN')} != TestAllTypes{single_double: double('NaN')}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [89],
                "positions": {
                  "1": 12,
                  "2": 26,
                  "3": 34,
                  "4": 35,
                  "5": 43,
                  "6": 58,
                  "7": 72,
                  "8": 80,
                  "9": 81
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_double",
                            "value": {
                              "id": "3",
                              "callExpr": {
                                "function": "double",
                                "args": [
                                  {
                                    "id": "4",
                                    "constExpr": { "stringValue": "NaN" }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "7",
                            "fieldKey": "single_double",
                            "value": {
                              "id": "8",
                              "callExpr": {
                                "function": "double",
                                "args": [
                                  {
                                    "id": "9",
                                    "constExpr": { "stringValue": "NaN" }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_proto_different_types",
            "expression": "dyn(TestAllTypes{}) != dyn(NestedTestAllTypes{})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "1": 3, "2": 16, "3": 20, "4": 26, "5": 45 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "structExpr": { "messageName": "TestAllTypes" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "5",
                            "structExpr": {
                              "messageName": "NestedTestAllTypes"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_proto2_any_unpack",
            "expression": "TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001r\\0041234'}} != TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'r\\0041234\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001'}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [365],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 37,
                  "4": 46,
                  "5": 48,
                  "6": 120,
                  "7": 122,
                  "8": 181,
                  "9": 196,
                  "10": 207,
                  "11": 221,
                  "12": 230,
                  "13": 232,
                  "14": 304,
                  "15": 306
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "3",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "4",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "5",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "6",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "7",
                                      "constExpr": {
                                        "bytesValue": "EK72/////////wFyBDEyMzQ="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "10",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "11",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "12",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "13",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "14",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "15",
                                      "constExpr": {
                                        "bytesValue": "cgQxMjM0EK72/////////wE="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_proto2_any_unpack_bytewise_fallback",
            "expression": "TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'\\242\\006\\023\\022\\021\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001r\\0041234'}} != TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'\\242\\006\\023\\022\\021r\\0041234\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001'}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [405],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 37,
                  "4": 46,
                  "5": 48,
                  "6": 120,
                  "7": 122,
                  "8": 201,
                  "9": 216,
                  "10": 227,
                  "11": 241,
                  "12": 250,
                  "13": 252,
                  "14": 324,
                  "15": 326
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "3",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "4",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "5",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "6",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "7",
                                      "constExpr": {
                                        "bytesValue": "ogYTEhEQrvb/////////AXIEMTIzNA=="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "10",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "11",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "12",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "13",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "14",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "15",
                                      "constExpr": {
                                        "bytesValue": "ogYTEhFyBDEyMzQQrvb/////////AQ=="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_proto3_any_unpack",
            "expression": "TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001r\\0041234'}} != TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'r\\0041234\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001'}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [365],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 37,
                  "4": 46,
                  "5": 48,
                  "6": 120,
                  "7": 122,
                  "8": 181,
                  "9": 196,
                  "10": 207,
                  "11": 221,
                  "12": 230,
                  "13": 232,
                  "14": 304,
                  "15": 306
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "3",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "4",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "5",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "6",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "7",
                                      "constExpr": {
                                        "bytesValue": "EK72/////////wFyBDEyMzQ="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "10",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "11",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "12",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "13",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "14",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "15",
                                      "constExpr": {
                                        "bytesValue": "cgQxMjM0EK72/////////wE="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ne_proto3_any_unpack_bytewise_fallback",
            "expression": "TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'\\242\\006\\023\\022\\021\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001r\\0041234'}} != TestAllTypes{single_any: protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'\\242\\006\\023\\022\\021r\\0041234\\020\\256\\366\\377\\377\\377\\377\\377\\377\\377\\001'}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [405],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 37,
                  "4": 46,
                  "5": 48,
                  "6": 120,
                  "7": 122,
                  "8": 201,
                  "9": 216,
                  "10": 227,
                  "11": 241,
                  "12": 250,
                  "13": 252,
                  "14": 324,
                  "15": 326
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "3",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "4",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "5",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "6",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "7",
                                      "constExpr": {
                                        "bytesValue": "ogYTEhEQrvb/////////AXIEMTIzNA=="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "10",
                            "fieldKey": "single_any",
                            "value": {
                              "id": "11",
                              "structExpr": {
                                "messageName": "protobuf.Any",
                                "entries": [
                                  {
                                    "id": "12",
                                    "fieldKey": "type_url",
                                    "value": {
                                      "id": "13",
                                      "constExpr": {
                                        "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                                      }
                                    }
                                  },
                                  {
                                    "id": "14",
                                    "fieldKey": "value",
                                    "value": {
                                      "id": "15",
                                      "constExpr": {
                                        "bytesValue": "ogYTEhFyBDEyMzQQrvb/////////AQ=="
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "lt_literal",
        "tests": [
          {
            "name": "lt_int",
            "expression": "-1 \u003c 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "-1" } },
                    { "id": "3", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_int",
            "expression": "0 \u003c 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [6],
                "positions": { "1": 0, "2": 2, "3": 4 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "0" } },
                    { "id": "3", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_uint",
            "expression": "0u \u003c 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "0" } },
                    { "id": "3", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_uint",
            "expression": "2u \u003c 2u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "2" } },
                    { "id": "3", "constExpr": { "uint64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_double",
            "expression": "1.0 \u003c 1.0000001",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 1 } },
                    { "id": "3", "constExpr": { "doubleValue": 1.0000001 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_double",
            "expression": "-0.0 \u003c 0.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": -0 } },
                    { "id": "3", "constExpr": { "doubleValue": 0 } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_string",
            "expression": "'a' \u003c 'b'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "a" } },
                    { "id": "3", "constExpr": { "stringValue": "b" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_string_empty_to_nonempty",
            "expression": "'' \u003c 'a'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "" } },
                    { "id": "3", "constExpr": { "stringValue": "a" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_string_case",
            "expression": "'Abc' \u003c 'aBC'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 6, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "Abc" } },
                    { "id": "3", "constExpr": { "stringValue": "aBC" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_string_length",
            "expression": "'abc' \u003c 'abcd'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 6, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "abc" } },
                    { "id": "3", "constExpr": { "stringValue": "abcd" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_string_diacritical_mark_sensitive",
            "expression": "'a' \u003c '\\u00E1'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "a" } },
                    { "id": "3", "constExpr": { "stringValue": "Ã¡" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_string_empty",
            "expression": "'' \u003c ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "" } },
                    { "id": "3", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_string_same",
            "expression": "'abc' \u003c 'abc'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 6, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "abc" } },
                    { "id": "3", "constExpr": { "stringValue": "abc" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_string_case_length",
            "expression": "'a' \u003c 'AB'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "a" } },
                    { "id": "3", "constExpr": { "stringValue": "AB" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_order_lexical",
            "expression": "'f' \u003c '\\u1EBF'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "f" } },
                    { "id": "3", "constExpr": { "stringValue": "áº¿" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_bytes",
            "expression": "b'a' \u003c b'b'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "YQ==" } },
                    { "id": "3", "constExpr": { "bytesValue": "Yg==" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_bytes_same",
            "expression": "b'abc' \u003c b'abc'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 7, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "YWJj" } },
                    { "id": "3", "constExpr": { "bytesValue": "YWJj" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_bytes_width",
            "expression": "b'Ã¡' \u003c b'b'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "w6E=" } },
                    { "id": "3", "constExpr": { "bytesValue": "Yg==" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_bool_false_first",
            "expression": "false \u003c true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 6, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": false } },
                    { "id": "3", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_bool_same",
            "expression": "true \u003c true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    { "id": "3", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_bool_true_first",
            "expression": "true \u003c false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    { "id": "3", "constExpr": { "boolValue": false } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_list_unsupported",
            "expression": "[0] \u003c [1]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 1, "3": 4, "4": 6, "5": 7 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "int64Value": "0" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "listExpr": {
                        "elements": [
                          { "id": "5", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_map_unsupported",
            "expression": "{0:'a'} \u003c {1:'b'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": {
                  "1": 0,
                  "2": 2,
                  "3": 1,
                  "4": 3,
                  "5": 8,
                  "6": 10,
                  "7": 12,
                  "8": 11,
                  "9": 13
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "int64Value": "0" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "stringValue": "a" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "int64Value": "1" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "stringValue": "b" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_null_unsupported",
            "expression": "null \u003c null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "nullValue": null } },
                    { "id": "3", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_mixed_types_error",
            "expression": "'foo' \u003c 1024",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 6, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "foo" } },
                    { "id": "3", "constExpr": { "int64Value": "1024" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_dyn_int_uint",
            "expression": "dyn(1) \u003c 2u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 9 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_dyn_int_double",
            "expression": "dyn(1) \u003c 2.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 9 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 2 } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_dyn_uint_int",
            "expression": "dyn(1u) \u003c 2",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_dyn_uint_double",
            "expression": "dyn(1u) \u003c 2.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 2 } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_dyn_double_int",
            "expression": "dyn(1.0) \u003c 2",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_dyn_double_uint",
            "expression": "dyn(1.0) \u003c 2u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_dyn_int_uint",
            "expression": "dyn(1) \u003c 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 9 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_dyn_int_double",
            "expression": "dyn(1) \u003c 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 9 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_dyn_uint_int",
            "expression": "dyn(1u) \u003c 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_dyn_uint_double",
            "expression": "dyn(1u) \u003c 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_dyn_double_int",
            "expression": "dyn(1.0) \u003c 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_dyn_double_uint",
            "expression": "dyn(1.0) \u003c 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_dyn_int_big_uint",
            "expression": "dyn(1) \u003c 9223372036854775808u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 9 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "uint64Value": "9223372036854775808" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_dyn_small_int_uint",
            "expression": "dyn(-1) \u003c 0u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "-1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_dyn_int_big_lossy_double",
            "expression": "dyn(9223372036854775807) \u003c 9223372036854775808.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "1": 3, "2": 4, "3": 25, "4": 27 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "int64Value": "9223372036854775807" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "doubleValue": 9223372036854776000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_dyn_int_big_lossy_double",
            "expression": "dyn(9223372036854775807) \u003c 9223372036854777857.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "1": 3, "2": 4, "3": 25, "4": 27 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "int64Value": "9223372036854775807" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "doubleValue": 9223372036854778000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_dyn_int_small_double",
            "expression": "dyn(9223372036854775807) \u003c -9223372036854777857.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": { "1": 3, "2": 4, "3": 25, "4": 27 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "int64Value": "9223372036854775807" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "doubleValue": -9223372036854778000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_dyn_int_small_lossy_double",
            "expression": "dyn(-9223372036854775808) \u003c -9223372036854775809.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [51],
                "positions": { "1": 3, "2": 4, "3": 26, "4": 28 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "int64Value": "-9223372036854775808"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "doubleValue": -9223372036854776000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_dyn_uint_small_int",
            "expression": "dyn(1u) \u003c -9223372036854775808",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "int64Value": "-9223372036854775808" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_dyn_big_uint_int",
            "expression": "dyn(9223372036854775808u) \u003c 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 3, "2": 4, "3": 26, "4": 28 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "uint64Value": "9223372036854775808"
                            }
                          }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_dyn_uint_small_double",
            "expression": "dyn(18446744073709551615u) \u003c -1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 3, "2": 4, "3": 27, "4": 29 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "uint64Value": "18446744073709551615"
                            }
                          }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": -1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "lt_dyn_uint_big_double",
            "expression": "dyn(18446744073709551615u) \u003c 18446744073709590000.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": { "1": 3, "2": 4, "3": 27, "4": 29 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "uint64Value": "18446744073709551615"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "doubleValue": 18446744073709590000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_dyn_big_double_uint",
            "expression": "dyn(18446744073709553665.0) \u003c 18446744073709551615u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": { "1": 3, "2": 4, "3": 28, "4": 30 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "doubleValue": 18446744073709556000 }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "uint64Value": "18446744073709551615" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_dyn_big_double_int",
            "expression": "dyn(9223372036854775808.0) \u003c 9223372036854775807",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "1": 3, "2": 4, "3": 27, "4": 29 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "doubleValue": 9223372036854776000 }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "int64Value": "9223372036854775807" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lt_dyn_small_double_int",
            "expression": "dyn(-9223372036854775809.0) \u003c -9223372036854775808",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [51],
                "positions": { "1": 3, "2": 4, "3": 28, "4": 30 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "doubleValue": -9223372036854776000 }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "int64Value": "-9223372036854775808" }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "gt_literal",
        "tests": [
          {
            "name": "gt_int",
            "expression": "42 \u003e -42",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "42" } },
                    { "id": "3", "constExpr": { "int64Value": "-42" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_int",
            "expression": "0 \u003e 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [6],
                "positions": { "1": 0, "2": 2, "3": 4 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "0" } },
                    { "id": "3", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_uint",
            "expression": "48u \u003e 46u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "48" } },
                    { "id": "3", "constExpr": { "uint64Value": "46" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_uint",
            "expression": "0u \u003e 999u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "0" } },
                    { "id": "3", "constExpr": { "uint64Value": "999" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_double",
            "expression": "1e+1 \u003e 1e+0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 10 } },
                    { "id": "3", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_double",
            "expression": ".99 \u003e 9.9e-1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 0.99 } },
                    { "id": "3", "constExpr": { "doubleValue": 0.99 } }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_string_case",
            "expression": "'abc' \u003e 'aBc'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 6, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "abc" } },
                    { "id": "3", "constExpr": { "stringValue": "aBc" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_string_to_empty",
            "expression": "'A' \u003e ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "A" } },
                    { "id": "3", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_string_empty_to_empty",
            "expression": "'' \u003e ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "" } },
                    { "id": "3", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_string_unicode",
            "expression": "'Î±' \u003e 'omega'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "Î±" } },
                    { "id": "3", "constExpr": { "stringValue": "omega" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_bytes_one",
            "expression": "b'\u0001' \u003e b'\u0000'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "AQ==" } },
                    { "id": "3", "constExpr": { "bytesValue": "AA==" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_bytes_one_to_empty",
            "expression": "b'\u0000' \u003e b''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "AA==" } },
                    { "id": "3", "constExpr": { "bytesValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_bytes_sorting",
            "expression": "b'\u0000\u0001' \u003e b'\u0001'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 6, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "AAE=" } },
                    { "id": "3", "constExpr": { "bytesValue": "AQ==" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_bool_true_false",
            "expression": "true \u003e false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    { "id": "3", "constExpr": { "boolValue": false } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_bool_false_true",
            "expression": "false \u003e true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 6, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": false } },
                    { "id": "3", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_bool_same",
            "expression": "true \u003e true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    { "id": "3", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_null_unsupported",
            "expression": "null \u003e null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "constExpr": { "nullValue": null } },
                    { "id": "3", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_list_unsupported",
            "expression": "[1] \u003e [0]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 1, "3": 4, "4": 6, "5": 7 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "listExpr": {
                        "elements": [
                          { "id": "5", "constExpr": { "int64Value": "0" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_map_unsupported",
            "expression": "{1:'b'} \u003e {0:'a'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": {
                  "1": 0,
                  "2": 2,
                  "3": 1,
                  "4": 3,
                  "5": 8,
                  "6": 10,
                  "7": 12,
                  "8": 11,
                  "9": 13
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "int64Value": "1" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "stringValue": "b" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "int64Value": "0" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "stringValue": "a" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_mixed_types_error",
            "expression": "'foo' \u003e 1024",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 6, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "foo" } },
                    { "id": "3", "constExpr": { "int64Value": "1024" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_dyn_int_uint",
            "expression": "dyn(2) \u003e 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 9 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_dyn_int_double",
            "expression": "dyn(2) \u003e 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 9 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_dyn_uint_int",
            "expression": "dyn(2u) \u003e 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_dyn_uint_double",
            "expression": "dyn(2u) \u003e 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_dyn_double_int",
            "expression": "dyn(2.0) \u003e 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 2 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_dyn_double_uint",
            "expression": "dyn(2.0) \u003e 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 2 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_dyn_int_uint",
            "expression": "dyn(1) \u003e 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 9 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_dyn_int_double",
            "expression": "dyn(1) \u003e 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 9 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_dyn_uint_int",
            "expression": "dyn(1u) \u003e 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_dyn_uint_double",
            "expression": "dyn(1u) \u003e 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_dyn_double_int",
            "expression": "dyn(1.0) \u003e 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_dyn_double_uint",
            "expression": "dyn(1.0) \u003e 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_dyn_int_big_uint",
            "expression": "dyn(1) \u003e 9223372036854775808u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 9 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "uint64Value": "9223372036854775808" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_dyn_small_int_uint",
            "expression": "dyn(-1) \u003e 0u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "-1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_dyn_int_big_double",
            "expression": "dyn(9223372036854775807) \u003e 9223372036854775808.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "1": 3, "2": 4, "3": 25, "4": 27 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "int64Value": "9223372036854775807" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "doubleValue": 9223372036854776000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_dyn_int_small_lossy_double",
            "expression": "dyn(-9223372036854775808) \u003e -9223372036854775809.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [51],
                "positions": { "1": 3, "2": 4, "3": 26, "4": 28 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "int64Value": "-9223372036854775808"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "doubleValue": -9223372036854776000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_dyn_int_small_lossy_double_greater",
            "expression": "dyn(-9223372036854775808) \u003e -9223372036854777857.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [51],
                "positions": { "1": 3, "2": 4, "3": 26, "4": 28 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "int64Value": "-9223372036854775808"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "doubleValue": -9223372036854778000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_dyn_uint_small_int",
            "expression": "dyn(1u) \u003e -1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_dyn_big_uint_int",
            "expression": "dyn(9223372036854775808u) \u003e 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 3, "2": 4, "3": 26, "4": 28 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "uint64Value": "9223372036854775808"
                            }
                          }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_dyn_uint_small_double",
            "expression": "dyn(9223372036854775807u) \u003e -1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 3, "2": 4, "3": 26, "4": 28 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "uint64Value": "9223372036854775807"
                            }
                          }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": -1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_dyn_uint_big_double",
            "expression": "dyn(18446744073709551615u) \u003e 18446744073709590000.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": { "1": 3, "2": 4, "3": 27, "4": 29 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "uint64Value": "18446744073709551615"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "doubleValue": 18446744073709590000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "gt_dyn_big_double_uint",
            "expression": "dyn(18446744073709553665.0) \u003e 18446744073709551615u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": { "1": 3, "2": 4, "3": 28, "4": 30 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "doubleValue": 18446744073709556000 }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "uint64Value": "18446744073709551615" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_dyn_big_double_int",
            "expression": "dyn(9223372036854775808.0) \u003e 9223372036854775807",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "1": 3, "2": 4, "3": 27, "4": 29 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "doubleValue": 9223372036854776000 }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "int64Value": "9223372036854775807" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gt_dyn_small_double_int",
            "expression": "dyn(-9223372036854775809.0) \u003e -9223372036854775808",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [51],
                "positions": { "1": 3, "2": 4, "3": 28, "4": 30 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "doubleValue": -9223372036854776000 }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "int64Value": "-9223372036854775808" }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "lte_literal",
        "tests": [
          {
            "name": "lte_int_lt",
            "expression": "0 \u003c= 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 2, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "0" } },
                    { "id": "3", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_int_eq",
            "expression": "1 \u003c= 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 2, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "1" } },
                    { "id": "3", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lte_int_gt",
            "expression": "1 \u003c= -1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0, "2": 2, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "1" } },
                    { "id": "3", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_uint_lt",
            "expression": "0u \u003c= 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "0" } },
                    { "id": "3", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_uint_eq",
            "expression": "1u \u003c= 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "1" } },
                    { "id": "3", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lte_uint_gt",
            "expression": "1u \u003c= 0u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "1" } },
                    { "id": "3", "constExpr": { "uint64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_double_lt",
            "expression": "0.0 \u003c= 0.1e-31",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 0 } },
                    { "id": "3", "constExpr": { "doubleValue": 1e-32 } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_double_eq",
            "expression": "0.0 \u003c= 0e-1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 0 } },
                    { "id": "3", "constExpr": { "doubleValue": 0 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lte_double_gt",
            "expression": "1.0 \u003c= 0.99",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 1 } },
                    { "id": "3", "constExpr": { "doubleValue": 0.99 } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_string_empty",
            "expression": "'' \u003c= ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "" } },
                    { "id": "3", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_string_from_empty",
            "expression": "'' \u003c= 'a'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "" } },
                    { "id": "3", "constExpr": { "stringValue": "a" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lte_string_to_empty",
            "expression": "'a' \u003c= ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "a" } },
                    { "id": "3", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_string_lexicographical",
            "expression": "'aBc' \u003c= 'abc'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 6, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "aBc" } },
                    { "id": "3", "constExpr": { "stringValue": "abc" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_string_unicode_eq",
            "expression": "'Î±' \u003c= 'Î±'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "Î±" } },
                    { "id": "3", "constExpr": { "stringValue": "Î±" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_string_unicode_lt",
            "expression": "'a' \u003c= 'Î±'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "a" } },
                    { "id": "3", "constExpr": { "stringValue": "Î±" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lte_string_unicode",
            "expression": "'Î±' \u003c= 'a'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "Î±" } },
                    { "id": "3", "constExpr": { "stringValue": "a" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_bytes_empty",
            "expression": "b'' \u003c= b'\u0000'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "" } },
                    { "id": "3", "constExpr": { "bytesValue": "AA==" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lte_bytes_length",
            "expression": "b'\u0001\u0000' \u003c= b'\u0001'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 6, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "AQA=" } },
                    { "id": "3", "constExpr": { "bytesValue": "AQ==" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_bool_false_true",
            "expression": "false \u003c= true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 6, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": false } },
                    { "id": "3", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_bool_false_false",
            "expression": "false \u003c= false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 6, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": false } },
                    { "id": "3", "constExpr": { "boolValue": false } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_bool_true_false",
            "expression": "true \u003c= false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 5, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    { "id": "3", "constExpr": { "boolValue": false } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_null_unsupported",
            "expression": "null \u003c= null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 5, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "nullValue": null } },
                    { "id": "3", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_list_unsupported",
            "expression": "[0] \u003c= [0]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 1, "3": 4, "4": 7, "5": 8 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "int64Value": "0" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "listExpr": {
                        "elements": [
                          { "id": "5", "constExpr": { "int64Value": "0" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_map_unsupported",
            "expression": "{0:'a'} \u003c= {1:'b'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": {
                  "1": 0,
                  "2": 2,
                  "3": 1,
                  "4": 3,
                  "5": 8,
                  "6": 11,
                  "7": 13,
                  "8": 12,
                  "9": 14
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "int64Value": "0" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "stringValue": "a" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "int64Value": "1" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "stringValue": "b" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_mixed_types_error",
            "expression": "'foo' \u003c= 1024",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 6, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "foo" } },
                    { "id": "3", "constExpr": { "int64Value": "1024" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_dyn_int_uint",
            "expression": "dyn(1) \u003c= 2u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_dyn_int_double",
            "expression": "dyn(1) \u003c= 2.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 2 } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_dyn_uint_int",
            "expression": "dyn(1u) \u003c= 2",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_dyn_uint_double",
            "expression": "dyn(1u) \u003c= 2.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 2 } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_dyn_double_int",
            "expression": "dyn(1.0) \u003c= 2",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_dyn_double_uint",
            "expression": "dyn(1.0) \u003c= 2u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lte_dyn_int_uint",
            "expression": "dyn(2) \u003c= 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lte_dyn_int_double",
            "expression": "dyn(2) \u003c= 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lte_dyn_uint_int",
            "expression": "dyn(2u) \u003c= 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lte_dyn_uint_double",
            "expression": "dyn(2u) \u003c= 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lte_dyn_double_int",
            "expression": "dyn(2.0) \u003c= 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 2 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lte_dyn_double_uint",
            "expression": "dyn(2.0) \u003c= 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 2 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_dyn_int_big_uint",
            "expression": "dyn(1) \u003c= 9223372036854775808u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "uint64Value": "9223372036854775808" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_dyn_small_int_uint",
            "expression": "dyn(-1) \u003c= 0u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "-1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_dyn_int_big_double",
            "expression": "dyn(9223372036854775807) \u003c= 9223372036854775808.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": { "1": 3, "2": 4, "3": 25, "4": 28 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "int64Value": "9223372036854775807" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "doubleValue": 9223372036854776000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_dyn_int_small_lossy_double",
            "expression": "dyn(-9223372036854775808) \u003c= -9223372036854775809.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": { "1": 3, "2": 4, "3": 26, "4": 29 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "int64Value": "-9223372036854775808"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "doubleValue": -9223372036854776000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lte_dyn_int_small_lossy_double_less",
            "expression": "dyn(-9223372036854775808) \u003c= -9223372036854777857.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": { "1": 3, "2": 4, "3": 26, "4": 29 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "int64Value": "-9223372036854775808"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "doubleValue": -9223372036854778000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lte_dyn_uint_small_int",
            "expression": "dyn(1u) \u003c= -9223372036854775808",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "int64Value": "-9223372036854775808" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lte_dyn_big_uint_int",
            "expression": "dyn(9223372036854775808u) \u003c= 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 3, "2": 4, "3": 26, "4": 29 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "uint64Value": "9223372036854775808"
                            }
                          }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lte_dyn_uint_small_double",
            "expression": "dyn(18446744073709551615u) \u003c= -1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": { "1": 3, "2": 4, "3": 27, "4": 30 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "uint64Value": "18446744073709551615"
                            }
                          }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": -1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_dyn_uint_big_double",
            "expression": "dyn(18446744073709551615u) \u003c= 18446744073709590000.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [53],
                "positions": { "1": 3, "2": 4, "3": 27, "4": 30 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "uint64Value": "18446744073709551615"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "doubleValue": 18446744073709590000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_lte_dyn_big_double_uint",
            "expression": "dyn(18446744073709553665.0) \u003c= 18446744073709551615u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [53],
                "positions": { "1": 3, "2": 4, "3": 28, "4": 31 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "doubleValue": 18446744073709556000 }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "uint64Value": "18446744073709551615" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_dyn_big_double_int",
            "expression": "dyn(9223372036854775808.0) \u003c= 9223372036854775807",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": { "1": 3, "2": 4, "3": 27, "4": 30 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "doubleValue": 9223372036854776000 }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "int64Value": "9223372036854775807" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "lte_dyn_small_double_int",
            "expression": "dyn(-9223372036854775809.0) \u003c= -9223372036854775808",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": { "1": 3, "2": 4, "3": 28, "4": 31 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "doubleValue": -9223372036854776000 }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "int64Value": "-9223372036854775808" }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "gte_literal",
        "tests": [
          {
            "name": "gte_int_gt",
            "expression": "0 \u003e= -1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0, "2": 2, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "0" } },
                    { "id": "3", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_int_eq",
            "expression": "999 \u003e= 999",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "999" } },
                    { "id": "3", "constExpr": { "int64Value": "999" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gte_int_lt",
            "expression": "999 \u003e= 1000",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "999" } },
                    { "id": "3", "constExpr": { "int64Value": "1000" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_uint_gt",
            "expression": "1u \u003e= 0u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "1" } },
                    { "id": "3", "constExpr": { "uint64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_uint_eq",
            "expression": "0u \u003e= 0u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "0" } },
                    { "id": "3", "constExpr": { "uint64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gte_uint_lt",
            "expression": "1u \u003e= 10u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "1" } },
                    { "id": "3", "constExpr": { "uint64Value": "10" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_double_gt",
            "expression": "1e+1 \u003e= 1e+0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 5, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 10 } },
                    { "id": "3", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_double_eq",
            "expression": "9.80665 \u003e= 9.80665e+0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": { "1": 0, "2": 8, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 9.80665 } },
                    { "id": "3", "constExpr": { "doubleValue": 9.80665 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gte_double_lt",
            "expression": "0.9999 \u003e= 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 7, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 0.9999 } },
                    { "id": "3", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_string_empty",
            "expression": "'' \u003e= ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "" } },
                    { "id": "3", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_string_to_empty",
            "expression": "'a' \u003e= ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "a" } },
                    { "id": "3", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_string_empty_to_nonempty",
            "expression": "'' \u003e= 'a'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "" } },
                    { "id": "3", "constExpr": { "stringValue": "a" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_string_length",
            "expression": "'abcd' \u003e= 'abc'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 7, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "abcd" } },
                    { "id": "3", "constExpr": { "stringValue": "abc" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gte_string_lexicographical",
            "expression": "'abc' \u003e= 'abd'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 6, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "abc" } },
                    { "id": "3", "constExpr": { "stringValue": "abd" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_string_unicode_eq",
            "expression": "'Ï' \u003e= 'Ï'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "Ï" } },
                    { "id": "3", "constExpr": { "stringValue": "Ï" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_string_unicode_gt",
            "expression": "'Ï' \u003e= 't'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "Ï" } },
                    { "id": "3", "constExpr": { "stringValue": "t" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_get_string_unicode",
            "expression": "'t' \u003e= 'Ï'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "t" } },
                    { "id": "3", "constExpr": { "stringValue": "Ï" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_bytes_to_empty",
            "expression": "b'\u0000' \u003e= b''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 5, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "AA==" } },
                    { "id": "3", "constExpr": { "bytesValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gte_bytes_empty_to_nonempty",
            "expression": "b'' \u003e= b'\u0000'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "" } },
                    { "id": "3", "constExpr": { "bytesValue": "AA==" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_bytes_samelength",
            "expression": "b'\u0000\u0001' \u003e= b'\u0001\u0000'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 6, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "AAE=" } },
                    { "id": "3", "constExpr": { "bytesValue": "AQA=" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_bool_gt",
            "expression": "true \u003e= false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 5, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    { "id": "3", "constExpr": { "boolValue": false } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_bool_eq",
            "expression": "true \u003e= true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 5, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    { "id": "3", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gte_bool_lt",
            "expression": "false \u003e= true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 6, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": false } },
                    { "id": "3", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_null_unsupported",
            "expression": "null \u003e= null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 5, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "nullValue": null } },
                    { "id": "3", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_list_unsupported",
            "expression": "['y'] \u003e= ['x']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 1, "3": 6, "4": 9, "5": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "stringValue": "y" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "listExpr": {
                        "elements": [
                          { "id": "5", "constExpr": { "stringValue": "x" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_map_unsupported",
            "expression": "{1:'b'} \u003e= {0:'a'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": {
                  "1": 0,
                  "2": 2,
                  "3": 1,
                  "4": 3,
                  "5": 8,
                  "6": 11,
                  "7": 13,
                  "8": 12,
                  "9": 14
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "int64Value": "1" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "stringValue": "b" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "int64Value": "0" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "stringValue": "a" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_mixed_types_error",
            "expression": "'foo' \u003e= 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 6, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "foo" } },
                    { "id": "3", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_dyn_int_uint",
            "expression": "dyn(2) \u003e= 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_dyn_int_double",
            "expression": "dyn(2) \u003e= 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_dyn_uint_int",
            "expression": "dyn(2u) \u003e= 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_dyn_uint_double",
            "expression": "dyn(2u) \u003e= 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_dyn_double_int",
            "expression": "dyn(2.0) \u003e= 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 2 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_dyn_double_uint",
            "expression": "dyn(2.0) \u003e= 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 2 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gte_dyn_int_uint",
            "expression": "dyn(0) \u003e= 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "0" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gte_dyn_int_double",
            "expression": "dyn(0) \u003e= 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "0" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gte_dyn_uint_int",
            "expression": "dyn(0u) \u003e= 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "0" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gte_dyn_uint_double",
            "expression": "dyn(0u) \u003e= 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "0" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gte_dyn_double_int",
            "expression": "dyn(0.0) \u003e= 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 0 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gte_dyn_double_uint",
            "expression": "dyn(0.0) \u003e= 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 3, "2": 4, "3": 9, "4": 12 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 0 } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gte_dyn_int_big_uint",
            "expression": "dyn(1) \u003e= 9223372036854775808u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 3, "2": 4, "3": 7, "4": 10 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "uint64Value": "9223372036854775808" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gte_dyn_small_int_uint",
            "expression": "dyn(-1) \u003e= 0u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "-1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_dyn_int_big_lossy_double",
            "expression": "dyn(9223372036854775807) \u003e= 9223372036854775808.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": { "1": 3, "2": 4, "3": 25, "4": 28 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "int64Value": "9223372036854775807" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "doubleValue": 9223372036854776000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gte_dyn_int_big_double",
            "expression": "dyn(9223372036854775807) \u003e= 9223372036854777857.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": { "1": 3, "2": 4, "3": 25, "4": 28 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "int64Value": "9223372036854775807" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "doubleValue": 9223372036854778000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_dyn_int_small_lossy_double_equal",
            "expression": "dyn(-9223372036854775808) \u003e= -9223372036854775809.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": { "1": 3, "2": 4, "3": 26, "4": 29 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "int64Value": "-9223372036854775808"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "doubleValue": -9223372036854776000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_dyn_int_small_lossy_double_greater",
            "expression": "dyn(-9223372036854775808) \u003e= -9223372036854777857.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": { "1": 3, "2": 4, "3": 26, "4": 29 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "int64Value": "-9223372036854775808"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "doubleValue": -9223372036854778000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_dyn_uint_small_int",
            "expression": "dyn(1u) \u003e= -1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4, "3": 8, "4": 11 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_dyn_big_uint_int",
            "expression": "dyn(9223372036854775808u) \u003e= 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 3, "2": 4, "3": 26, "4": 29 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "uint64Value": "9223372036854775808"
                            }
                          }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_dyn_uint_small_double",
            "expression": "dyn(9223372036854775807u) \u003e= -1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 3, "2": 4, "3": 26, "4": 29 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "uint64Value": "9223372036854775807"
                            }
                          }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "doubleValue": -1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "not_gte_dyn_uint_big_double",
            "expression": "dyn(18446744073709551615u) \u003e= 18446744073709553665.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [53],
                "positions": { "1": 3, "2": 4, "3": 27, "4": 30 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "uint64Value": "18446744073709551615"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "doubleValue": 18446744073709556000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_dyn_big_double_uint",
            "expression": "dyn(18446744073709553665.0) \u003e= 18446744073709551615u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [53],
                "positions": { "1": 3, "2": 4, "3": 28, "4": 31 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "doubleValue": 18446744073709556000 }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "uint64Value": "18446744073709551615" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_dyn_big_double_int",
            "expression": "dyn(9223372036854775808.0) \u003e= 9223372036854775807",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": { "1": 3, "2": 4, "3": 27, "4": 30 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "doubleValue": 9223372036854776000 }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "int64Value": "9223372036854775807" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "gte_dyn_small_double_int",
            "expression": "dyn(-9223372036854775809.0) \u003e= -9223372036854775808",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": { "1": 3, "2": 4, "3": 28, "4": 31 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "doubleValue": -9223372036854776000 }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "constExpr": { "int64Value": "-9223372036854775808" }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "in_list_literal",
        "tests": [
          {
            "name": "elem_not_in_empty_list",
            "expression": "'empty' in []",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 8, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "empty" } },
                    { "id": "3", "listExpr": {} }
                  ]
                }
              }
            }
          },
          {
            "name": "elem_in_list",
            "expression": "'elem' in ['elem', 'elemA', 'elemB']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": {
                  "1": 0,
                  "2": 7,
                  "3": 10,
                  "4": 11,
                  "5": 19,
                  "6": 28
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "elem" } },
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "stringValue": "elem" } },
                          {
                            "id": "5",
                            "constExpr": { "stringValue": "elemA" }
                          },
                          { "id": "6", "constExpr": { "stringValue": "elemB" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "elem_not_in_list",
            "expression": "'not' in ['elem1', 'elem2', 'elem3']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": {
                  "1": 0,
                  "2": 6,
                  "3": 9,
                  "4": 10,
                  "5": 19,
                  "6": 28
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "not" } },
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "constExpr": { "stringValue": "elem1" }
                          },
                          {
                            "id": "5",
                            "constExpr": { "stringValue": "elem2" }
                          },
                          { "id": "6", "constExpr": { "stringValue": "elem3" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "elem_in_mixed_type_list",
            "expression": "'elem' in [1, 'elem', 2]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": {
                  "1": 0,
                  "2": 7,
                  "3": 10,
                  "4": 11,
                  "5": 14,
                  "6": 22
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "elem" } },
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          { "id": "5", "constExpr": { "stringValue": "elem" } },
                          { "id": "6", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "elem_in_mixed_type_list_cross_type",
            "expression": "'elem' in [1u, 'str', 2, b'bytes']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": {
                  "1": 0,
                  "2": 7,
                  "3": 10,
                  "4": 11,
                  "5": 15,
                  "6": 22,
                  "7": 25
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "elem" } },
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "uint64Value": "1" } },
                          { "id": "5", "constExpr": { "stringValue": "str" } },
                          { "id": "6", "constExpr": { "int64Value": "2" } },
                          {
                            "id": "7",
                            "constExpr": { "bytesValue": "Ynl0ZXM=" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "in_map_literal",
        "tests": [
          {
            "name": "key_not_in_empty_map",
            "expression": "'empty' in {}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 8, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "empty" } },
                    { "id": "3", "structExpr": {} }
                  ]
                }
              }
            }
          },
          {
            "name": "key_in_map",
            "expression": "'key' in {'key':'1', 'other':'2'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": {
                  "1": 0,
                  "2": 6,
                  "3": 9,
                  "4": 15,
                  "5": 10,
                  "6": 16,
                  "7": 28,
                  "8": 21,
                  "9": 29
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "key" } },
                    {
                      "id": "3",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "4",
                            "mapKey": {
                              "id": "5",
                              "constExpr": { "stringValue": "key" }
                            },
                            "value": {
                              "id": "6",
                              "constExpr": { "stringValue": "1" }
                            }
                          },
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "stringValue": "other" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "stringValue": "2" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "key_not_in_map",
            "expression": "'key' in {'lock':1, 'gate':2}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": {
                  "1": 0,
                  "2": 6,
                  "3": 9,
                  "4": 16,
                  "5": 10,
                  "6": 17,
                  "7": 26,
                  "8": 20,
                  "9": 27
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "key" } },
                    {
                      "id": "3",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "4",
                            "mapKey": {
                              "id": "5",
                              "constExpr": { "stringValue": "lock" }
                            },
                            "value": {
                              "id": "6",
                              "constExpr": { "int64Value": "1" }
                            }
                          },
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "stringValue": "gate" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "int64Value": "2" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "key_in_mixed_key_type_map",
            "expression": "'key' in {3:3.0, 'key':2u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": {
                  "1": 0,
                  "2": 6,
                  "3": 9,
                  "4": 11,
                  "5": 10,
                  "6": 12,
                  "7": 22,
                  "8": 17,
                  "9": 23
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "key" } },
                    {
                      "id": "3",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "4",
                            "mapKey": {
                              "id": "5",
                              "constExpr": { "int64Value": "3" }
                            },
                            "value": {
                              "id": "6",
                              "constExpr": { "doubleValue": 3 }
                            }
                          },
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "stringValue": "key" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "uint64Value": "2" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "key_in_mixed_key_type_map_cross_type",
            "expression": "'key' in {1u:'str', 2:b'bytes'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 0,
                  "2": 6,
                  "3": 9,
                  "4": 12,
                  "5": 10,
                  "6": 13,
                  "7": 21,
                  "8": 20,
                  "9": 22
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "key" } },
                    {
                      "id": "3",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "4",
                            "mapKey": {
                              "id": "5",
                              "constExpr": { "uint64Value": "1" }
                            },
                            "value": {
                              "id": "6",
                              "constExpr": { "stringValue": "str" }
                            }
                          },
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "int64Value": "2" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "bytesValue": "Ynl0ZXM=" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "bound",
        "tests": [
          {
            "name": "bytes_gt_left_false",
            "expression": "x \u003e b'\u0000'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 2, "3": 4 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    { "id": "1", "identExpr": { "name": "x" } },
                    { "id": "3", "constExpr": { "bytesValue": "AA==" } }
                  ]
                }
              }
            }
          },
          {
            "name": "int_lte_right_true",
            "expression": "123 \u003c= x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "123" } },
                    { "id": "3", "identExpr": { "name": "x" } }
                  ]
                }
              }
            }
          },
          {
            "name": "bool_lt_right_true",
            "expression": "false \u003c x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 6, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": false } },
                    { "id": "3", "identExpr": { "name": "x" } }
                  ]
                }
              }
            }
          },
          {
            "name": "double_ne_left_false",
            "expression": "x != 9.8",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 2, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    { "id": "1", "identExpr": { "name": "x" } },
                    { "id": "3", "constExpr": { "doubleValue": 9.8 } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_ne_right_false",
            "expression": "{'a':'b','c':'d'} != x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 1,
                  "4": 5,
                  "5": 12,
                  "6": 9,
                  "7": 13,
                  "8": 18,
                  "9": 21
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "stringValue": "a" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "stringValue": "b" }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "stringValue": "c" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "stringValue": "d" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "9", "identExpr": { "name": "x" } }
                  ]
                }
              }
            }
          },
          {
            "name": "null_eq_left_true",
            "expression": "x == null",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 2, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "identExpr": { "name": "x" } },
                    { "id": "3", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "list_eq_right_false",
            "expression": "[1, 2] == x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 1, "3": 4, "4": 7, "5": 10 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "int64Value": "1" } },
                          { "id": "3", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "5", "identExpr": { "name": "x" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_gte_right_true",
            "expression": "'abcd' \u003e= x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 7, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "abcd" } },
                    { "id": "3", "identExpr": { "name": "x" } }
                  ]
                }
              }
            }
          },
          {
            "name": "uint_eq_right_false",
            "expression": "999u == x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 5, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "999" } },
                    { "id": "3", "identExpr": { "name": "x" } }
                  ]
                }
              }
            }
          },
          {
            "name": "null_lt_right_no_such_overload",
            "expression": "null \u003c x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    { "id": "1", "constExpr": { "nullValue": null } },
                    { "id": "3", "identExpr": { "name": "x" } }
                  ]
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "conversions",
    "sections": [
      {
        "name": "bytes",
        "tests": [
          {
            "name": "string_empty",
            "expression": "bytes('')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 5, "2": 6 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "bytes",
                  "args": [{ "id": "2", "constExpr": { "stringValue": "" } }]
                }
              }
            }
          },
          {
            "name": "string",
            "expression": "bytes('abc')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 5, "2": 6 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "bytes",
                  "args": [{ "id": "2", "constExpr": { "stringValue": "abc" } }]
                }
              }
            }
          },
          {
            "name": "string_unicode",
            "expression": "bytes('Ã¿')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 5, "2": 6 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "bytes",
                  "args": [{ "id": "2", "constExpr": { "stringValue": "Ã¿" } }]
                }
              }
            }
          },
          {
            "name": "string_unicode_vs_literal",
            "expression": "bytes('\\377') == b'\\377'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": { "1": 5, "2": 6, "3": 14, "4": 17 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "bytes",
                        "args": [
                          { "id": "2", "constExpr": { "stringValue": "Ã¿" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "bytesValue": "/w==" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "double",
        "tests": [
          {
            "name": "int_zero",
            "expression": "double(0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [{ "id": "2", "constExpr": { "int64Value": "0" } }]
                }
              }
            }
          },
          {
            "name": "int_pos",
            "expression": "double(1000000000000)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [
                    {
                      "id": "2",
                      "constExpr": { "int64Value": "1000000000000" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int_neg",
            "expression": "double(-1000000000000000)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [
                    {
                      "id": "2",
                      "constExpr": { "int64Value": "-1000000000000000" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int_min_exact",
            "expression": "double(-9007199254740992)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [
                    {
                      "id": "2",
                      "constExpr": { "int64Value": "-9007199254740992" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int_max_exact",
            "expression": "double(9007199254740992)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [
                    {
                      "id": "2",
                      "constExpr": { "int64Value": "9007199254740992" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int_range",
            "expression": "double(9223372036854775807)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [
                    {
                      "id": "2",
                      "constExpr": { "int64Value": "9223372036854775807" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint_zero",
            "expression": "double(0u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [{ "id": "2", "constExpr": { "uint64Value": "0" } }]
                }
              }
            }
          },
          {
            "name": "uint_pos",
            "expression": "double(123u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [{ "id": "2", "constExpr": { "uint64Value": "123" } }]
                }
              }
            }
          },
          {
            "name": "uint_max_exact",
            "expression": "double(9007199254740992u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [
                    {
                      "id": "2",
                      "constExpr": { "uint64Value": "9007199254740992" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint_range",
            "expression": "double(18446744073709551615u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [
                    {
                      "id": "2",
                      "constExpr": { "uint64Value": "18446744073709551615" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "string_zero",
            "expression": "double('0')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [{ "id": "2", "constExpr": { "stringValue": "0" } }]
                }
              }
            }
          },
          {
            "name": "string_zero_dec",
            "expression": "double('0.0')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [{ "id": "2", "constExpr": { "stringValue": "0.0" } }]
                }
              }
            }
          },
          {
            "name": "string_neg_zero",
            "expression": "double('-0.0')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [
                    { "id": "2", "constExpr": { "stringValue": "-0.0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_no_dec",
            "expression": "double('123')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [{ "id": "2", "constExpr": { "stringValue": "123" } }]
                }
              }
            }
          },
          {
            "name": "string_pos",
            "expression": "double('123.456')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [
                    { "id": "2", "constExpr": { "stringValue": "123.456" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_neg",
            "expression": "double('-987.654')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [
                    { "id": "2", "constExpr": { "stringValue": "-987.654" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_exp_pos_pos",
            "expression": "double('6.02214e23')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [
                    { "id": "2", "constExpr": { "stringValue": "6.02214e23" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_exp_pos_neg",
            "expression": "double('1.38e-23')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [
                    { "id": "2", "constExpr": { "stringValue": "1.38e-23" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_exp_neg_pos",
            "expression": "double('-84.32e7')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [
                    { "id": "2", "constExpr": { "stringValue": "-84.32e7" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_exp_neg_neg",
            "expression": "double('-5.43e-21')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [
                    { "id": "2", "constExpr": { "stringValue": "-5.43e-21" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "dyn",
        "tests": [
          {
            "name": "dyn_heterogeneous_list",
            "expression": "type(dyn([1, 'one']))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": { "1": 4, "2": 8, "3": 9, "4": 10, "5": 13 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "stringValue": "one" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "int",
        "tests": [
          {
            "name": "uint",
            "expression": "int(42u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 3, "2": 4 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [{ "id": "2", "constExpr": { "uint64Value": "42" } }]
                }
              }
            }
          },
          {
            "name": "uint_zero",
            "expression": "int(0u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 3, "2": 4 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [{ "id": "2", "constExpr": { "uint64Value": "0" } }]
                }
              }
            }
          },
          {
            "name": "uint_max_exact",
            "expression": "int(9223372036854775807u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 3, "2": 4 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [
                    {
                      "id": "2",
                      "constExpr": { "uint64Value": "9223372036854775807" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint_range",
            "expression": "int(18446744073709551615u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 3, "2": 4 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [
                    {
                      "id": "2",
                      "constExpr": { "uint64Value": "18446744073709551615" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "double_round_neg",
            "expression": "int(-123.456)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 3, "2": 4 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [
                    { "id": "2", "constExpr": { "doubleValue": -123.456 } }
                  ]
                }
              }
            }
          },
          {
            "name": "double_truncate",
            "expression": "int(1.9)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 3, "2": 4 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [{ "id": "2", "constExpr": { "doubleValue": 1.9 } }]
                }
              }
            }
          },
          {
            "name": "double_truncate_neg",
            "expression": "int(-7.9)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 3, "2": 4 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [{ "id": "2", "constExpr": { "doubleValue": -7.9 } }]
                }
              }
            }
          },
          {
            "name": "double_half_pos",
            "expression": "int(11.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 3, "2": 4 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [{ "id": "2", "constExpr": { "doubleValue": 11.5 } }]
                }
              }
            }
          },
          {
            "name": "double_half_neg",
            "expression": "int(-3.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 3, "2": 4 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [{ "id": "2", "constExpr": { "doubleValue": -3.5 } }]
                }
              }
            }
          },
          {
            "name": "double_big_exact",
            "expression": "int(double(36028797018963968))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 3, "2": 10, "3": 11 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "double",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "int64Value": "36028797018963968" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "double_big_precision",
            "expression": "int(double(36028797018963969))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 3, "2": 10, "3": 11 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "double",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "int64Value": "36028797018963969" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "double_int_max_range",
            "expression": "int(9223372036854775807.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 3, "2": 4 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [
                    {
                      "id": "2",
                      "constExpr": { "doubleValue": 9223372036854776000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "double_int_min_range",
            "expression": "int(-9223372036854775808.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 3, "2": 4 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [
                    {
                      "id": "2",
                      "constExpr": { "doubleValue": -9223372036854776000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "double_range",
            "expression": "int(1e99)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 3, "2": 4 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [{ "id": "2", "constExpr": { "doubleValue": 1e99 } }]
                }
              }
            }
          },
          {
            "name": "string",
            "expression": "int('987')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 3, "2": 4 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [{ "id": "2", "constExpr": { "stringValue": "987" } }]
                }
              }
            }
          },
          {
            "name": "timestamp",
            "expression": "int(timestamp('2004-09-16T23:59:59Z'))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": { "1": 3, "2": 13, "3": 14 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": {
                              "stringValue": "2004-09-16T23:59:59Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "string",
        "tests": [
          {
            "name": "int",
            "expression": "string(123)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "string",
                  "args": [{ "id": "2", "constExpr": { "int64Value": "123" } }]
                }
              }
            }
          },
          {
            "name": "int_neg",
            "expression": "string(-456)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "string",
                  "args": [{ "id": "2", "constExpr": { "int64Value": "-456" } }]
                }
              }
            }
          },
          {
            "name": "uint",
            "expression": "string(9876u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "string",
                  "args": [
                    { "id": "2", "constExpr": { "uint64Value": "9876" } }
                  ]
                }
              }
            }
          },
          {
            "name": "double",
            "expression": "string(123.456)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "string",
                  "args": [
                    { "id": "2", "constExpr": { "doubleValue": 123.456 } }
                  ]
                }
              }
            }
          },
          {
            "name": "double_hard",
            "expression": "string(-4.5e-3)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "string",
                  "args": [
                    { "id": "2", "constExpr": { "doubleValue": -0.0045 } }
                  ]
                }
              }
            }
          },
          {
            "name": "bytes",
            "expression": "string(b'abc')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "string",
                  "args": [{ "id": "2", "constExpr": { "bytesValue": "YWJj" } }]
                }
              }
            }
          },
          {
            "name": "bytes_unicode",
            "expression": "string(b'\\303\\277')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "string",
                  "args": [{ "id": "2", "constExpr": { "bytesValue": "w78=" } }]
                }
              }
            }
          },
          {
            "name": "bytes_invalid",
            "expression": "string(b'\\000\\xff')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "string",
                  "args": [{ "id": "2", "constExpr": { "bytesValue": "AP8=" } }]
                }
              }
            }
          }
        ]
      },
      {
        "name": "type",
        "tests": [
          {
            "name": "bool",
            "expression": "type(true)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [{ "id": "2", "constExpr": { "boolValue": true } }]
                }
              }
            }
          },
          {
            "name": "bool_denotation",
            "expression": "bool",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [5],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "bool" } }
            }
          },
          {
            "name": "dyn_no_denotation",
            "expression": "dyn",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [4],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "dyn" } }
            }
          },
          {
            "name": "int",
            "expression": "type(0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [{ "id": "2", "constExpr": { "int64Value": "0" } }]
                }
              }
            }
          },
          {
            "name": "int_denotation",
            "expression": "int",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [4],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "int" } }
            }
          },
          {
            "name": "eq_same",
            "expression": "type(true) == type(false)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 4, "2": 5, "3": 11, "4": 18, "5": 19 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "type",
                        "args": [
                          { "id": "2", "constExpr": { "boolValue": true } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "type",
                        "args": [
                          { "id": "5", "constExpr": { "boolValue": false } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint",
            "expression": "type(64u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [{ "id": "2", "constExpr": { "uint64Value": "64" } }]
                }
              }
            }
          },
          {
            "name": "uint_denotation",
            "expression": "uint",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [5],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "uint" } }
            }
          },
          {
            "name": "double",
            "expression": "type(3.14)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [{ "id": "2", "constExpr": { "doubleValue": 3.14 } }]
                }
              }
            }
          },
          {
            "name": "double_denotation",
            "expression": "double",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "double" } }
            }
          },
          {
            "name": "null_type",
            "expression": "type(null)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [{ "id": "2", "constExpr": { "nullValue": null } }]
                }
              }
            }
          },
          {
            "name": "null_type_denotation",
            "expression": "null_type",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "null_type" } }
            }
          },
          {
            "name": "string",
            "expression": "type('foo')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [{ "id": "2", "constExpr": { "stringValue": "foo" } }]
                }
              }
            }
          },
          {
            "name": "string_denotation",
            "expression": "string",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "string" } }
            }
          },
          {
            "name": "bytes",
            "expression": "type(b'\\xff')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [{ "id": "2", "constExpr": { "bytesValue": "/w==" } }]
                }
              }
            }
          },
          {
            "name": "bytes_denotation",
            "expression": "bytes",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [6],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "bytes" } }
            }
          },
          {
            "name": "list",
            "expression": "type([1, 2, 3])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 4, "2": 5, "3": 6, "4": 9, "5": 12 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [
                    {
                      "id": "2",
                      "listExpr": {
                        "elements": [
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "int64Value": "2" } },
                          { "id": "5", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "list_denotation",
            "expression": "list",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [5],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "list" } }
            }
          },
          {
            "name": "lists_monomorphic",
            "expression": "type([1, 2, 3]) == type(['one', 'two', 'three'])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": {
                  "1": 4,
                  "2": 5,
                  "3": 6,
                  "4": 9,
                  "5": 12,
                  "6": 16,
                  "7": 23,
                  "8": 24,
                  "9": 25,
                  "10": 32,
                  "11": 39
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "type",
                        "args": [
                          {
                            "id": "2",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "3",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "4",
                                  "constExpr": { "int64Value": "2" }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "3" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "7",
                      "callExpr": {
                        "function": "type",
                        "args": [
                          {
                            "id": "8",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "9",
                                  "constExpr": { "stringValue": "one" }
                                },
                                {
                                  "id": "10",
                                  "constExpr": { "stringValue": "two" }
                                },
                                {
                                  "id": "11",
                                  "constExpr": { "stringValue": "three" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "map",
            "expression": "type({4: 16})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 4, "2": 5, "3": 7, "4": 6, "5": 9 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [
                    {
                      "id": "2",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "3",
                            "mapKey": {
                              "id": "4",
                              "constExpr": { "int64Value": "4" }
                            },
                            "value": {
                              "id": "5",
                              "constExpr": { "int64Value": "16" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "map_denotation",
            "expression": "map",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [4],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "map" } }
            }
          },
          {
            "name": "map_monomorphic",
            "expression": "type({'one': 1}) == type({1: 'one'})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": {
                  "1": 4,
                  "2": 5,
                  "3": 11,
                  "4": 6,
                  "5": 13,
                  "6": 17,
                  "7": 24,
                  "8": 25,
                  "9": 27,
                  "10": 26,
                  "11": 29
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "type",
                        "args": [
                          {
                            "id": "2",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "3",
                                  "mapKey": {
                                    "id": "4",
                                    "constExpr": { "stringValue": "one" }
                                  },
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "7",
                      "callExpr": {
                        "function": "type",
                        "args": [
                          {
                            "id": "8",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "9",
                                  "mapKey": {
                                    "id": "10",
                                    "constExpr": { "int64Value": "1" }
                                  },
                                  "value": {
                                    "id": "11",
                                    "constExpr": { "stringValue": "one" }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_diff",
            "expression": "type(7) == type(7u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 4, "2": 5, "3": 8, "4": 15, "5": 16 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "type",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "7" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "type",
                        "args": [
                          { "id": "5", "constExpr": { "uint64Value": "7" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "neq_same",
            "expression": "type(0.0) != type(-0.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": { "1": 4, "2": 5, "3": 10, "4": 17, "5": 18 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "type",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 0 } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "type",
                        "args": [
                          { "id": "5", "constExpr": { "doubleValue": -0 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "neq_diff",
            "expression": "type(0.0) != type(0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 4, "2": 5, "3": 10, "4": 17, "5": 18 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "type",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 0 } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "type",
                        "args": [
                          { "id": "5", "constExpr": { "int64Value": "0" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "meta",
            "expression": "type(type(7)) == type(type(7u))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 4,
                  "2": 9,
                  "3": 10,
                  "4": 14,
                  "5": 21,
                  "6": 26,
                  "7": 27
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "type",
                        "args": [
                          {
                            "id": "2",
                            "callExpr": {
                              "function": "type",
                              "args": [
                                {
                                  "id": "3",
                                  "constExpr": { "int64Value": "7" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "type",
                        "args": [
                          {
                            "id": "6",
                            "callExpr": {
                              "function": "type",
                              "args": [
                                {
                                  "id": "7",
                                  "constExpr": { "uint64Value": "7" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "type",
            "expression": "type(int)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [{ "id": "2", "identExpr": { "name": "int" } }]
                }
              }
            }
          },
          {
            "name": "type_denotation",
            "expression": "type",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [5],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "type" } }
            }
          },
          {
            "name": "type_type",
            "expression": "type(type)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [{ "id": "2", "identExpr": { "name": "type" } }]
                }
              }
            }
          }
        ]
      },
      {
        "name": "uint",
        "tests": [
          {
            "name": "int",
            "expression": "uint(1729)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "uint",
                  "args": [{ "id": "2", "constExpr": { "int64Value": "1729" } }]
                }
              }
            }
          },
          {
            "name": "int_max",
            "expression": "uint(9223372036854775807)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "uint",
                  "args": [
                    {
                      "id": "2",
                      "constExpr": { "int64Value": "9223372036854775807" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int_neg",
            "expression": "uint(-1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "uint",
                  "args": [{ "id": "2", "constExpr": { "int64Value": "-1" } }]
                }
              }
            }
          },
          {
            "name": "double",
            "expression": "uint(3.14159265)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "uint",
                  "args": [
                    { "id": "2", "constExpr": { "doubleValue": 3.14159265 } }
                  ]
                }
              }
            }
          },
          {
            "name": "double_truncate",
            "expression": "uint(1.9)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "uint",
                  "args": [{ "id": "2", "constExpr": { "doubleValue": 1.9 } }]
                }
              }
            }
          },
          {
            "name": "double_half",
            "expression": "uint(25.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "uint",
                  "args": [{ "id": "2", "constExpr": { "doubleValue": 25.5 } }]
                }
              }
            }
          },
          {
            "name": "double_big_exact",
            "expression": "uint(double(36028797018963968u))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 4, "2": 11, "3": 12 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "uint",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "double",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "uint64Value": "36028797018963968" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "double_big_precision",
            "expression": "uint(double(36028797018963969u))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 4, "2": 11, "3": 12 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "uint",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "double",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "uint64Value": "36028797018963969" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "double_uint_max_range",
            "expression": "int(18446744073709551615.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 3, "2": 4 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [
                    {
                      "id": "2",
                      "constExpr": { "doubleValue": 18446744073709552000 }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "double_range_beyond_uint",
            "expression": "uint(6.022e23)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "uint",
                  "args": [
                    { "id": "2", "constExpr": { "doubleValue": 6.022e23 } }
                  ]
                }
              }
            }
          },
          {
            "name": "string",
            "expression": "uint('300')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "uint",
                  "args": [{ "id": "2", "constExpr": { "stringValue": "300" } }]
                }
              }
            }
          }
        ]
      },
      {
        "name": "bool",
        "tests": [
          {
            "name": "string_1",
            "expression": "bool('1')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "bool",
                  "args": [{ "id": "2", "constExpr": { "stringValue": "1" } }]
                }
              }
            }
          },
          {
            "name": "string_t",
            "expression": "bool('t')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "bool",
                  "args": [{ "id": "2", "constExpr": { "stringValue": "t" } }]
                }
              }
            }
          },
          {
            "name": "string_true_lowercase",
            "expression": "bool('true')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "bool",
                  "args": [
                    { "id": "2", "constExpr": { "stringValue": "true" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_true_uppercase",
            "expression": "bool('TRUE')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "bool",
                  "args": [
                    { "id": "2", "constExpr": { "stringValue": "TRUE" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_true_pascalcase",
            "expression": "bool('True')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "bool",
                  "args": [
                    { "id": "2", "constExpr": { "stringValue": "True" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_0",
            "expression": "bool('0')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "bool",
                  "args": [{ "id": "2", "constExpr": { "stringValue": "0" } }]
                }
              }
            }
          },
          {
            "name": "string_f",
            "expression": "bool('f')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "bool",
                  "args": [{ "id": "2", "constExpr": { "stringValue": "f" } }]
                }
              }
            }
          },
          {
            "name": "string_false_lowercase",
            "expression": "bool('false')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "bool",
                  "args": [
                    { "id": "2", "constExpr": { "stringValue": "false" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_false_uppercase",
            "expression": "bool('FALSE')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "bool",
                  "args": [
                    { "id": "2", "constExpr": { "stringValue": "FALSE" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_false_pascalcase",
            "expression": "bool('False')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "bool",
                  "args": [
                    { "id": "2", "constExpr": { "stringValue": "False" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_true_badcase",
            "expression": "bool('TrUe')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "bool",
                  "args": [
                    { "id": "2", "constExpr": { "stringValue": "TrUe" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_false_badcase",
            "expression": "bool('FaLsE')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "bool",
                  "args": [
                    { "id": "2", "constExpr": { "stringValue": "FaLsE" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "identity",
        "tests": [
          {
            "name": "bool",
            "expression": "bool(true)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "bool",
                  "args": [{ "id": "2", "constExpr": { "boolValue": true } }]
                }
              }
            }
          },
          {
            "name": "int",
            "expression": "int(1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 3, "2": 4 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [{ "id": "2", "constExpr": { "int64Value": "1" } }]
                }
              }
            }
          },
          {
            "name": "uint",
            "expression": "uint(1u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "uint",
                  "args": [{ "id": "2", "constExpr": { "uint64Value": "1" } }]
                }
              }
            }
          },
          {
            "name": "double",
            "expression": "double(5.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "double",
                  "args": [{ "id": "2", "constExpr": { "doubleValue": 5.5 } }]
                }
              }
            }
          },
          {
            "name": "string",
            "expression": "string('hello')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 6, "2": 7 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "string",
                  "args": [
                    { "id": "2", "constExpr": { "stringValue": "hello" } }
                  ]
                }
              }
            }
          },
          {
            "name": "bytes",
            "expression": "bytes(b'abc')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 5, "2": 6 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "bytes",
                  "args": [{ "id": "2", "constExpr": { "bytesValue": "YWJj" } }]
                }
              }
            }
          },
          {
            "name": "duration",
            "expression": "duration(duration('100s')) == duration('100s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": {
                  "1": 8,
                  "2": 17,
                  "3": 18,
                  "4": 27,
                  "5": 38,
                  "6": 39
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          {
                            "id": "2",
                            "callExpr": {
                              "function": "duration",
                              "args": [
                                {
                                  "id": "3",
                                  "constExpr": { "stringValue": "100s" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "6", "constExpr": { "stringValue": "100s" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "timestamp",
            "expression": "timestamp(timestamp(1000000000)) == timestamp(1000000000)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [58],
                "positions": {
                  "1": 9,
                  "2": 19,
                  "3": 20,
                  "4": 33,
                  "5": 45,
                  "6": 46
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "2",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "3",
                                  "constExpr": { "int64Value": "1000000000" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "6",
                            "constExpr": { "int64Value": "1000000000" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "dynamic",
    "sections": [
      {
        "name": "int32",
        "tests": [
          {
            "name": "literal",
            "expression": "google.protobuf.Int32Value{value: -123}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 26, "2": 32, "3": 34 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.Int32Value",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "value",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-123" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_no_field_access",
            "expression": "google.protobuf.Int32Value{value: -123}.value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 26, "2": 32, "3": 34, "4": 39 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "google.protobuf.Int32Value",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "value",
                          "value": {
                            "id": "3",
                            "constExpr": { "int64Value": "-123" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "value"
                }
              }
            }
          },
          {
            "name": "literal_zero",
            "expression": "google.protobuf.Int32Value{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": { "1": 26 }
              },
              "expr": {
                "id": "1",
                "structExpr": { "messageName": "google.protobuf.Int32Value" }
              }
            }
          },
          {
            "name": "var",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "field_assign_proto2",
            "expression": "TestAllTypes{single_int32_wrapper: 432}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "432" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_zero",
            "expression": "TestAllTypes{single_int32_wrapper: 0}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int32_wrapper",
                      "value": { "id": "3", "constExpr": { "int64Value": "0" } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_max",
            "expression": "TestAllTypes{single_int32_wrapper: 2147483647}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "2147483647" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_min",
            "expression": "TestAllTypes{single_int32_wrapper: -2147483648}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [48],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-2147483648" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_range",
            "expression": "TestAllTypes{single_int32_wrapper: 12345678900}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [48],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "12345678900" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto2",
            "expression": "TestAllTypes{single_int32_wrapper: 642}.single_int32_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [61],
                "positions": { "1": 12, "2": 33, "3": 35, "4": 39 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_int32_wrapper",
                          "value": {
                            "id": "3",
                            "constExpr": { "int64Value": "642" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_int32_wrapper"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_zero",
            "expression": "TestAllTypes{single_int32_wrapper: 0}.single_int32_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [59],
                "positions": { "1": 12, "2": 33, "3": 35, "4": 37 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_int32_wrapper",
                          "value": {
                            "id": "3",
                            "constExpr": { "int64Value": "0" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_int32_wrapper"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_unset",
            "expression": "TestAllTypes{}.single_int32_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_int32_wrapper"
                }
              }
            }
          },
          {
            "name": "field_assign_proto3",
            "expression": "TestAllTypes{single_int32_wrapper: -975}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-975" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_zero",
            "expression": "TestAllTypes{single_int32_wrapper: 0}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int32_wrapper",
                      "value": { "id": "3", "constExpr": { "int64Value": "0" } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_max",
            "expression": "TestAllTypes{single_int32_wrapper: 2147483647}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "2147483647" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_min",
            "expression": "TestAllTypes{single_int32_wrapper: -2147483648}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [48],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-2147483648" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_range",
            "expression": "TestAllTypes{single_int32_wrapper: -998877665544332211}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [56],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-998877665544332211" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto3",
            "expression": "TestAllTypes{single_int32_wrapper: 642}.single_int32_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [61],
                "positions": { "1": 12, "2": 33, "3": 35, "4": 39 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_int32_wrapper",
                          "value": {
                            "id": "3",
                            "constExpr": { "int64Value": "642" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_int32_wrapper"
                }
              }
            }
          },
          {
            "name": "field_read_proto3_zero",
            "expression": "TestAllTypes{single_int32_wrapper: 0}.single_int32_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [59],
                "positions": { "1": 12, "2": 33, "3": 35, "4": 37 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_int32_wrapper",
                          "value": {
                            "id": "3",
                            "constExpr": { "int64Value": "0" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_int32_wrapper"
                }
              }
            }
          },
          {
            "name": "field_read_proto3_unset",
            "expression": "TestAllTypes{}.single_int32_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_int32_wrapper"
                }
              }
            }
          }
        ]
      },
      {
        "name": "int64",
        "tests": [
          {
            "name": "literal",
            "expression": "google.protobuf.Int64Value{value: -123}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 26, "2": 32, "3": 34 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.Int64Value",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "value",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-123" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_no_field_access",
            "expression": "google.protobuf.Int64Value{value: -123}.value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 26, "2": 32, "3": 34, "4": 39 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "google.protobuf.Int64Value",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "value",
                          "value": {
                            "id": "3",
                            "constExpr": { "int64Value": "-123" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "value"
                }
              }
            }
          },
          {
            "name": "literal_zero",
            "expression": "google.protobuf.Int64Value{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": { "1": 26 }
              },
              "expr": {
                "id": "1",
                "structExpr": { "messageName": "google.protobuf.Int64Value" }
              }
            }
          },
          {
            "name": "var",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "field_assign_proto2",
            "expression": "TestAllTypes{single_int64_wrapper: 432}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int64_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "432" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_zero",
            "expression": "TestAllTypes{single_int64_wrapper: 0}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int64_wrapper",
                      "value": { "id": "3", "constExpr": { "int64Value": "0" } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3",
            "expression": "TestAllTypes{single_int64_wrapper: -975}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int64_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-975" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_zero",
            "expression": "TestAllTypes{single_int64_wrapper: 0}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int64_wrapper",
                      "value": { "id": "3", "constExpr": { "int64Value": "0" } }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "uint32",
        "tests": [
          {
            "name": "literal",
            "expression": "google.protobuf.UInt32Value{value: 123u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 27, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.UInt32Value",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "value",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "123" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_no_field_access",
            "expression": "google.protobuf.UInt32Value{value: 123u}.value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": { "1": 27, "2": 33, "3": 35, "4": 40 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "google.protobuf.UInt32Value",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "value",
                          "value": {
                            "id": "3",
                            "constExpr": { "uint64Value": "123" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "value"
                }
              }
            }
          },
          {
            "name": "literal_zero",
            "expression": "google.protobuf.UInt32Value{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": { "messageName": "google.protobuf.UInt32Value" }
              }
            }
          },
          {
            "name": "var",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "field_assign_proto2",
            "expression": "TestAllTypes{single_uint32_wrapper: 432u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "432" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_zero",
            "expression": "TestAllTypes{single_uint32_wrapper: 0u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "0" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_max",
            "expression": "TestAllTypes{single_uint32_wrapper: 4294967295u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "4294967295" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_range",
            "expression": "TestAllTypes{single_uint32_wrapper: 6111222333u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "6111222333" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3",
            "expression": "TestAllTypes{single_uint32_wrapper: 975u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "975" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_zero",
            "expression": "TestAllTypes{single_uint32_wrapper: 0u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "0" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_max",
            "expression": "TestAllTypes{single_uint32_wrapper: 4294967295u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "4294967295" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_range",
            "expression": "TestAllTypes{single_uint32_wrapper: 6111222333u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "6111222333" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto2",
            "expression": "TestAllTypes{single_uint32_wrapper: 258u}.single_uint32_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [64],
                "positions": { "1": 12, "2": 34, "3": 36, "4": 41 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_uint32_wrapper",
                          "value": {
                            "id": "3",
                            "constExpr": { "uint64Value": "258" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_uint32_wrapper"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_zero",
            "expression": "TestAllTypes{single_uint32_wrapper: 0u}.single_uint32_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [62],
                "positions": { "1": 12, "2": 34, "3": 36, "4": 39 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_uint32_wrapper",
                          "value": {
                            "id": "3",
                            "constExpr": { "uint64Value": "0" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_uint32_wrapper"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_unset",
            "expression": "TestAllTypes{}.single_uint32_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_uint32_wrapper"
                }
              }
            }
          }
        ]
      },
      {
        "name": "uint64",
        "tests": [
          {
            "name": "literal",
            "expression": "google.protobuf.UInt64Value{value: 123u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 27, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.UInt64Value",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "value",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "123" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_no_field_access",
            "expression": "google.protobuf.UInt64Value{value: 123u}.value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": { "1": 27, "2": 33, "3": 35, "4": 40 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "google.protobuf.UInt64Value",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "value",
                          "value": {
                            "id": "3",
                            "constExpr": { "uint64Value": "123" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "value"
                }
              }
            }
          },
          {
            "name": "literal_zero",
            "expression": "google.protobuf.UInt64Value{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": { "messageName": "google.protobuf.UInt64Value" }
              }
            }
          },
          {
            "name": "var",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "field_assign_proto2",
            "expression": "TestAllTypes{single_uint64_wrapper: 432u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint64_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "432" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_zero",
            "expression": "TestAllTypes{single_uint64_wrapper: 0u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint64_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "0" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3",
            "expression": "TestAllTypes{single_uint64_wrapper: 975u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint64_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "975" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_zero",
            "expression": "TestAllTypes{single_uint64_wrapper: 0u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint64_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "0" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto2",
            "expression": "TestAllTypes{single_uint64_wrapper: 5123123123u}.single_uint64_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [71],
                "positions": { "1": 12, "2": 34, "3": 36, "4": 48 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_uint64_wrapper",
                          "value": {
                            "id": "3",
                            "constExpr": { "uint64Value": "5123123123" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_uint64_wrapper"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_zero",
            "expression": "TestAllTypes{single_uint64_wrapper: 0u}.single_uint64_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [62],
                "positions": { "1": 12, "2": 34, "3": 36, "4": 39 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_uint64_wrapper",
                          "value": {
                            "id": "3",
                            "constExpr": { "uint64Value": "0" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_uint64_wrapper"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_unset",
            "expression": "TestAllTypes{}.single_uint64_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_uint64_wrapper"
                }
              }
            }
          }
        ]
      },
      {
        "name": "float",
        "tests": [
          {
            "name": "literal",
            "expression": "google.protobuf.FloatValue{value: -1.5e3}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 26, "2": 32, "3": 34 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.FloatValue",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "value",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": -1500 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_not_double",
            "expression": "google.protobuf.FloatValue{value: 1.333} == 1.333",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": { "1": 26, "2": 32, "3": 34, "4": 41, "5": 44 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "google.protobuf.FloatValue",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "doubleValue": 1.333 }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "doubleValue": 1.333 } }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_no_field_access",
            "expression": "google.protobuf.FloatValue{value: 3.1416}.value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [48],
                "positions": { "1": 26, "2": 32, "3": 34, "4": 41 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "google.protobuf.FloatValue",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "value",
                          "value": {
                            "id": "3",
                            "constExpr": { "doubleValue": 3.1416 }
                          }
                        }
                      ]
                    }
                  },
                  "field": "value"
                }
              }
            }
          },
          {
            "name": "literal_zero",
            "expression": "google.protobuf.FloatValue{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": { "1": 26 }
              },
              "expr": {
                "id": "1",
                "structExpr": { "messageName": "google.protobuf.FloatValue" }
              }
            }
          },
          {
            "name": "var",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "field_assign_proto2",
            "expression": "TestAllTypes{single_float_wrapper: 86.75}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_float_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": 86.75 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_zero",
            "expression": "TestAllTypes{single_float_wrapper: 0.0}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_float_wrapper",
                      "value": { "id": "3", "constExpr": { "doubleValue": 0 } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_subnorm",
            "expression": "TestAllTypes{single_float_wrapper: 1e-40}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_float_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": 1e-40 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_round_to_zero",
            "expression": "TestAllTypes{single_float_wrapper: 1e-50}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_float_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": 1e-50 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_range",
            "expression": "TestAllTypes{single_float_wrapper: 1.4e55}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [43],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_float_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": 1.4e55 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto2",
            "expression": "TestAllTypes{single_float_wrapper: -12.375}.single_float_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [65],
                "positions": { "1": 12, "2": 33, "3": 35, "4": 43 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_float_wrapper",
                          "value": {
                            "id": "3",
                            "constExpr": { "doubleValue": -12.375 }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_float_wrapper"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_zero",
            "expression": "TestAllTypes{single_float_wrapper: 0.0}.single_float_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [61],
                "positions": { "1": 12, "2": 33, "3": 35, "4": 39 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_float_wrapper",
                          "value": {
                            "id": "3",
                            "constExpr": { "doubleValue": 0 }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_float_wrapper"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_unset",
            "expression": "TestAllTypes{}.single_float_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_float_wrapper"
                }
              }
            }
          },
          {
            "name": "field_assign_proto3",
            "expression": "TestAllTypes{single_float_wrapper: -9.75}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_float_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": -9.75 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_zero",
            "expression": "TestAllTypes{single_float_wrapper: 0.0}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_float_wrapper",
                      "value": { "id": "3", "constExpr": { "doubleValue": 0 } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_subnorm",
            "expression": "TestAllTypes{single_float_wrapper: 1e-40}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_float_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": 1e-40 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_round_to_zero",
            "expression": "TestAllTypes{single_float_wrapper: -9.9e-100}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_float_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": -9.9e-100 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_range",
            "expression": "TestAllTypes{single_float_wrapper: -9.9e100}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_float_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": -9.9e100 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto3",
            "expression": "TestAllTypes{single_float_wrapper: 64.25}.single_float_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [63],
                "positions": { "1": 12, "2": 33, "3": 35, "4": 41 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_float_wrapper",
                          "value": {
                            "id": "3",
                            "constExpr": { "doubleValue": 64.25 }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_float_wrapper"
                }
              }
            }
          },
          {
            "name": "field_read_proto3_zero",
            "expression": "TestAllTypes{single_float_wrapper: 0.0}.single_float_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [61],
                "positions": { "1": 12, "2": 33, "3": 35, "4": 39 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_float_wrapper",
                          "value": {
                            "id": "3",
                            "constExpr": { "doubleValue": 0 }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_float_wrapper"
                }
              }
            }
          },
          {
            "name": "field_read_proto3_unset",
            "expression": "TestAllTypes{}.single_float_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_float_wrapper"
                }
              }
            }
          }
        ]
      },
      {
        "name": "double",
        "tests": [
          {
            "name": "literal",
            "expression": "google.protobuf.DoubleValue{value: -1.5e3}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [43],
                "positions": { "1": 27, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.DoubleValue",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "value",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": -1500 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_no_field_access",
            "expression": "google.protobuf.DoubleValue{value: 3.1416}.value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "1": 27, "2": 33, "3": 35, "4": 42 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "google.protobuf.DoubleValue",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "value",
                          "value": {
                            "id": "3",
                            "constExpr": { "doubleValue": 3.1416 }
                          }
                        }
                      ]
                    }
                  },
                  "field": "value"
                }
              }
            }
          },
          {
            "name": "literal_zero",
            "expression": "google.protobuf.DoubleValue{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": { "messageName": "google.protobuf.DoubleValue" }
              }
            }
          },
          {
            "name": "var",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "field_assign_proto2",
            "expression": "TestAllTypes{single_double_wrapper: 86.75}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [43],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_double_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": 86.75 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_zero",
            "expression": "TestAllTypes{single_double_wrapper: 0.0}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_double_wrapper",
                      "value": { "id": "3", "constExpr": { "doubleValue": 0 } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_range",
            "expression": "TestAllTypes{single_double_wrapper: 1.4e55}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_double_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": 1.4e55 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto2",
            "expression": "TestAllTypes{single_double_wrapper: -12.375}.single_double_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [67],
                "positions": { "1": 12, "2": 34, "3": 36, "4": 44 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_double_wrapper",
                          "value": {
                            "id": "3",
                            "constExpr": { "doubleValue": -12.375 }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_double_wrapper"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_zero",
            "expression": "TestAllTypes{single_int32_wrapper: 0}.single_int32_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [59],
                "positions": { "1": 12, "2": 33, "3": 35, "4": 37 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_int32_wrapper",
                          "value": {
                            "id": "3",
                            "constExpr": { "int64Value": "0" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_int32_wrapper"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_unset",
            "expression": "TestAllTypes{}.single_double_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_double_wrapper"
                }
              }
            }
          },
          {
            "name": "field_assign_proto3",
            "expression": "TestAllTypes{single_double_wrapper: -9.75}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [43],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_double_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": -9.75 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_zero",
            "expression": "TestAllTypes{single_double_wrapper: 0.0}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_double_wrapper",
                      "value": { "id": "3", "constExpr": { "doubleValue": 0 } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_range",
            "expression": "TestAllTypes{single_double_wrapper: -9.9e100}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_double_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": -9.9e100 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto3",
            "expression": "TestAllTypes{single_double_wrapper: 64.25}.single_double_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [65],
                "positions": { "1": 12, "2": 34, "3": 36, "4": 42 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_double_wrapper",
                          "value": {
                            "id": "3",
                            "constExpr": { "doubleValue": 64.25 }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_double_wrapper"
                }
              }
            }
          },
          {
            "name": "field_read_proto3_zero",
            "expression": "TestAllTypes{single_double_wrapper: 0.0}.single_double_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [63],
                "positions": { "1": 12, "2": 34, "3": 36, "4": 40 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_double_wrapper",
                          "value": {
                            "id": "3",
                            "constExpr": { "doubleValue": 0 }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_double_wrapper"
                }
              }
            }
          },
          {
            "name": "field_read_proto3_unset",
            "expression": "TestAllTypes{}.single_double_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_double_wrapper"
                }
              }
            }
          }
        ]
      },
      {
        "name": "bool",
        "tests": [
          {
            "name": "literal",
            "expression": "google.protobuf.BoolValue{value: true}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": { "1": 25, "2": 31, "3": 33 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.BoolValue",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "value",
                      "value": { "id": "3", "constExpr": { "boolValue": true } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_no_field_access",
            "expression": "google.protobuf.BoolValue{value: true}.value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 25, "2": 31, "3": 33, "4": 38 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "google.protobuf.BoolValue",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "value",
                          "value": {
                            "id": "3",
                            "constExpr": { "boolValue": true }
                          }
                        }
                      ]
                    }
                  },
                  "field": "value"
                }
              }
            }
          },
          {
            "name": "literal_empty",
            "expression": "google.protobuf.BoolValue{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 25 }
              },
              "expr": {
                "id": "1",
                "structExpr": { "messageName": "google.protobuf.BoolValue" }
              }
            }
          },
          {
            "name": "var",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "field_assign_proto2",
            "expression": "TestAllTypes{single_bool_wrapper: true}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 32, "3": 34 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_bool_wrapper",
                      "value": { "id": "3", "constExpr": { "boolValue": true } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_false",
            "expression": "TestAllTypes{single_bool_wrapper: false}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 12, "2": 32, "3": 34 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_bool_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "boolValue": false }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3",
            "expression": "TestAllTypes{single_bool_wrapper: true}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 32, "3": 34 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_bool_wrapper",
                      "value": { "id": "3", "constExpr": { "boolValue": true } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_false",
            "expression": "TestAllTypes{single_bool_wrapper: false}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 12, "2": 32, "3": 34 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_bool_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "boolValue": false }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "string",
        "tests": [
          {
            "name": "literal",
            "expression": "google.protobuf.StringValue{value: 'foo'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 27, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.StringValue",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "value",
                      "value": {
                        "id": "3",
                        "constExpr": { "stringValue": "foo" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_no_field_access",
            "expression": "google.protobuf.StringValue{value: 'foo'}.value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [48],
                "positions": { "1": 27, "2": 33, "3": 35, "4": 41 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "google.protobuf.StringValue",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "value",
                          "value": {
                            "id": "3",
                            "constExpr": { "stringValue": "foo" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "value"
                }
              }
            }
          },
          {
            "name": "literal_empty",
            "expression": "google.protobuf.StringValue{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": { "messageName": "google.protobuf.StringValue" }
              }
            }
          },
          {
            "name": "literal_unicode",
            "expression": "google.protobuf.StringValue{value: 'flambÃ©'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 27, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.StringValue",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "value",
                      "value": {
                        "id": "3",
                        "constExpr": { "stringValue": "flambÃ©" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "var",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "field_assign_proto2",
            "expression": "TestAllTypes{single_string_wrapper: 'baz'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [43],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_string_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "stringValue": "baz" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_empty",
            "expression": "TestAllTypes{single_string_wrapper: ''}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_string_wrapper",
                      "value": { "id": "3", "constExpr": { "stringValue": "" } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3",
            "expression": "TestAllTypes{single_string_wrapper: 'bletch'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_string_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "stringValue": "bletch" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_empty",
            "expression": "TestAllTypes{single_string_wrapper: ''}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_string_wrapper",
                      "value": { "id": "3", "constExpr": { "stringValue": "" } }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "bytes",
        "tests": [
          {
            "name": "literal",
            "expression": "google.protobuf.BytesValue{value: b'foo\\123'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 26, "2": 32, "3": 34 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.BytesValue",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "value",
                      "value": {
                        "id": "3",
                        "constExpr": { "bytesValue": "Zm9vUw==" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_no_field_access",
            "expression": "google.protobuf.BytesValue{value: b'foo'}.value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [48],
                "positions": { "1": 26, "2": 32, "3": 34, "4": 41 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "google.protobuf.BytesValue",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "value",
                          "value": {
                            "id": "3",
                            "constExpr": { "bytesValue": "Zm9v" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "value"
                }
              }
            }
          },
          {
            "name": "literal_empty",
            "expression": "google.protobuf.BytesValue{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": { "1": 26 }
              },
              "expr": {
                "id": "1",
                "structExpr": { "messageName": "google.protobuf.BytesValue" }
              }
            }
          },
          {
            "name": "literal_unicode",
            "expression": "google.protobuf.BytesValue{value: b'flambÃ©'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 26, "2": 32, "3": 34 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.BytesValue",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "value",
                      "value": {
                        "id": "3",
                        "constExpr": { "bytesValue": "ZmxhbWLDqQ==" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "var",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "field_assign_proto2",
            "expression": "TestAllTypes{single_bytes_wrapper: b'baz'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [43],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_bytes_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "bytesValue": "YmF6" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_empty",
            "expression": "TestAllTypes{single_bytes_wrapper: b''}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_bytes_wrapper",
                      "value": { "id": "3", "constExpr": { "bytesValue": "" } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3",
            "expression": "TestAllTypes{single_bytes_wrapper: b'bletch'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_bytes_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "bytesValue": "YmxldGNo" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_empty",
            "expression": "TestAllTypes{single_bytes_wrapper: b''}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_bytes_wrapper",
                      "value": { "id": "3", "constExpr": { "bytesValue": "" } }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "list",
        "tests": [
          {
            "name": "literal",
            "expression": "google.protobuf.ListValue{values: [3.0, 'foo', null]}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [54],
                "positions": {
                  "1": 25,
                  "2": 32,
                  "3": 34,
                  "4": 35,
                  "5": 40,
                  "6": 47
                }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.ListValue",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "values",
                      "value": {
                        "id": "3",
                        "listExpr": {
                          "elements": [
                            { "id": "4", "constExpr": { "doubleValue": 3 } },
                            {
                              "id": "5",
                              "constExpr": { "stringValue": "foo" }
                            },
                            { "id": "6", "constExpr": { "nullValue": null } }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_no_field_access",
            "expression": "google.protobuf.ListValue{values: [3.0, 'foo', null]}.values",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [61],
                "positions": {
                  "1": 25,
                  "2": 32,
                  "3": 34,
                  "4": 35,
                  "5": 40,
                  "6": 47,
                  "7": 53
                }
              },
              "expr": {
                "id": "7",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "google.protobuf.ListValue",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "values",
                          "value": {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "constExpr": { "doubleValue": 3 }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "stringValue": "foo" }
                                },
                                {
                                  "id": "6",
                                  "constExpr": { "nullValue": null }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "values"
                }
              }
            }
          },
          {
            "name": "literal_empty",
            "expression": "google.protobuf.ListValue{values: []}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "1": 25, "2": 32, "3": 34 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.ListValue",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "values",
                      "value": { "id": "3", "listExpr": {} }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "var",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "field_assign_proto2",
            "expression": "TestAllTypes{list_value: [1.0, 'one']}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": { "1": 12, "2": 23, "3": 25, "4": 26, "5": 31 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "list_value",
                      "value": {
                        "id": "3",
                        "listExpr": {
                          "elements": [
                            { "id": "4", "constExpr": { "doubleValue": 1 } },
                            { "id": "5", "constExpr": { "stringValue": "one" } }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_empty",
            "expression": "TestAllTypes{list_value: []}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": { "1": 12, "2": 23, "3": 25 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "list_value",
                      "value": { "id": "3", "listExpr": {} }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto2",
            "expression": "TestAllTypes{list_value: [1.0, 'one']}.list_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 25,
                  "4": 26,
                  "5": 31,
                  "6": 38
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "list_value",
                          "value": {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "constExpr": { "doubleValue": 1 }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "stringValue": "one" }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "list_value"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_empty",
            "expression": "TestAllTypes{list_value: []}.list_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 23, "3": 25, "4": 28 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "list_value",
                          "value": { "id": "3", "listExpr": {} }
                        }
                      ]
                    }
                  },
                  "field": "list_value"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_unset",
            "expression": "TestAllTypes{}.list_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "list_value"
                }
              }
            }
          },
          {
            "name": "field_assign_proto3",
            "expression": "TestAllTypes{list_value: [1.0, 'one']}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": { "1": 12, "2": 23, "3": 25, "4": 26, "5": 31 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "list_value",
                      "value": {
                        "id": "3",
                        "listExpr": {
                          "elements": [
                            { "id": "4", "constExpr": { "doubleValue": 1 } },
                            { "id": "5", "constExpr": { "stringValue": "one" } }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_empty",
            "expression": "TestAllTypes{list_value: []}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": { "1": 12, "2": 23, "3": 25 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "list_value",
                      "value": { "id": "3", "listExpr": {} }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto3",
            "expression": "TestAllTypes{list_value: [1.0, 'one']}.list_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 25,
                  "4": 26,
                  "5": 31,
                  "6": 38
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "list_value",
                          "value": {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "constExpr": { "doubleValue": 1 }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "stringValue": "one" }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "list_value"
                }
              }
            }
          },
          {
            "name": "field_read_proto3_empty",
            "expression": "TestAllTypes{list_value: []}.list_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 23, "3": 25, "4": 28 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "list_value",
                          "value": { "id": "3", "listExpr": {} }
                        }
                      ]
                    }
                  },
                  "field": "list_value"
                }
              }
            }
          },
          {
            "name": "field_read_proto3_unset",
            "expression": "TestAllTypes{}.list_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "list_value"
                }
              }
            }
          }
        ]
      },
      {
        "name": "struct",
        "tests": [
          {
            "name": "literal",
            "expression": "google.protobuf.Struct{fields: {'uno': 1.0, 'dos': 2.0}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [57],
                "positions": {
                  "1": 22,
                  "2": 29,
                  "3": 31,
                  "4": 37,
                  "5": 32,
                  "6": 39,
                  "7": 49,
                  "8": 44,
                  "9": 51
                }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.Struct",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "fields",
                      "value": {
                        "id": "3",
                        "structExpr": {
                          "entries": [
                            {
                              "id": "4",
                              "mapKey": {
                                "id": "5",
                                "constExpr": { "stringValue": "uno" }
                              },
                              "value": {
                                "id": "6",
                                "constExpr": { "doubleValue": 1 }
                              }
                            },
                            {
                              "id": "7",
                              "mapKey": {
                                "id": "8",
                                "constExpr": { "stringValue": "dos" }
                              },
                              "value": {
                                "id": "9",
                                "constExpr": { "doubleValue": 2 }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_no_field_access",
            "expression": "google.protobuf.Struct{fields: {'uno': 1.0, 'dos': 2.0}}.fields",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [64],
                "positions": {
                  "1": 22,
                  "2": 29,
                  "3": 31,
                  "4": 37,
                  "5": 32,
                  "6": 39,
                  "7": 49,
                  "8": 44,
                  "9": 51,
                  "10": 56
                }
              },
              "expr": {
                "id": "10",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "google.protobuf.Struct",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "fields",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "4",
                                  "mapKey": {
                                    "id": "5",
                                    "constExpr": { "stringValue": "uno" }
                                  },
                                  "value": {
                                    "id": "6",
                                    "constExpr": { "doubleValue": 1 }
                                  }
                                },
                                {
                                  "id": "7",
                                  "mapKey": {
                                    "id": "8",
                                    "constExpr": { "stringValue": "dos" }
                                  },
                                  "value": {
                                    "id": "9",
                                    "constExpr": { "doubleValue": 2 }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "fields"
                }
              }
            }
          },
          {
            "name": "literal_empty",
            "expression": "google.protobuf.Struct{fields: {}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": { "1": 22, "2": 29, "3": 31 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.Struct",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "fields",
                      "value": { "id": "3", "structExpr": {} }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "var",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "field_assign_proto2",
            "expression": "TestAllTypes{single_struct: {'un': 1.0, 'deux': 2.0}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [54],
                "positions": {
                  "1": 12,
                  "2": 26,
                  "3": 28,
                  "4": 33,
                  "5": 29,
                  "6": 35,
                  "7": 46,
                  "8": 40,
                  "9": 48
                }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_struct",
                      "value": {
                        "id": "3",
                        "structExpr": {
                          "entries": [
                            {
                              "id": "4",
                              "mapKey": {
                                "id": "5",
                                "constExpr": { "stringValue": "un" }
                              },
                              "value": {
                                "id": "6",
                                "constExpr": { "doubleValue": 1 }
                              }
                            },
                            {
                              "id": "7",
                              "mapKey": {
                                "id": "8",
                                "constExpr": { "stringValue": "deux" }
                              },
                              "value": {
                                "id": "9",
                                "constExpr": { "doubleValue": 2 }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_empty",
            "expression": "TestAllTypes{single_struct: {}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 12, "2": 26, "3": 28 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_struct",
                      "value": { "id": "3", "structExpr": {} }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_bad",
            "expression": "TestAllTypes{single_struct: {1: 'uno'}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": {
                  "1": 12,
                  "2": 26,
                  "3": 28,
                  "4": 30,
                  "5": 29,
                  "6": 32
                }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_struct",
                      "value": {
                        "id": "3",
                        "structExpr": {
                          "entries": [
                            {
                              "id": "4",
                              "mapKey": {
                                "id": "5",
                                "constExpr": { "int64Value": "1" }
                              },
                              "value": {
                                "id": "6",
                                "constExpr": { "stringValue": "uno" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto2",
            "expression": "TestAllTypes{single_struct: {'one': 1.0}}.single_struct",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [56],
                "positions": {
                  "1": 12,
                  "2": 26,
                  "3": 28,
                  "4": 34,
                  "5": 29,
                  "6": 36,
                  "7": 41
                }
              },
              "expr": {
                "id": "7",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_struct",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "4",
                                  "mapKey": {
                                    "id": "5",
                                    "constExpr": { "stringValue": "one" }
                                  },
                                  "value": {
                                    "id": "6",
                                    "constExpr": { "doubleValue": 1 }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_struct"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_empty",
            "expression": "TestAllTypes{single_struct: {}}.single_struct",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 12, "2": 26, "3": 28, "4": 31 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_struct",
                          "value": { "id": "3", "structExpr": {} }
                        }
                      ]
                    }
                  },
                  "field": "single_struct"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_unset",
            "expression": "TestAllTypes{}.single_struct",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_struct"
                }
              }
            }
          },
          {
            "name": "field_assign_proto3",
            "expression": "TestAllTypes{single_struct: {'un': 1.0, 'deux': 2.0}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [54],
                "positions": {
                  "1": 12,
                  "2": 26,
                  "3": 28,
                  "4": 33,
                  "5": 29,
                  "6": 35,
                  "7": 46,
                  "8": 40,
                  "9": 48
                }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_struct",
                      "value": {
                        "id": "3",
                        "structExpr": {
                          "entries": [
                            {
                              "id": "4",
                              "mapKey": {
                                "id": "5",
                                "constExpr": { "stringValue": "un" }
                              },
                              "value": {
                                "id": "6",
                                "constExpr": { "doubleValue": 1 }
                              }
                            },
                            {
                              "id": "7",
                              "mapKey": {
                                "id": "8",
                                "constExpr": { "stringValue": "deux" }
                              },
                              "value": {
                                "id": "9",
                                "constExpr": { "doubleValue": 2 }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_empty",
            "expression": "TestAllTypes{single_struct: {}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 12, "2": 26, "3": 28 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_struct",
                      "value": { "id": "3", "structExpr": {} }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_bad",
            "expression": "TestAllTypes{single_struct: {1: 'uno'}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": {
                  "1": 12,
                  "2": 26,
                  "3": 28,
                  "4": 30,
                  "5": 29,
                  "6": 32
                }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_struct",
                      "value": {
                        "id": "3",
                        "structExpr": {
                          "entries": [
                            {
                              "id": "4",
                              "mapKey": {
                                "id": "5",
                                "constExpr": { "int64Value": "1" }
                              },
                              "value": {
                                "id": "6",
                                "constExpr": { "stringValue": "uno" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto3",
            "expression": "TestAllTypes{single_struct: {'one': 1.0}}.single_struct",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [56],
                "positions": {
                  "1": 12,
                  "2": 26,
                  "3": 28,
                  "4": 34,
                  "5": 29,
                  "6": 36,
                  "7": 41
                }
              },
              "expr": {
                "id": "7",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_struct",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "4",
                                  "mapKey": {
                                    "id": "5",
                                    "constExpr": { "stringValue": "one" }
                                  },
                                  "value": {
                                    "id": "6",
                                    "constExpr": { "doubleValue": 1 }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_struct"
                }
              }
            }
          },
          {
            "name": "field_read_proto3_empty",
            "expression": "TestAllTypes{single_struct: {}}.single_struct",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 12, "2": 26, "3": 28, "4": 31 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_struct",
                          "value": { "id": "3", "structExpr": {} }
                        }
                      ]
                    }
                  },
                  "field": "single_struct"
                }
              }
            }
          },
          {
            "name": "field_read_proto3_unset",
            "expression": "TestAllTypes{}.single_struct",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_struct"
                }
              }
            }
          }
        ]
      },
      {
        "name": "value_null",
        "tests": [
          {
            "name": "literal",
            "expression": "Value{null_value: NullValue.NULL_VALUE}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 5, "2": 16, "3": 18, "4": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "Value",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "null_value",
                      "value": {
                        "id": "4",
                        "selectExpr": {
                          "operand": {
                            "id": "3",
                            "identExpr": { "name": "NullValue" }
                          },
                          "field": "NULL_VALUE"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_no_field_access",
            "expression": "Value{null_value: NullValue.NULL_VALUE}.null_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [51],
                "positions": { "1": 5, "2": 16, "3": 18, "4": 27, "5": 39 }
              },
              "expr": {
                "id": "5",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "Value",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "null_value",
                          "value": {
                            "id": "4",
                            "selectExpr": {
                              "operand": {
                                "id": "3",
                                "identExpr": { "name": "NullValue" }
                              },
                              "field": "NULL_VALUE"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "null_value"
                }
              }
            }
          },
          {
            "name": "literal_unset",
            "expression": "google.protobuf.Value{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": { "1": 21 }
              },
              "expr": {
                "id": "1",
                "structExpr": { "messageName": "google.protobuf.Value" }
              }
            }
          },
          {
            "name": "var",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "field_assign_proto2",
            "expression": "TestAllTypes{single_value: null}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": { "id": "3", "constExpr": { "nullValue": null } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto2",
            "expression": "TestAllTypes{single_value: null}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 32 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "nullValue": null }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_unset",
            "expression": "TestAllTypes{}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "field_assign_proto3",
            "expression": "TestAllTypes{single_value: null}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": { "id": "3", "constExpr": { "nullValue": null } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto3",
            "expression": "TestAllTypes{single_value: null}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 32 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "nullValue": null }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "field_read_proto3_unset",
            "expression": "TestAllTypes{}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_value"
                }
              }
            }
          }
        ]
      },
      {
        "name": "value_number",
        "tests": [
          {
            "name": "literal",
            "expression": "google.protobuf.Value{number_value: 12.5}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 21, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.Value",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "number_value",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": 12.5 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_no_field_access",
            "expression": "google.protobuf.Value{number_value: 12.5}.number_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [55],
                "positions": { "1": 21, "2": 34, "3": 36, "4": 41 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "google.protobuf.Value",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "number_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "doubleValue": 12.5 }
                          }
                        }
                      ]
                    }
                  },
                  "field": "number_value"
                }
              }
            }
          },
          {
            "name": "literal_zero",
            "expression": "google.protobuf.Value{number_value: 0.0}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 21, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.Value",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "number_value",
                      "value": { "id": "3", "constExpr": { "doubleValue": 0 } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "var",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "field_assign_proto2",
            "expression": "TestAllTypes{single_value: 7e23}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": 7e23 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_zero",
            "expression": "TestAllTypes{single_value: 0.0}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": { "id": "3", "constExpr": { "doubleValue": 0 } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto2",
            "expression": "TestAllTypes{single_value: 7e23}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 32 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "doubleValue": 7e23 }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_zero",
            "expression": "TestAllTypes{single_value: 0.0}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 31 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "doubleValue": 0 }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "field_assign_proto3",
            "expression": "TestAllTypes{single_value: 7e23}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": 7e23 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_zero",
            "expression": "TestAllTypes{single_value: 0.0}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": { "id": "3", "constExpr": { "doubleValue": 0 } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto3",
            "expression": "TestAllTypes{single_value: 7e23}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 32 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "doubleValue": 7e23 }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "field_read_proto3_zero",
            "expression": "TestAllTypes{single_value: 0.0}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 31 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "doubleValue": 0 }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          }
        ]
      },
      {
        "name": "value_string",
        "tests": [
          {
            "name": "literal",
            "expression": "google.protobuf.Value{string_value: 'foo'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [43],
                "positions": { "1": 21, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.Value",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "string_value",
                      "value": {
                        "id": "3",
                        "constExpr": { "stringValue": "foo" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_no_field_access",
            "expression": "google.protobuf.Value{string_value: 'foo'}.string_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [56],
                "positions": { "1": 21, "2": 34, "3": 36, "4": 42 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "google.protobuf.Value",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "string_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "stringValue": "foo" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "string_value"
                }
              }
            }
          },
          {
            "name": "literal_empty",
            "expression": "google.protobuf.Value{string_value: ''}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 21, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.Value",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "string_value",
                      "value": { "id": "3", "constExpr": { "stringValue": "" } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "var",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "field_assign_proto2",
            "expression": "TestAllTypes{single_value: 'baz'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": {
                        "id": "3",
                        "constExpr": { "stringValue": "baz" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_empty",
            "expression": "TestAllTypes{single_value: ''}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": { "id": "3", "constExpr": { "stringValue": "" } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto2",
            "expression": "TestAllTypes{single_value: 'bletch'}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 36 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "stringValue": "bletch" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_zero",
            "expression": "TestAllTypes{single_value: ''}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 30 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "stringValue": "" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "field_assign_proto3",
            "expression": "TestAllTypes{single_value: 'baz'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": {
                        "id": "3",
                        "constExpr": { "stringValue": "baz" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_empty",
            "expression": "TestAllTypes{single_value: ''}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": { "id": "3", "constExpr": { "stringValue": "" } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto3",
            "expression": "TestAllTypes{single_value: 'bletch'}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 36 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "stringValue": "bletch" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "field_read_proto3_zero",
            "expression": "TestAllTypes{single_value: ''}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 30 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "stringValue": "" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          }
        ]
      },
      {
        "name": "value_bool",
        "tests": [
          {
            "name": "literal",
            "expression": "google.protobuf.Value{bool_value: true}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 21, "2": 32, "3": 34 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.Value",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "bool_value",
                      "value": { "id": "3", "constExpr": { "boolValue": true } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_no_field_access",
            "expression": "google.protobuf.Value{bool_value: true}.bool_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [51],
                "positions": { "1": 21, "2": 32, "3": 34, "4": 39 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "google.protobuf.Value",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "bool_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "boolValue": true }
                          }
                        }
                      ]
                    }
                  },
                  "field": "bool_value"
                }
              }
            }
          },
          {
            "name": "literal_false",
            "expression": "google.protobuf.Value{bool_value: false}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 21, "2": 32, "3": 34 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.Value",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "bool_value",
                      "value": {
                        "id": "3",
                        "constExpr": { "boolValue": false }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "var",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "field_assign_proto2",
            "expression": "TestAllTypes{single_value: true}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": { "id": "3", "constExpr": { "boolValue": true } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_false",
            "expression": "TestAllTypes{single_value: false}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": {
                        "id": "3",
                        "constExpr": { "boolValue": false }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto2",
            "expression": "TestAllTypes{single_value: true}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 32 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "boolValue": true }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_false",
            "expression": "TestAllTypes{single_value: false}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 33 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "boolValue": false }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "field_assign_proto3",
            "expression": "TestAllTypes{single_value: true}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": { "id": "3", "constExpr": { "boolValue": true } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_false",
            "expression": "TestAllTypes{single_value: false}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": {
                        "id": "3",
                        "constExpr": { "boolValue": false }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto3",
            "expression": "TestAllTypes{single_value: true}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 32 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "boolValue": true }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "field_read_proto3_false",
            "expression": "TestAllTypes{single_value: false}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 33 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "boolValue": false }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          }
        ]
      },
      {
        "name": "value_struct",
        "tests": [
          {
            "name": "literal",
            "expression": "google.protobuf.Value{struct_value: {'a': 1.0, 'b': 'two'}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [60],
                "positions": {
                  "1": 21,
                  "2": 34,
                  "3": 36,
                  "4": 40,
                  "5": 37,
                  "6": 42,
                  "7": 50,
                  "8": 47,
                  "9": 52
                }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.Value",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "struct_value",
                      "value": {
                        "id": "3",
                        "structExpr": {
                          "entries": [
                            {
                              "id": "4",
                              "mapKey": {
                                "id": "5",
                                "constExpr": { "stringValue": "a" }
                              },
                              "value": {
                                "id": "6",
                                "constExpr": { "doubleValue": 1 }
                              }
                            },
                            {
                              "id": "7",
                              "mapKey": {
                                "id": "8",
                                "constExpr": { "stringValue": "b" }
                              },
                              "value": {
                                "id": "9",
                                "constExpr": { "stringValue": "two" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_no_field_access",
            "expression": "google.protobuf.Value{struct_value: {'a': 1.0, 'b': 'two'}}.struct_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [73],
                "positions": {
                  "1": 21,
                  "2": 34,
                  "3": 36,
                  "4": 40,
                  "5": 37,
                  "6": 42,
                  "7": 50,
                  "8": 47,
                  "9": 52,
                  "10": 59
                }
              },
              "expr": {
                "id": "10",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "google.protobuf.Value",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "struct_value",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "4",
                                  "mapKey": {
                                    "id": "5",
                                    "constExpr": { "stringValue": "a" }
                                  },
                                  "value": {
                                    "id": "6",
                                    "constExpr": { "doubleValue": 1 }
                                  }
                                },
                                {
                                  "id": "7",
                                  "mapKey": {
                                    "id": "8",
                                    "constExpr": { "stringValue": "b" }
                                  },
                                  "value": {
                                    "id": "9",
                                    "constExpr": { "stringValue": "two" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "struct_value"
                }
              }
            }
          },
          {
            "name": "literal_empty",
            "expression": "google.protobuf.Value{struct_value: {}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 21, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.Value",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "struct_value",
                      "value": { "id": "3", "structExpr": {} }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "var",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "field_assign_proto2",
            "expression": "TestAllTypes{single_value: {'un': 1.0, 'deux': 2.0}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [53],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 27,
                  "4": 32,
                  "5": 28,
                  "6": 34,
                  "7": 45,
                  "8": 39,
                  "9": 47
                }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": {
                        "id": "3",
                        "structExpr": {
                          "entries": [
                            {
                              "id": "4",
                              "mapKey": {
                                "id": "5",
                                "constExpr": { "stringValue": "un" }
                              },
                              "value": {
                                "id": "6",
                                "constExpr": { "doubleValue": 1 }
                              }
                            },
                            {
                              "id": "7",
                              "mapKey": {
                                "id": "8",
                                "constExpr": { "stringValue": "deux" }
                              },
                              "value": {
                                "id": "9",
                                "constExpr": { "doubleValue": 2 }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_empty",
            "expression": "TestAllTypes{single_value: {}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": { "id": "3", "structExpr": {} }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto2",
            "expression": "TestAllTypes{single_value: {'i': true}}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [53],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 27,
                  "4": 31,
                  "5": 28,
                  "6": 33,
                  "7": 39
                }
              },
              "expr": {
                "id": "7",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "4",
                                  "mapKey": {
                                    "id": "5",
                                    "constExpr": { "stringValue": "i" }
                                  },
                                  "value": {
                                    "id": "6",
                                    "constExpr": { "boolValue": true }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_empty",
            "expression": "TestAllTypes{single_value: {}}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 30 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": { "id": "3", "structExpr": {} }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "field_assign_proto3",
            "expression": "TestAllTypes{single_value: {'un': 1.0, 'deux': 2.0}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [53],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 27,
                  "4": 32,
                  "5": 28,
                  "6": 34,
                  "7": 45,
                  "8": 39,
                  "9": 47
                }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": {
                        "id": "3",
                        "structExpr": {
                          "entries": [
                            {
                              "id": "4",
                              "mapKey": {
                                "id": "5",
                                "constExpr": { "stringValue": "un" }
                              },
                              "value": {
                                "id": "6",
                                "constExpr": { "doubleValue": 1 }
                              }
                            },
                            {
                              "id": "7",
                              "mapKey": {
                                "id": "8",
                                "constExpr": { "stringValue": "deux" }
                              },
                              "value": {
                                "id": "9",
                                "constExpr": { "doubleValue": 2 }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_empty",
            "expression": "TestAllTypes{single_value: {}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": { "id": "3", "structExpr": {} }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto3",
            "expression": "TestAllTypes{single_value: {'i': true}}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [53],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 27,
                  "4": 31,
                  "5": 28,
                  "6": 33,
                  "7": 39
                }
              },
              "expr": {
                "id": "7",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "4",
                                  "mapKey": {
                                    "id": "5",
                                    "constExpr": { "stringValue": "i" }
                                  },
                                  "value": {
                                    "id": "6",
                                    "constExpr": { "boolValue": true }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "field_read_proto3_empty",
            "expression": "TestAllTypes{single_value: {}}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 30 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": { "id": "3", "structExpr": {} }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          }
        ]
      },
      {
        "name": "value_list",
        "tests": [
          {
            "name": "literal",
            "expression": "google.protobuf.Value{list_value: ['a', 3.0]}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 21, "2": 32, "3": 34, "4": 35, "5": 40 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.Value",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "list_value",
                      "value": {
                        "id": "3",
                        "listExpr": {
                          "elements": [
                            { "id": "4", "constExpr": { "stringValue": "a" } },
                            { "id": "5", "constExpr": { "doubleValue": 3 } }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_no_field_access",
            "expression": "google.protobuf.Value{list_value: []}.list_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "1": 21, "2": 32, "3": 34, "4": 37 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "google.protobuf.Value",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "list_value",
                          "value": { "id": "3", "listExpr": {} }
                        }
                      ]
                    }
                  },
                  "field": "list_value"
                }
              }
            }
          },
          {
            "name": "literal_empty",
            "expression": "google.protobuf.Value{list_value: []}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "1": 21, "2": 32, "3": 34 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.Value",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "list_value",
                      "value": { "id": "3", "listExpr": {} }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "var",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "field_assign_proto2",
            "expression": "TestAllTypes{single_value: ['un', 1.0]}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 28, "5": 34 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": {
                        "id": "3",
                        "listExpr": {
                          "elements": [
                            { "id": "4", "constExpr": { "stringValue": "un" } },
                            { "id": "5", "constExpr": { "doubleValue": 1 } }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto2_empty",
            "expression": "TestAllTypes{single_value: []}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": { "id": "3", "listExpr": {} }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto2",
            "expression": "TestAllTypes{single_value: ['i', true]}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [53],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 27,
                  "4": 28,
                  "5": 33,
                  "6": 39
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "constExpr": { "stringValue": "i" }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "boolValue": true }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "field_read_proto2_empty",
            "expression": "TestAllTypes{single_value: []}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 30 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": { "id": "3", "listExpr": {} }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "field_assign_proto3",
            "expression": "TestAllTypes{single_value: ['un', 1.0]}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 28, "5": 34 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": {
                        "id": "3",
                        "listExpr": {
                          "elements": [
                            { "id": "4", "constExpr": { "stringValue": "un" } },
                            { "id": "5", "constExpr": { "doubleValue": 1 } }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_assign_proto3_empty",
            "expression": "TestAllTypes{single_value: []}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": { "id": "3", "listExpr": {} }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto3",
            "expression": "TestAllTypes{single_value: ['i', true]}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [53],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 27,
                  "4": 28,
                  "5": 33,
                  "6": 39
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "constExpr": { "stringValue": "i" }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "boolValue": true }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "field_read_proto3_empty",
            "expression": "TestAllTypes{single_value: []}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 30 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": { "id": "3", "listExpr": {} }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          }
        ]
      },
      {
        "name": "any",
        "tests": [
          {
            "name": "literal",
            "expression": "google.protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'\\x08\\x96\\x01'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [121],
                "positions": { "1": 19, "2": 28, "3": 30, "4": 102, "5": 104 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.protobuf.Any",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "type_url",
                      "value": {
                        "id": "3",
                        "constExpr": {
                          "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                        }
                      }
                    },
                    {
                      "id": "4",
                      "fieldKey": "value",
                      "value": {
                        "id": "5",
                        "constExpr": { "bytesValue": "CJYB" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "literal_no_field_access",
            "expression": "google.protobuf.Any{type_url: 'type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes', value: b'\\x08\\x96\\x01'}.type_url",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [130],
                "positions": {
                  "1": 19,
                  "2": 28,
                  "3": 30,
                  "4": 102,
                  "5": 104,
                  "6": 120
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "google.protobuf.Any",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "type_url",
                          "value": {
                            "id": "3",
                            "constExpr": {
                              "stringValue": "type.googleapis.com/google.api.expr.test.v1.proto2.TestAllTypes"
                            }
                          }
                        },
                        {
                          "id": "4",
                          "fieldKey": "value",
                          "value": {
                            "id": "5",
                            "constExpr": { "bytesValue": "CJYB" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "type_url"
                }
              }
            }
          },
          {
            "name": "literal_empty",
            "expression": "google.protobuf.Any{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": { "1": 19 }
              },
              "expr": {
                "id": "1",
                "structExpr": { "messageName": "google.protobuf.Any" }
              }
            }
          },
          {
            "name": "var",
            "expression": "x",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "x" } }
            }
          },
          {
            "name": "field_assign_proto2",
            "expression": "TestAllTypes{single_any: TestAllTypes{single_int32: 150}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [58],
                "positions": { "1": 12, "2": 23, "3": 37, "4": 50, "5": 52 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_any",
                      "value": {
                        "id": "3",
                        "structExpr": {
                          "messageName": "TestAllTypes",
                          "entries": [
                            {
                              "id": "4",
                              "fieldKey": "single_int32",
                              "value": {
                                "id": "5",
                                "constExpr": { "int64Value": "150" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto2",
            "expression": "TestAllTypes{single_any: TestAllTypes{single_int32: 150}}.single_any",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [69],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 37,
                  "4": 50,
                  "5": 52,
                  "6": 57
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_any",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "TestAllTypes",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "single_int32",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "int64Value": "150" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_any"
                }
              }
            }
          },
          {
            "name": "field_assign_proto3",
            "expression": "TestAllTypes{single_any: TestAllTypes{single_int32: 150}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [58],
                "positions": { "1": 12, "2": 23, "3": 37, "4": 50, "5": 52 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_any",
                      "value": {
                        "id": "3",
                        "structExpr": {
                          "messageName": "TestAllTypes",
                          "entries": [
                            {
                              "id": "4",
                              "fieldKey": "single_int32",
                              "value": {
                                "id": "5",
                                "constExpr": { "int64Value": "150" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "field_read_proto3",
            "expression": "TestAllTypes{single_any: TestAllTypes{single_int32: 150}}.single_any",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [69],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 37,
                  "4": 50,
                  "5": 52,
                  "6": 57
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_any",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "TestAllTypes",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "single_int32",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "int64Value": "150" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_any"
                }
              }
            }
          }
        ]
      },
      {
        "name": "complex",
        "tests": [
          {
            "name": "any_list_map",
            "expression": "TestAllTypes{single_any: [{'almost': 'done'}]}.single_any",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [58],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 25,
                  "4": 26,
                  "5": 35,
                  "6": 27,
                  "7": 37,
                  "8": 46
                }
              },
              "expr": {
                "id": "8",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_any",
                          "value": {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "structExpr": {
                                    "entries": [
                                      {
                                        "id": "5",
                                        "mapKey": {
                                          "id": "6",
                                          "constExpr": {
                                            "stringValue": "almost"
                                          }
                                        },
                                        "value": {
                                          "id": "7",
                                          "constExpr": { "stringValue": "done" }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_any"
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "encoders_ext",
    "sections": [
      {
        "name": "encode",
        "tests": [
          {
            "name": "hello",
            "expression": "base64.encode(b'hello')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": { "1": 0, "2": 13, "3": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "base64" } },
                  "function": "encode",
                  "args": [
                    { "id": "3", "constExpr": { "bytesValue": "aGVsbG8=" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "decode",
        "tests": [
          {
            "name": "hello",
            "expression": "base64.decode('aGVsbG8=')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 0, "2": 13, "3": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "base64" } },
                  "function": "decode",
                  "args": [
                    { "id": "3", "constExpr": { "stringValue": "aGVsbG8=" } }
                  ]
                }
              }
            }
          },
          {
            "name": "hello_without_padding",
            "expression": "base64.decode('aGVsbG8')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": { "1": 0, "2": 13, "3": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "base64" } },
                  "function": "decode",
                  "args": [
                    { "id": "3", "constExpr": { "stringValue": "aGVsbG8" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "round_trip",
        "tests": [
          {
            "name": "hello",
            "expression": "base64.decode(base64.encode(b'Hello World!'))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 27, "5": 28 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "base64" } },
                  "function": "decode",
                  "args": [
                    {
                      "id": "4",
                      "callExpr": {
                        "target": {
                          "id": "3",
                          "identExpr": { "name": "base64" }
                        },
                        "function": "encode",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": { "bytesValue": "SGVsbG8gV29ybGQh" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "enums",
    "sections": [
      {
        "name": "legacy_proto2",
        "tests": [
          {
            "name": "literal_global",
            "expression": "GlobalEnum.GAZ",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 10 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "identExpr": { "name": "GlobalEnum" }
                  },
                  "field": "GAZ"
                }
              }
            }
          },
          {
            "name": "literal_nested",
            "expression": "TestAllTypes.NestedEnum.BAR",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 0, "2": 12, "3": 23 }
              },
              "expr": {
                "id": "3",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "selectExpr": {
                      "operand": {
                        "id": "1",
                        "identExpr": { "name": "TestAllTypes" }
                      },
                      "field": "NestedEnum"
                    }
                  },
                  "field": "BAR"
                }
              }
            }
          },
          {
            "name": "literal_zero",
            "expression": "GlobalEnum.GOO",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 10 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "identExpr": { "name": "GlobalEnum" }
                  },
                  "field": "GOO"
                }
              }
            }
          },
          {
            "name": "comparision",
            "expression": "GlobalEnum.GAR == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 10, "3": 15, "4": 18 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "identExpr": { "name": "GlobalEnum" }
                        },
                        "field": "GAR"
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "arithmetic",
            "expression": "TestAllTypes.NestedEnum.BAR + 3",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 0, "2": 12, "3": 23, "4": 28, "5": 30 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    {
                      "id": "3",
                      "selectExpr": {
                        "operand": {
                          "id": "2",
                          "selectExpr": {
                            "operand": {
                              "id": "1",
                              "identExpr": { "name": "TestAllTypes" }
                            },
                            "field": "NestedEnum"
                          }
                        },
                        "field": "BAR"
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "3" } }
                  ]
                }
              }
            }
          },
          {
            "name": "type_global",
            "expression": "type(GlobalEnum.GOO)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 4, "2": 5, "3": 15 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [
                    {
                      "id": "3",
                      "selectExpr": {
                        "operand": {
                          "id": "2",
                          "identExpr": { "name": "GlobalEnum" }
                        },
                        "field": "GOO"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "type_nested",
            "expression": "type(TestAllTypes.NestedEnum.BAZ)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 4, "2": 5, "3": 17, "4": 28 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [
                    {
                      "id": "4",
                      "selectExpr": {
                        "operand": {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "identExpr": { "name": "TestAllTypes" }
                            },
                            "field": "NestedEnum"
                          }
                        },
                        "field": "BAZ"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "select_default",
            "expression": "TestAllTypes{}.standalone_enum",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "standalone_enum"
                }
              }
            }
          },
          {
            "name": "field_type",
            "expression": "type(TestAllTypes{}.standalone_enum)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 4, "2": 17, "3": 19 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [
                    {
                      "id": "3",
                      "selectExpr": {
                        "operand": {
                          "id": "2",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "standalone_enum"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "assign_standalone_name",
            "expression": "TestAllTypes{standalone_enum: TestAllTypes.NestedEnum.BAZ}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [59],
                "positions": { "1": 12, "2": 28, "3": 30, "4": 42, "5": 53 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "standalone_enum",
                      "value": {
                        "id": "5",
                        "selectExpr": {
                          "operand": {
                            "id": "4",
                            "selectExpr": {
                              "operand": {
                                "id": "3",
                                "identExpr": { "name": "TestAllTypes" }
                              },
                              "field": "NestedEnum"
                            }
                          },
                          "field": "BAZ"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "assign_standalone_int",
            "expression": "TestAllTypes{standalone_enum: 1}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 12, "2": 28, "3": 30 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "standalone_enum",
                      "value": { "id": "3", "constExpr": { "int64Value": "1" } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "assign_standalone_int_too_big",
            "expression": "TestAllTypes{standalone_enum: 5000000000}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 12, "2": 28, "3": 30 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "standalone_enum",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "5000000000" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "assign_standalone_int_too_neg",
            "expression": "TestAllTypes{standalone_enum: -7000000000}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [43],
                "positions": { "1": 12, "2": 28, "3": 30 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "standalone_enum",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-7000000000" }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "legacy_proto3",
        "tests": [
          {
            "name": "literal_global",
            "expression": "GlobalEnum.GAZ",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 10 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "identExpr": { "name": "GlobalEnum" }
                  },
                  "field": "GAZ"
                }
              }
            }
          },
          {
            "name": "literal_nested",
            "expression": "TestAllTypes.NestedEnum.BAR",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 0, "2": 12, "3": 23 }
              },
              "expr": {
                "id": "3",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "selectExpr": {
                      "operand": {
                        "id": "1",
                        "identExpr": { "name": "TestAllTypes" }
                      },
                      "field": "NestedEnum"
                    }
                  },
                  "field": "BAR"
                }
              }
            }
          },
          {
            "name": "literal_zero",
            "expression": "GlobalEnum.GOO",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 10 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "identExpr": { "name": "GlobalEnum" }
                  },
                  "field": "GOO"
                }
              }
            }
          },
          {
            "name": "comparision",
            "expression": "GlobalEnum.GAR == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 10, "3": 15, "4": 18 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "identExpr": { "name": "GlobalEnum" }
                        },
                        "field": "GAR"
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "arithmetic",
            "expression": "TestAllTypes.NestedEnum.BAR + 3",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 0, "2": 12, "3": 23, "4": 28, "5": 30 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    {
                      "id": "3",
                      "selectExpr": {
                        "operand": {
                          "id": "2",
                          "selectExpr": {
                            "operand": {
                              "id": "1",
                              "identExpr": { "name": "TestAllTypes" }
                            },
                            "field": "NestedEnum"
                          }
                        },
                        "field": "BAR"
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "3" } }
                  ]
                }
              }
            }
          },
          {
            "name": "type_global",
            "expression": "type(GlobalEnum.GOO)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 4, "2": 5, "3": 15 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [
                    {
                      "id": "3",
                      "selectExpr": {
                        "operand": {
                          "id": "2",
                          "identExpr": { "name": "GlobalEnum" }
                        },
                        "field": "GOO"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "type_nested",
            "expression": "type(TestAllTypes.NestedEnum.BAZ)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 4, "2": 5, "3": 17, "4": 28 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [
                    {
                      "id": "4",
                      "selectExpr": {
                        "operand": {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "identExpr": { "name": "TestAllTypes" }
                            },
                            "field": "NestedEnum"
                          }
                        },
                        "field": "BAZ"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "select_default",
            "expression": "TestAllTypes{}.standalone_enum",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "standalone_enum"
                }
              }
            }
          },
          {
            "name": "select",
            "expression": "x.standalone_enum",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": { "id": "1", "identExpr": { "name": "x" } },
                  "field": "standalone_enum"
                }
              }
            }
          },
          {
            "name": "select_big",
            "expression": "x.standalone_enum",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": { "id": "1", "identExpr": { "name": "x" } },
                  "field": "standalone_enum"
                }
              }
            }
          },
          {
            "name": "select_neg",
            "expression": "x.standalone_enum",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": { "id": "1", "identExpr": { "name": "x" } },
                  "field": "standalone_enum"
                }
              }
            }
          },
          {
            "name": "field_type",
            "expression": "type(TestAllTypes{}.standalone_enum)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 4, "2": 17, "3": 19 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [
                    {
                      "id": "3",
                      "selectExpr": {
                        "operand": {
                          "id": "2",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "standalone_enum"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "assign_standalone_name",
            "expression": "TestAllTypes{standalone_enum: TestAllTypes.NestedEnum.BAZ}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [59],
                "positions": { "1": 12, "2": 28, "3": 30, "4": 42, "5": 53 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "standalone_enum",
                      "value": {
                        "id": "5",
                        "selectExpr": {
                          "operand": {
                            "id": "4",
                            "selectExpr": {
                              "operand": {
                                "id": "3",
                                "identExpr": { "name": "TestAllTypes" }
                              },
                              "field": "NestedEnum"
                            }
                          },
                          "field": "BAZ"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "assign_standalone_int",
            "expression": "TestAllTypes{standalone_enum: 1}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 12, "2": 28, "3": 30 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "standalone_enum",
                      "value": { "id": "3", "constExpr": { "int64Value": "1" } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "assign_standalone_int_big",
            "expression": "TestAllTypes{standalone_enum: 99}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 12, "2": 28, "3": 30 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "standalone_enum",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "99" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "assign_standalone_int_neg",
            "expression": "TestAllTypes{standalone_enum: -1}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 12, "2": 28, "3": 30 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "standalone_enum",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-1" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "assign_standalone_int_too_big",
            "expression": "TestAllTypes{standalone_enum: 5000000000}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 12, "2": 28, "3": 30 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "standalone_enum",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "5000000000" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "assign_standalone_int_too_neg",
            "expression": "TestAllTypes{standalone_enum: -7000000000}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [43],
                "positions": { "1": 12, "2": 28, "3": 30 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "standalone_enum",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-7000000000" }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "strong_proto2",
        "tests": [
          {
            "name": "literal_global",
            "expression": "GlobalEnum.GAZ",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 10 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "identExpr": { "name": "GlobalEnum" }
                  },
                  "field": "GAZ"
                }
              }
            }
          },
          {
            "name": "literal_nested",
            "expression": "TestAllTypes.NestedEnum.BAR",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 0, "2": 12, "3": 23 }
              },
              "expr": {
                "id": "3",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "selectExpr": {
                      "operand": {
                        "id": "1",
                        "identExpr": { "name": "TestAllTypes" }
                      },
                      "field": "NestedEnum"
                    }
                  },
                  "field": "BAR"
                }
              }
            }
          },
          {
            "name": "literal_zero",
            "expression": "GlobalEnum.GOO",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 10 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "identExpr": { "name": "GlobalEnum" }
                  },
                  "field": "GOO"
                }
              }
            }
          },
          {
            "name": "comparision_true",
            "expression": "GlobalEnum.GAR == GlobalEnum.GAR",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 0, "2": 10, "3": 15, "4": 18, "5": 28 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "identExpr": { "name": "GlobalEnum" }
                        },
                        "field": "GAR"
                      }
                    },
                    {
                      "id": "5",
                      "selectExpr": {
                        "operand": {
                          "id": "4",
                          "identExpr": { "name": "GlobalEnum" }
                        },
                        "field": "GAR"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "comparision_false",
            "expression": "GlobalEnum.GAR == GlobalEnum.GAZ",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 0, "2": 10, "3": 15, "4": 18, "5": 28 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "identExpr": { "name": "GlobalEnum" }
                        },
                        "field": "GAR"
                      }
                    },
                    {
                      "id": "5",
                      "selectExpr": {
                        "operand": {
                          "id": "4",
                          "identExpr": { "name": "GlobalEnum" }
                        },
                        "field": "GAZ"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "type_global",
            "expression": "type(GlobalEnum.GOO)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 4, "2": 5, "3": 15 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [
                    {
                      "id": "3",
                      "selectExpr": {
                        "operand": {
                          "id": "2",
                          "identExpr": { "name": "GlobalEnum" }
                        },
                        "field": "GOO"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "type_nested",
            "expression": "type(TestAllTypes.NestedEnum.BAZ)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 4, "2": 5, "3": 17, "4": 28 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [
                    {
                      "id": "4",
                      "selectExpr": {
                        "operand": {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "identExpr": { "name": "TestAllTypes" }
                            },
                            "field": "NestedEnum"
                          }
                        },
                        "field": "BAZ"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "select_default",
            "expression": "TestAllTypes{}.standalone_enum",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "standalone_enum"
                }
              }
            }
          },
          {
            "name": "field_type",
            "expression": "type(TestAllTypes{}.standalone_enum)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 4, "2": 17, "3": 19 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [
                    {
                      "id": "3",
                      "selectExpr": {
                        "operand": {
                          "id": "2",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "standalone_enum"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "assign_standalone_name",
            "expression": "TestAllTypes{standalone_enum: TestAllTypes.NestedEnum.BAZ}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [59],
                "positions": { "1": 12, "2": 28, "3": 30, "4": 42, "5": 53 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "standalone_enum",
                      "value": {
                        "id": "5",
                        "selectExpr": {
                          "operand": {
                            "id": "4",
                            "selectExpr": {
                              "operand": {
                                "id": "3",
                                "identExpr": { "name": "TestAllTypes" }
                              },
                              "field": "NestedEnum"
                            }
                          },
                          "field": "BAZ"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "assign_standalone_int",
            "expression": "TestAllTypes{standalone_enum: TestAllTypes.NestedEnum(1)}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [58],
                "positions": { "1": 12, "2": 28, "3": 30, "4": 53, "5": 54 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "standalone_enum",
                      "value": {
                        "id": "4",
                        "callExpr": {
                          "target": {
                            "id": "3",
                            "identExpr": { "name": "TestAllTypes" }
                          },
                          "function": "NestedEnum",
                          "args": [
                            { "id": "5", "constExpr": { "int64Value": "1" } }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "convert_symbol_to_int",
            "expression": "int(GlobalEnum.GAZ)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 3, "2": 4, "3": 14 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [
                    {
                      "id": "3",
                      "selectExpr": {
                        "operand": {
                          "id": "2",
                          "identExpr": { "name": "GlobalEnum" }
                        },
                        "field": "GAZ"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "convert_unnamed_to_int",
            "expression": "int(x)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 3, "2": 4 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [{ "id": "2", "identExpr": { "name": "x" } }]
                }
              }
            }
          },
          {
            "name": "convert_int_inrange",
            "expression": "TestAllTypes.NestedEnum(2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 0, "2": 23, "3": 24 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "identExpr": { "name": "TestAllTypes" }
                  },
                  "function": "NestedEnum",
                  "args": [{ "id": "3", "constExpr": { "int64Value": "2" } }]
                }
              }
            }
          },
          {
            "name": "convert_int_big",
            "expression": "TestAllTypes.NestedEnum(20000)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 0, "2": 23, "3": 24 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "identExpr": { "name": "TestAllTypes" }
                  },
                  "function": "NestedEnum",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "20000" } }
                  ]
                }
              }
            }
          },
          {
            "name": "convert_int_neg",
            "expression": "GlobalEnum(-33)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 10, "2": 11 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "GlobalEnum",
                  "args": [{ "id": "2", "constExpr": { "int64Value": "-33" } }]
                }
              }
            }
          },
          {
            "name": "convert_int_too_big",
            "expression": "TestAllTypes.NestedEnum(5000000000)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 0, "2": 23, "3": 24 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "identExpr": { "name": "TestAllTypes" }
                  },
                  "function": "NestedEnum",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "5000000000" } }
                  ]
                }
              }
            }
          },
          {
            "name": "convert_int_too_neg",
            "expression": "TestAllTypes.NestedEnum(-7000000000)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 0, "2": 23, "3": 24 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "identExpr": { "name": "TestAllTypes" }
                  },
                  "function": "NestedEnum",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "-7000000000" } }
                  ]
                }
              }
            }
          },
          {
            "name": "convert_string",
            "expression": "TestAllTypes.NestedEnum('BAZ')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 0, "2": 23, "3": 24 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "identExpr": { "name": "TestAllTypes" }
                  },
                  "function": "NestedEnum",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "BAZ" } }]
                }
              }
            }
          },
          {
            "name": "convert_string_bad",
            "expression": "TestAllTypes.NestedEnum('BLETCH')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 0, "2": 23, "3": 24 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "identExpr": { "name": "TestAllTypes" }
                  },
                  "function": "NestedEnum",
                  "args": [
                    { "id": "3", "constExpr": { "stringValue": "BLETCH" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "strong_proto3",
        "tests": [
          {
            "name": "literal_global",
            "expression": "GlobalEnum.GAZ",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 10 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "identExpr": { "name": "GlobalEnum" }
                  },
                  "field": "GAZ"
                }
              }
            }
          },
          {
            "name": "literal_nested",
            "expression": "TestAllTypes.NestedEnum.BAR",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 0, "2": 12, "3": 23 }
              },
              "expr": {
                "id": "3",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "selectExpr": {
                      "operand": {
                        "id": "1",
                        "identExpr": { "name": "TestAllTypes" }
                      },
                      "field": "NestedEnum"
                    }
                  },
                  "field": "BAR"
                }
              }
            }
          },
          {
            "name": "literal_zero",
            "expression": "GlobalEnum.GOO",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 10 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "identExpr": { "name": "GlobalEnum" }
                  },
                  "field": "GOO"
                }
              }
            }
          },
          {
            "name": "comparision_true",
            "expression": "GlobalEnum.GAR == GlobalEnum.GAR",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 0, "2": 10, "3": 15, "4": 18, "5": 28 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "identExpr": { "name": "GlobalEnum" }
                        },
                        "field": "GAR"
                      }
                    },
                    {
                      "id": "5",
                      "selectExpr": {
                        "operand": {
                          "id": "4",
                          "identExpr": { "name": "GlobalEnum" }
                        },
                        "field": "GAR"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "comparision_false",
            "expression": "GlobalEnum.GAR == GlobalEnum.GAZ",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 0, "2": 10, "3": 15, "4": 18, "5": 28 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "selectExpr": {
                        "operand": {
                          "id": "1",
                          "identExpr": { "name": "GlobalEnum" }
                        },
                        "field": "GAR"
                      }
                    },
                    {
                      "id": "5",
                      "selectExpr": {
                        "operand": {
                          "id": "4",
                          "identExpr": { "name": "GlobalEnum" }
                        },
                        "field": "GAZ"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "type_global",
            "expression": "type(GlobalEnum.GOO)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 4, "2": 5, "3": 15 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [
                    {
                      "id": "3",
                      "selectExpr": {
                        "operand": {
                          "id": "2",
                          "identExpr": { "name": "GlobalEnum" }
                        },
                        "field": "GOO"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "type_nested",
            "expression": "type(TestAllTypes.NestedEnum.BAZ)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 4, "2": 5, "3": 17, "4": 28 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [
                    {
                      "id": "4",
                      "selectExpr": {
                        "operand": {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "identExpr": { "name": "TestAllTypes" }
                            },
                            "field": "NestedEnum"
                          }
                        },
                        "field": "BAZ"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "select_default",
            "expression": "TestAllTypes{}.standalone_enum",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "standalone_enum"
                }
              }
            }
          },
          {
            "name": "select",
            "expression": "x.standalone_enum",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": { "id": "1", "identExpr": { "name": "x" } },
                  "field": "standalone_enum"
                }
              }
            }
          },
          {
            "name": "select_big",
            "expression": "x.standalone_enum",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": { "id": "1", "identExpr": { "name": "x" } },
                  "field": "standalone_enum"
                }
              }
            }
          },
          {
            "name": "select_neg",
            "expression": "x.standalone_enum",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": { "id": "1", "identExpr": { "name": "x" } },
                  "field": "standalone_enum"
                }
              }
            }
          },
          {
            "name": "field_type",
            "expression": "type(TestAllTypes{}.standalone_enum)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 4, "2": 17, "3": 19 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [
                    {
                      "id": "3",
                      "selectExpr": {
                        "operand": {
                          "id": "2",
                          "structExpr": { "messageName": "TestAllTypes" }
                        },
                        "field": "standalone_enum"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "assign_standalone_name",
            "expression": "TestAllTypes{standalone_enum: TestAllTypes.NestedEnum.BAZ}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [59],
                "positions": { "1": 12, "2": 28, "3": 30, "4": 42, "5": 53 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "standalone_enum",
                      "value": {
                        "id": "5",
                        "selectExpr": {
                          "operand": {
                            "id": "4",
                            "selectExpr": {
                              "operand": {
                                "id": "3",
                                "identExpr": { "name": "TestAllTypes" }
                              },
                              "field": "NestedEnum"
                            }
                          },
                          "field": "BAZ"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "assign_standalone_int",
            "expression": "TestAllTypes{standalone_enum: TestAllTypes.NestedEnum(1)}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [58],
                "positions": { "1": 12, "2": 28, "3": 30, "4": 53, "5": 54 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "standalone_enum",
                      "value": {
                        "id": "4",
                        "callExpr": {
                          "target": {
                            "id": "3",
                            "identExpr": { "name": "TestAllTypes" }
                          },
                          "function": "NestedEnum",
                          "args": [
                            { "id": "5", "constExpr": { "int64Value": "1" } }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "assign_standalone_int_big",
            "expression": "TestAllTypes{standalone_enum: TestAllTypes.NestedEnum(99)}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [59],
                "positions": { "1": 12, "2": 28, "3": 30, "4": 53, "5": 54 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "standalone_enum",
                      "value": {
                        "id": "4",
                        "callExpr": {
                          "target": {
                            "id": "3",
                            "identExpr": { "name": "TestAllTypes" }
                          },
                          "function": "NestedEnum",
                          "args": [
                            { "id": "5", "constExpr": { "int64Value": "99" } }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "assign_standalone_int_neg",
            "expression": "TestAllTypes{standalone_enum: TestAllTypes.NestedEnum(-1)}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [59],
                "positions": { "1": 12, "2": 28, "3": 30, "4": 53, "5": 54 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "standalone_enum",
                      "value": {
                        "id": "4",
                        "callExpr": {
                          "target": {
                            "id": "3",
                            "identExpr": { "name": "TestAllTypes" }
                          },
                          "function": "NestedEnum",
                          "args": [
                            { "id": "5", "constExpr": { "int64Value": "-1" } }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "convert_symbol_to_int",
            "expression": "int(GlobalEnum.GAZ)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 3, "2": 4, "3": 14 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [
                    {
                      "id": "3",
                      "selectExpr": {
                        "operand": {
                          "id": "2",
                          "identExpr": { "name": "GlobalEnum" }
                        },
                        "field": "GAZ"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "convert_unnamed_to_int",
            "expression": "int(x)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 3, "2": 4 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [{ "id": "2", "identExpr": { "name": "x" } }]
                }
              }
            }
          },
          {
            "name": "convert_unnamed_to_int_select",
            "expression": "int(x.standalone_enum)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": { "1": 3, "2": 4, "3": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [
                    {
                      "id": "3",
                      "selectExpr": {
                        "operand": { "id": "2", "identExpr": { "name": "x" } },
                        "field": "standalone_enum"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "convert_int_inrange",
            "expression": "TestAllTypes.NestedEnum(2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 0, "2": 23, "3": 24 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "identExpr": { "name": "TestAllTypes" }
                  },
                  "function": "NestedEnum",
                  "args": [{ "id": "3", "constExpr": { "int64Value": "2" } }]
                }
              }
            }
          },
          {
            "name": "convert_int_big",
            "expression": "TestAllTypes.NestedEnum(20000)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 0, "2": 23, "3": 24 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "identExpr": { "name": "TestAllTypes" }
                  },
                  "function": "NestedEnum",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "20000" } }
                  ]
                }
              }
            }
          },
          {
            "name": "convert_int_neg",
            "expression": "GlobalEnum(-33)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 10, "2": 11 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "GlobalEnum",
                  "args": [{ "id": "2", "constExpr": { "int64Value": "-33" } }]
                }
              }
            }
          },
          {
            "name": "convert_int_too_big",
            "expression": "TestAllTypes.NestedEnum(5000000000)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 0, "2": 23, "3": 24 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "identExpr": { "name": "TestAllTypes" }
                  },
                  "function": "NestedEnum",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "5000000000" } }
                  ]
                }
              }
            }
          },
          {
            "name": "convert_int_too_neg",
            "expression": "TestAllTypes.NestedEnum(-7000000000)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 0, "2": 23, "3": 24 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "identExpr": { "name": "TestAllTypes" }
                  },
                  "function": "NestedEnum",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "-7000000000" } }
                  ]
                }
              }
            }
          },
          {
            "name": "convert_string",
            "expression": "TestAllTypes.NestedEnum('BAZ')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 0, "2": 23, "3": 24 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "identExpr": { "name": "TestAllTypes" }
                  },
                  "function": "NestedEnum",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "BAZ" } }]
                }
              }
            }
          },
          {
            "name": "convert_string_bad",
            "expression": "TestAllTypes.NestedEnum('BLETCH')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 0, "2": 23, "3": 24 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "identExpr": { "name": "TestAllTypes" }
                  },
                  "function": "NestedEnum",
                  "args": [
                    { "id": "3", "constExpr": { "stringValue": "BLETCH" } }
                  ]
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "fields",
    "sections": [
      {
        "name": "map_fields",
        "tests": [
          {
            "name": "map_key_int64",
            "expression": "{0:1,2:2,5:true}[5]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": {
                  "1": 0,
                  "2": 2,
                  "3": 1,
                  "4": 3,
                  "5": 6,
                  "6": 5,
                  "7": 7,
                  "8": 10,
                  "9": 9,
                  "10": 11,
                  "11": 16,
                  "12": 17
                }
              },
              "expr": {
                "id": "11",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "int64Value": "0" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "int64Value": "1" }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "int64Value": "2" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "int64Value": "2" }
                            }
                          },
                          {
                            "id": "8",
                            "mapKey": {
                              "id": "9",
                              "constExpr": { "int64Value": "5" }
                            },
                            "value": {
                              "id": "10",
                              "constExpr": { "boolValue": true }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "12", "constExpr": { "int64Value": "5" } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_key_uint64",
            "expression": "{0u:1u,2u:'happy',5u:3u}[2u]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": {
                  "1": 0,
                  "2": 3,
                  "3": 1,
                  "4": 4,
                  "5": 9,
                  "6": 7,
                  "7": 10,
                  "8": 20,
                  "9": 18,
                  "10": 21,
                  "11": 24,
                  "12": 25
                }
              },
              "expr": {
                "id": "11",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "uint64Value": "0" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "uint64Value": "1" }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "uint64Value": "2" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "stringValue": "happy" }
                            }
                          },
                          {
                            "id": "8",
                            "mapKey": {
                              "id": "9",
                              "constExpr": { "uint64Value": "5" }
                            },
                            "value": {
                              "id": "10",
                              "constExpr": { "uint64Value": "3" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "12", "constExpr": { "uint64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_key_string",
            "expression": "{'name':100u}['name']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": {
                  "1": 0,
                  "2": 7,
                  "3": 1,
                  "4": 8,
                  "5": 13,
                  "6": 14
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "stringValue": "name" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "uint64Value": "100" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "stringValue": "name" } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_key_bool",
            "expression": "{true:5}[true]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 5, "3": 1, "4": 6, "5": 8, "6": 9 }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "boolValue": true }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "int64Value": "5" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_key_mixed_type",
            "expression": "{true:1,2:2,5u:3}[true]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": {
                  "1": 0,
                  "2": 5,
                  "3": 1,
                  "4": 6,
                  "5": 9,
                  "6": 8,
                  "7": 10,
                  "8": 14,
                  "9": 12,
                  "10": 15,
                  "11": 17,
                  "12": 18
                }
              },
              "expr": {
                "id": "11",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "boolValue": true }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "int64Value": "1" }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "int64Value": "2" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "int64Value": "2" }
                            }
                          },
                          {
                            "id": "8",
                            "mapKey": {
                              "id": "9",
                              "constExpr": { "uint64Value": "5" }
                            },
                            "value": {
                              "id": "10",
                              "constExpr": { "int64Value": "3" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "12", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_key_mixed_numbers_double_key",
            "expression": "{1u: 1.0, 2: 2.0, 3u: 3.0}[3.0]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 0,
                  "2": 3,
                  "3": 1,
                  "4": 5,
                  "5": 11,
                  "6": 10,
                  "7": 13,
                  "8": 20,
                  "9": 18,
                  "10": 22,
                  "11": 26,
                  "12": 27
                }
              },
              "expr": {
                "id": "11",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "uint64Value": "1" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "doubleValue": 1 }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "int64Value": "2" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "doubleValue": 2 }
                            }
                          },
                          {
                            "id": "8",
                            "mapKey": {
                              "id": "9",
                              "constExpr": { "uint64Value": "3" }
                            },
                            "value": {
                              "id": "10",
                              "constExpr": { "doubleValue": 3 }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "12", "constExpr": { "doubleValue": 3 } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_key_mixed_numbers_lossy_double_key",
            "expression": "{1u: 1.0, 2: 2.0, 3u: 3.0}[3.1]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 0,
                  "2": 3,
                  "3": 1,
                  "4": 5,
                  "5": 11,
                  "6": 10,
                  "7": 13,
                  "8": 20,
                  "9": 18,
                  "10": 22,
                  "11": 26,
                  "12": 27
                }
              },
              "expr": {
                "id": "11",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "uint64Value": "1" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "doubleValue": 1 }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "int64Value": "2" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "doubleValue": 2 }
                            }
                          },
                          {
                            "id": "8",
                            "mapKey": {
                              "id": "9",
                              "constExpr": { "uint64Value": "3" }
                            },
                            "value": {
                              "id": "10",
                              "constExpr": { "doubleValue": 3 }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "12", "constExpr": { "doubleValue": 3.1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_key_mixed_numbers_uint_key",
            "expression": "{1u: 1.0, 2: 2.0, 3u: 3.0}[2u]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": {
                  "1": 0,
                  "2": 3,
                  "3": 1,
                  "4": 5,
                  "5": 11,
                  "6": 10,
                  "7": 13,
                  "8": 20,
                  "9": 18,
                  "10": 22,
                  "11": 26,
                  "12": 27
                }
              },
              "expr": {
                "id": "11",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "uint64Value": "1" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "doubleValue": 1 }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "int64Value": "2" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "doubleValue": 2 }
                            }
                          },
                          {
                            "id": "8",
                            "mapKey": {
                              "id": "9",
                              "constExpr": { "uint64Value": "3" }
                            },
                            "value": {
                              "id": "10",
                              "constExpr": { "doubleValue": 3 }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "12", "constExpr": { "uint64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_key_mixed_numbers_int_key",
            "expression": "{1u: 1.0, 2: 2.0, 3u: 3.0}[1]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": {
                  "1": 0,
                  "2": 3,
                  "3": 1,
                  "4": 5,
                  "5": 11,
                  "6": 10,
                  "7": 13,
                  "8": 20,
                  "9": 18,
                  "10": 22,
                  "11": 26,
                  "12": 27
                }
              },
              "expr": {
                "id": "11",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "uint64Value": "1" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "doubleValue": 1 }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "int64Value": "2" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "doubleValue": 2 }
                            }
                          },
                          {
                            "id": "8",
                            "mapKey": {
                              "id": "9",
                              "constExpr": { "uint64Value": "3" }
                            },
                            "value": {
                              "id": "10",
                              "constExpr": { "doubleValue": 3 }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "12", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_field_access",
            "expression": "x.name",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": { "id": "1", "identExpr": { "name": "x" } },
                  "field": "name"
                }
              }
            }
          },
          {
            "name": "map_no_such_key",
            "expression": "{0:1,2:2,5:3}[1]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": {
                  "1": 0,
                  "2": 2,
                  "3": 1,
                  "4": 3,
                  "5": 6,
                  "6": 5,
                  "7": 7,
                  "8": 10,
                  "9": 9,
                  "10": 11,
                  "11": 13,
                  "12": 14
                }
              },
              "expr": {
                "id": "11",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "int64Value": "0" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "int64Value": "1" }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "int64Value": "2" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "int64Value": "2" }
                            }
                          },
                          {
                            "id": "8",
                            "mapKey": {
                              "id": "9",
                              "constExpr": { "int64Value": "5" }
                            },
                            "value": {
                              "id": "10",
                              "constExpr": { "int64Value": "3" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "12", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_field_select_no_such_key",
            "expression": "x.name",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": { "id": "1", "identExpr": { "name": "x" } },
                  "field": "name"
                }
              }
            }
          },
          {
            "name": "map_value_null",
            "expression": "{true:null}[true]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": {
                  "1": 0,
                  "2": 5,
                  "3": 1,
                  "4": 6,
                  "5": 11,
                  "6": 12
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "boolValue": true }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_value_bool",
            "expression": "{27:false}[27]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": {
                  "1": 0,
                  "2": 3,
                  "3": 1,
                  "4": 4,
                  "5": 10,
                  "6": 11
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "int64Value": "27" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "boolValue": false }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "27" } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_value_string",
            "expression": "{'n':'x'}['n']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 4, "3": 1, "4": 5, "5": 9, "6": 10 }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "stringValue": "n" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "stringValue": "x" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "stringValue": "n" } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_value_float",
            "expression": "{3:15.15}[3]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 2, "3": 1, "4": 3, "5": 9, "6": 10 }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "int64Value": "3" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "doubleValue": 15.15 }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "3" } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_value_uint64",
            "expression": "{0u:1u,2u:2u,5u:3u}[0u]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": {
                  "1": 0,
                  "2": 3,
                  "3": 1,
                  "4": 4,
                  "5": 9,
                  "6": 7,
                  "7": 10,
                  "8": 15,
                  "9": 13,
                  "10": 16,
                  "11": 19,
                  "12": 20
                }
              },
              "expr": {
                "id": "11",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "uint64Value": "0" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "uint64Value": "1" }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "uint64Value": "2" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "uint64Value": "2" }
                            }
                          },
                          {
                            "id": "8",
                            "mapKey": {
                              "id": "9",
                              "constExpr": { "uint64Value": "5" }
                            },
                            "value": {
                              "id": "10",
                              "constExpr": { "uint64Value": "3" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "12", "constExpr": { "uint64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_value_int64",
            "expression": "{true:1,false:2}[true]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": {
                  "1": 0,
                  "2": 5,
                  "3": 1,
                  "4": 6,
                  "5": 13,
                  "6": 8,
                  "7": 14,
                  "8": 16,
                  "9": 17
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "boolValue": true }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "int64Value": "1" }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "boolValue": false }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "int64Value": "2" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "9", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_value_bytes",
            "expression": "{0:b\"\"}[0]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 2, "3": 1, "4": 3, "5": 7, "6": 8 }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "int64Value": "0" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "bytesValue": "" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_value_list",
            "expression": "{0u:[1]}[0u]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": {
                  "1": 0,
                  "2": 3,
                  "3": 1,
                  "4": 4,
                  "5": 5,
                  "6": 8,
                  "7": 9
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "uint64Value": "0" }
                            },
                            "value": {
                              "id": "4",
                              "listExpr": {
                                "elements": [
                                  {
                                    "id": "5",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "uint64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_value_map",
            "expression": "{\"map\": {\"k\": \"v\"}}[\"map\"]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": {
                  "1": 0,
                  "2": 6,
                  "3": 1,
                  "4": 8,
                  "5": 12,
                  "6": 9,
                  "7": 14,
                  "8": 19,
                  "9": 20
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "stringValue": "map" }
                            },
                            "value": {
                              "id": "4",
                              "structExpr": {
                                "entries": [
                                  {
                                    "id": "5",
                                    "mapKey": {
                                      "id": "6",
                                      "constExpr": { "stringValue": "k" }
                                    },
                                    "value": {
                                      "id": "7",
                                      "constExpr": { "stringValue": "v" }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "9", "constExpr": { "stringValue": "map" } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_value_mix_type",
            "expression": "{\"map\": {\"k\": \"v\"}, \"list\": [1]}[\"map\"]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": {
                  "1": 0,
                  "2": 6,
                  "3": 1,
                  "4": 8,
                  "5": 12,
                  "6": 9,
                  "7": 14,
                  "8": 26,
                  "9": 20,
                  "10": 28,
                  "11": 29,
                  "12": 32,
                  "13": 33
                }
              },
              "expr": {
                "id": "12",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "stringValue": "map" }
                            },
                            "value": {
                              "id": "4",
                              "structExpr": {
                                "entries": [
                                  {
                                    "id": "5",
                                    "mapKey": {
                                      "id": "6",
                                      "constExpr": { "stringValue": "k" }
                                    },
                                    "value": {
                                      "id": "7",
                                      "constExpr": { "stringValue": "v" }
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "id": "8",
                            "mapKey": {
                              "id": "9",
                              "constExpr": { "stringValue": "list" }
                            },
                            "value": {
                              "id": "10",
                              "listExpr": {
                                "elements": [
                                  {
                                    "id": "11",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "13", "constExpr": { "stringValue": "map" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "map_has",
        "tests": [
          {
            "name": "has",
            "expression": "has({'a': 1, 'b': 2}.a)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": {
                  "2": 4,
                  "3": 8,
                  "4": 5,
                  "5": 10,
                  "6": 16,
                  "7": 13,
                  "8": 18,
                  "9": 20,
                  "10": 3
                },
                "macroCalls": {
                  "10": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "9",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "entries": [
                                  {
                                    "id": "3",
                                    "mapKey": {
                                      "id": "4",
                                      "constExpr": { "stringValue": "a" }
                                    },
                                    "value": {
                                      "id": "5",
                                      "constExpr": { "int64Value": "1" }
                                    }
                                  },
                                  {
                                    "id": "6",
                                    "mapKey": {
                                      "id": "7",
                                      "constExpr": { "stringValue": "b" }
                                    },
                                    "value": {
                                      "id": "8",
                                      "constExpr": { "int64Value": "2" }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "a"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "10",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "entries": [
                        {
                          "id": "3",
                          "mapKey": {
                            "id": "4",
                            "constExpr": { "stringValue": "a" }
                          },
                          "value": {
                            "id": "5",
                            "constExpr": { "int64Value": "1" }
                          }
                        },
                        {
                          "id": "6",
                          "mapKey": {
                            "id": "7",
                            "constExpr": { "stringValue": "b" }
                          },
                          "value": {
                            "id": "8",
                            "constExpr": { "int64Value": "2" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "a",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "has_not",
            "expression": "has({'a': 1, 'b': 2}.c)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": {
                  "2": 4,
                  "3": 8,
                  "4": 5,
                  "5": 10,
                  "6": 16,
                  "7": 13,
                  "8": 18,
                  "9": 20,
                  "10": 3
                },
                "macroCalls": {
                  "10": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "9",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "entries": [
                                  {
                                    "id": "3",
                                    "mapKey": {
                                      "id": "4",
                                      "constExpr": { "stringValue": "a" }
                                    },
                                    "value": {
                                      "id": "5",
                                      "constExpr": { "int64Value": "1" }
                                    }
                                  },
                                  {
                                    "id": "6",
                                    "mapKey": {
                                      "id": "7",
                                      "constExpr": { "stringValue": "b" }
                                    },
                                    "value": {
                                      "id": "8",
                                      "constExpr": { "int64Value": "2" }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "c"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "10",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "entries": [
                        {
                          "id": "3",
                          "mapKey": {
                            "id": "4",
                            "constExpr": { "stringValue": "a" }
                          },
                          "value": {
                            "id": "5",
                            "constExpr": { "int64Value": "1" }
                          }
                        },
                        {
                          "id": "6",
                          "mapKey": {
                            "id": "7",
                            "constExpr": { "stringValue": "b" }
                          },
                          "value": {
                            "id": "8",
                            "constExpr": { "int64Value": "2" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "c",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "has_empty",
            "expression": "has({}.a)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "2": 4, "3": 6, "4": 3 },
                "macroCalls": {
                  "4": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "3",
                          "selectExpr": {
                            "operand": { "id": "2", "structExpr": {} },
                            "field": "a"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": { "id": "2", "structExpr": {} },
                  "field": "a",
                  "testOnly": true
                }
              }
            }
          }
        ]
      },
      {
        "name": "qualified_identifier_resolution",
        "tests": [
          {
            "name": "qualified_ident",
            "expression": "a.b.c",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [6],
                "positions": { "1": 0, "2": 1, "3": 3 }
              },
              "expr": {
                "id": "3",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "selectExpr": {
                      "operand": { "id": "1", "identExpr": { "name": "a" } },
                      "field": "b"
                    }
                  },
                  "field": "c"
                }
              }
            }
          },
          {
            "name": "map_field_select",
            "expression": "a.b.c",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [6],
                "positions": { "1": 0, "2": 1, "3": 3 }
              },
              "expr": {
                "id": "3",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "selectExpr": {
                      "operand": { "id": "1", "identExpr": { "name": "a" } },
                      "field": "b"
                    }
                  },
                  "field": "c"
                }
              }
            }
          },
          {
            "name": "qualified_identifier_resolution_unchecked",
            "expression": "a.b.c",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [6],
                "positions": { "1": 0, "2": 1, "3": 3 }
              },
              "expr": {
                "id": "3",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "selectExpr": {
                      "operand": { "id": "1", "identExpr": { "name": "a" } },
                      "field": "b"
                    }
                  },
                  "field": "c"
                }
              }
            }
          },
          {
            "name": "list_field_select_unsupported",
            "expression": "a.b.pancakes",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 1, "3": 3 }
              },
              "expr": {
                "id": "3",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "selectExpr": {
                      "operand": { "id": "1", "identExpr": { "name": "a" } },
                      "field": "b"
                    }
                  },
                  "field": "pancakes"
                }
              }
            }
          },
          {
            "name": "int64_field_select_unsupported",
            "expression": "a.pancakes",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": { "id": "1", "identExpr": { "name": "a" } },
                  "field": "pancakes"
                }
              }
            }
          },
          {
            "name": "ident_with_longest_prefix_check",
            "expression": "a.b.c",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [6],
                "positions": { "1": 0, "2": 1, "3": 3 }
              },
              "expr": {
                "id": "3",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "selectExpr": {
                      "operand": { "id": "1", "identExpr": { "name": "a" } },
                      "field": "b"
                    }
                  },
                  "field": "c"
                }
              }
            }
          },
          {
            "name": "map_key_float",
            "expression": "{3.3:15.15, 1.0: 5}[1.0]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 1,
                  "4": 5,
                  "5": 15,
                  "6": 12,
                  "7": 17,
                  "8": 19,
                  "9": 20
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "doubleValue": 3.3 }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "doubleValue": 15.15 }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "doubleValue": 1 }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "int64Value": "5" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "9", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_key_null",
            "expression": "{null:false}[null]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": {
                  "1": 0,
                  "2": 5,
                  "3": 1,
                  "4": 6,
                  "5": 12,
                  "6": 13
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "boolValue": false }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "nullValue": null } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_value_repeat_key",
            "expression": "{true:1,false:2,true:3}[true]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": {
                  "1": 0,
                  "2": 5,
                  "3": 1,
                  "4": 6,
                  "5": 13,
                  "6": 8,
                  "7": 14,
                  "8": 20,
                  "9": 16,
                  "10": 21,
                  "11": 23,
                  "12": 24
                }
              },
              "expr": {
                "id": "11",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "boolValue": true }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "int64Value": "1" }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "boolValue": false }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "int64Value": "2" }
                            }
                          },
                          {
                            "id": "8",
                            "mapKey": {
                              "id": "9",
                              "constExpr": { "boolValue": true }
                            },
                            "value": {
                              "id": "10",
                              "constExpr": { "int64Value": "3" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "12", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_value_repeat_key_heterogeneous",
            "expression": "{0: 1, 0u: 2}[0.0]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": {
                  "1": 0,
                  "2": 2,
                  "3": 1,
                  "4": 4,
                  "5": 9,
                  "6": 7,
                  "7": 11,
                  "8": 13,
                  "9": 14
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "int64Value": "0" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "int64Value": "1" }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "uint64Value": "0" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "int64Value": "2" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "9", "constExpr": { "doubleValue": 0 } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "in",
        "tests": [
          {
            "name": "empty",
            "expression": "7 in {}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0, "2": 2, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "7" } },
                    { "id": "3", "structExpr": {} }
                  ]
                }
              }
            }
          },
          {
            "name": "singleton",
            "expression": "true in {true: 1}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": {
                  "1": 0,
                  "2": 5,
                  "3": 8,
                  "4": 13,
                  "5": 9,
                  "6": 15
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    {
                      "id": "3",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "4",
                            "mapKey": {
                              "id": "5",
                              "constExpr": { "boolValue": true }
                            },
                            "value": {
                              "id": "6",
                              "constExpr": { "int64Value": "1" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "present",
            "expression": "'George' in {'John': 'smart', 'Paul': 'cute', 'George': 'quiet', 'Ringo': 'funny'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [83],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 12,
                  "4": 19,
                  "5": 13,
                  "6": 21,
                  "7": 36,
                  "8": 30,
                  "9": 38,
                  "10": 54,
                  "11": 46,
                  "12": 56,
                  "13": 72,
                  "14": 65,
                  "15": 74
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "George" } },
                    {
                      "id": "3",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "4",
                            "mapKey": {
                              "id": "5",
                              "constExpr": { "stringValue": "John" }
                            },
                            "value": {
                              "id": "6",
                              "constExpr": { "stringValue": "smart" }
                            }
                          },
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "stringValue": "Paul" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "stringValue": "cute" }
                            }
                          },
                          {
                            "id": "10",
                            "mapKey": {
                              "id": "11",
                              "constExpr": { "stringValue": "George" }
                            },
                            "value": {
                              "id": "12",
                              "constExpr": { "stringValue": "quiet" }
                            }
                          },
                          {
                            "id": "13",
                            "mapKey": {
                              "id": "14",
                              "constExpr": { "stringValue": "Ringo" }
                            },
                            "value": {
                              "id": "15",
                              "constExpr": { "stringValue": "funny" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "absent",
            "expression": "'spider' in {'ant': 6, 'fly': 6, 'centipede': 100}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [51],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 12,
                  "4": 18,
                  "5": 13,
                  "6": 20,
                  "7": 28,
                  "8": 23,
                  "9": 30,
                  "10": 44,
                  "11": 33,
                  "12": 46
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "spider" } },
                    {
                      "id": "3",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "4",
                            "mapKey": {
                              "id": "5",
                              "constExpr": { "stringValue": "ant" }
                            },
                            "value": {
                              "id": "6",
                              "constExpr": { "int64Value": "6" }
                            }
                          },
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "stringValue": "fly" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "int64Value": "6" }
                            }
                          },
                          {
                            "id": "10",
                            "mapKey": {
                              "id": "11",
                              "constExpr": { "stringValue": "centipede" }
                            },
                            "value": {
                              "id": "12",
                              "constExpr": { "int64Value": "100" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "mixed_numbers_and_keys_present",
            "expression": "3.0 in {1: 1, 2: 2, 3u: 3} \u0026\u0026 2u in {1u: 1, 2: 2} \u0026\u0026 1 in {1u: 1, 2: 2}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [72],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 7,
                  "4": 9,
                  "5": 8,
                  "6": 11,
                  "7": 15,
                  "8": 14,
                  "9": 17,
                  "10": 22,
                  "11": 20,
                  "12": 24,
                  "13": 30,
                  "14": 33,
                  "15": 36,
                  "16": 39,
                  "17": 37,
                  "18": 41,
                  "19": 45,
                  "20": 44,
                  "21": 47,
                  "22": 27,
                  "23": 53,
                  "24": 55,
                  "25": 58,
                  "26": 61,
                  "27": 59,
                  "28": 63,
                  "29": 67,
                  "30": 66,
                  "31": 69,
                  "32": 50
                }
              },
              "expr": {
                "id": "22",
                "callExpr": {
                  "function": "_\u0026\u0026_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "@in",
                        "args": [
                          { "id": "1", "constExpr": { "doubleValue": 3 } },
                          {
                            "id": "3",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "4",
                                  "mapKey": {
                                    "id": "5",
                                    "constExpr": { "int64Value": "1" }
                                  },
                                  "value": {
                                    "id": "6",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                },
                                {
                                  "id": "7",
                                  "mapKey": {
                                    "id": "8",
                                    "constExpr": { "int64Value": "2" }
                                  },
                                  "value": {
                                    "id": "9",
                                    "constExpr": { "int64Value": "2" }
                                  }
                                },
                                {
                                  "id": "10",
                                  "mapKey": {
                                    "id": "11",
                                    "constExpr": { "uint64Value": "3" }
                                  },
                                  "value": {
                                    "id": "12",
                                    "constExpr": { "int64Value": "3" }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "14",
                      "callExpr": {
                        "function": "@in",
                        "args": [
                          { "id": "13", "constExpr": { "uint64Value": "2" } },
                          {
                            "id": "15",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "16",
                                  "mapKey": {
                                    "id": "17",
                                    "constExpr": { "uint64Value": "1" }
                                  },
                                  "value": {
                                    "id": "18",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                },
                                {
                                  "id": "19",
                                  "mapKey": {
                                    "id": "20",
                                    "constExpr": { "int64Value": "2" }
                                  },
                                  "value": {
                                    "id": "21",
                                    "constExpr": { "int64Value": "2" }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "24",
                      "callExpr": {
                        "function": "@in",
                        "args": [
                          { "id": "23", "constExpr": { "int64Value": "1" } },
                          {
                            "id": "25",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "26",
                                  "mapKey": {
                                    "id": "27",
                                    "constExpr": { "uint64Value": "1" }
                                  },
                                  "value": {
                                    "id": "28",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                },
                                {
                                  "id": "29",
                                  "mapKey": {
                                    "id": "30",
                                    "constExpr": { "int64Value": "2" }
                                  },
                                  "value": {
                                    "id": "31",
                                    "constExpr": { "int64Value": "2" }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "mixed_numbers_and_keys_absent",
            "expression": "3.1 in {1: 1, 2: 2, 3u: 3}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 7,
                  "4": 9,
                  "5": 8,
                  "6": 11,
                  "7": 15,
                  "8": 14,
                  "9": 17,
                  "10": 22,
                  "11": 20,
                  "12": 24
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 3.1 } },
                    {
                      "id": "3",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "4",
                            "mapKey": {
                              "id": "5",
                              "constExpr": { "int64Value": "1" }
                            },
                            "value": {
                              "id": "6",
                              "constExpr": { "int64Value": "1" }
                            }
                          },
                          {
                            "id": "7",
                            "mapKey": {
                              "id": "8",
                              "constExpr": { "int64Value": "2" }
                            },
                            "value": {
                              "id": "9",
                              "constExpr": { "int64Value": "2" }
                            }
                          },
                          {
                            "id": "10",
                            "mapKey": {
                              "id": "11",
                              "constExpr": { "uint64Value": "3" }
                            },
                            "value": {
                              "id": "12",
                              "constExpr": { "int64Value": "3" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "fp_math",
    "sections": [
      {
        "name": "fp_math",
        "tests": [
          {
            "name": "add_positive_positive",
            "expression": "4.25 + 15.25",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 4.25 } },
                    { "id": "3", "constExpr": { "doubleValue": 15.25 } }
                  ]
                }
              }
            }
          },
          {
            "name": "add_positive_negative",
            "expression": "17.75 + (-7.75)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 6, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 17.75 } },
                    { "id": "3", "constExpr": { "doubleValue": -7.75 } }
                  ]
                }
              }
            }
          },
          {
            "name": "add_negative_negative",
            "expression": "-4.125 + (-2.125)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 7, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": -4.125 } },
                    { "id": "3", "constExpr": { "doubleValue": -2.125 } }
                  ]
                }
              }
            }
          },
          {
            "name": "sub_positive_positive",
            "expression": "42.0 - 12.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_-_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 42 } },
                    { "id": "3", "constExpr": { "doubleValue": 12 } }
                  ]
                }
              }
            }
          },
          {
            "name": "sub_positive_negative",
            "expression": "42.875 - (-22.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 7, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_-_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 42.875 } },
                    { "id": "3", "constExpr": { "doubleValue": -22 } }
                  ]
                }
              }
            }
          },
          {
            "name": "sub_negative_negative",
            "expression": "-4.875 - (-0.125)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 7, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_-_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": -4.875 } },
                    { "id": "3", "constExpr": { "doubleValue": -0.125 } }
                  ]
                }
              }
            }
          },
          {
            "name": "multiply_positive_positive",
            "expression": "42.5 * 0.2",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 42.5 } },
                    { "id": "3", "constExpr": { "doubleValue": 0.2 } }
                  ]
                }
              }
            }
          },
          {
            "name": "multiply_positive_negative",
            "expression": "40.75 * (-2.25)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 6, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 40.75 } },
                    { "id": "3", "constExpr": { "doubleValue": -2.25 } }
                  ]
                }
              }
            }
          },
          {
            "name": "multiply_negative_negative",
            "expression": "-3.0 * (-2.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 5, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": -3 } },
                    { "id": "3", "constExpr": { "doubleValue": -2.5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "divide_positive_positive",
            "expression": "0.0625 / 0.002",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 7, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_/_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 0.0625 } },
                    { "id": "3", "constExpr": { "doubleValue": 0.002 } }
                  ]
                }
              }
            }
          },
          {
            "name": "divide_positive_negative",
            "expression": "-2.0 / 2.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_/_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": -2 } },
                    { "id": "3", "constExpr": { "doubleValue": 2 } }
                  ]
                }
              }
            }
          },
          {
            "name": "divide_negative_negative",
            "expression": "-8.875 / (-0.0625)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 0, "2": 7, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_/_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": -8.875 } },
                    { "id": "3", "constExpr": { "doubleValue": -0.0625 } }
                  ]
                }
              }
            }
          },
          {
            "name": "mod_not_support",
            "expression": "47.5 % 5.5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_%_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 47.5 } },
                    { "id": "3", "constExpr": { "doubleValue": 5.5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "negative",
            "expression": "-(4.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 2 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "-_",
                  "args": [{ "id": "2", "constExpr": { "doubleValue": 4.5 } }]
                }
              }
            }
          },
          {
            "name": "double_negative",
            "expression": "-(-1.25)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 2 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "-_",
                  "args": [{ "id": "2", "constExpr": { "doubleValue": -1.25 } }]
                }
              }
            }
          },
          {
            "name": "negative_zero",
            "expression": "-(0.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 2 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "-_",
                  "args": [{ "id": "2", "constExpr": { "doubleValue": 0 } }]
                }
              }
            }
          },
          {
            "name": "divide_zero",
            "expression": "15.75 / 0.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 6, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_/_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 15.75 } },
                    { "id": "3", "constExpr": { "doubleValue": 0 } }
                  ]
                }
              }
            }
          },
          {
            "name": "multiply_zero",
            "expression": "15.36 * 0.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 6, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 15.36 } },
                    { "id": "3", "constExpr": { "doubleValue": 0 } }
                  ]
                }
              }
            }
          },
          {
            "name": "add_left_identity",
            "expression": "0.0 + 1.75",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 0 } },
                    { "id": "3", "constExpr": { "doubleValue": 1.75 } }
                  ]
                }
              }
            }
          },
          {
            "name": "add_right_identity",
            "expression": " 2.5 + 0.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 1, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 2.5 } },
                    { "id": "3", "constExpr": { "doubleValue": 0 } }
                  ]
                }
              }
            }
          },
          {
            "name": "add_commutative",
            "expression": "7.5 + 1.5 == 1.5 + 7.5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 6,
                  "4": 10,
                  "5": 13,
                  "6": 17,
                  "7": 19
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          { "id": "1", "constExpr": { "doubleValue": 7.5 } },
                          { "id": "3", "constExpr": { "doubleValue": 1.5 } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          { "id": "5", "constExpr": { "doubleValue": 1.5 } },
                          { "id": "7", "constExpr": { "doubleValue": 7.5 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "add_associative",
            "expression": "5.625 + (15.75 + 2.0) == (5.625 + 15.75) + 2.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": {
                  "1": 0,
                  "2": 6,
                  "3": 9,
                  "4": 15,
                  "5": 17,
                  "6": 22,
                  "7": 26,
                  "8": 32,
                  "9": 34,
                  "10": 41,
                  "11": 43
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          { "id": "1", "constExpr": { "doubleValue": 5.625 } },
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "3",
                                  "constExpr": { "doubleValue": 15.75 }
                                },
                                { "id": "5", "constExpr": { "doubleValue": 2 } }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "10",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          {
                            "id": "8",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "7",
                                  "constExpr": { "doubleValue": 5.625 }
                                },
                                {
                                  "id": "9",
                                  "constExpr": { "doubleValue": 15.75 }
                                }
                              ]
                            }
                          },
                          { "id": "11", "constExpr": { "doubleValue": 2 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "mul_left_identity",
            "expression": "1.0 * 45.25",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 1 } },
                    { "id": "3", "constExpr": { "doubleValue": 45.25 } }
                  ]
                }
              }
            }
          },
          {
            "name": "mul_right_identity",
            "expression": "-25.25 * 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 7, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": -25.25 } },
                    { "id": "3", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "mul_commutative",
            "expression": "1.5 * 25.875 == 25.875 * 1.5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 6,
                  "4": 13,
                  "5": 16,
                  "6": 23,
                  "7": 25
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_*_",
                        "args": [
                          { "id": "1", "constExpr": { "doubleValue": 1.5 } },
                          { "id": "3", "constExpr": { "doubleValue": 25.875 } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "callExpr": {
                        "function": "_*_",
                        "args": [
                          { "id": "5", "constExpr": { "doubleValue": 25.875 } },
                          { "id": "7", "constExpr": { "doubleValue": 1.5 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "mul_associative",
            "expression": "1.5 * (23.625 * 0.75) == (1.5 * 23.625) * 0.75",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 7,
                  "4": 14,
                  "5": 16,
                  "6": 22,
                  "7": 26,
                  "8": 30,
                  "9": 32,
                  "10": 40,
                  "11": 42
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_*_",
                        "args": [
                          { "id": "1", "constExpr": { "doubleValue": 1.5 } },
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "_*_",
                              "args": [
                                {
                                  "id": "3",
                                  "constExpr": { "doubleValue": 23.625 }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "doubleValue": 0.75 }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "10",
                      "callExpr": {
                        "function": "_*_",
                        "args": [
                          {
                            "id": "8",
                            "callExpr": {
                              "function": "_*_",
                              "args": [
                                {
                                  "id": "7",
                                  "constExpr": { "doubleValue": 1.5 }
                                },
                                {
                                  "id": "9",
                                  "constExpr": { "doubleValue": 23.625 }
                                }
                              ]
                            }
                          },
                          { "id": "11", "constExpr": { "doubleValue": 0.75 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "add_mul_distribute",
            "expression": "5.75 * (1.5 + 2.5)  == 5.75 * 1.5 + 5.75 * 2.5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": {
                  "1": 0,
                  "2": 5,
                  "3": 8,
                  "4": 12,
                  "5": 14,
                  "6": 20,
                  "7": 23,
                  "8": 28,
                  "9": 30,
                  "10": 34,
                  "11": 36,
                  "12": 41,
                  "13": 43
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_*_",
                        "args": [
                          { "id": "1", "constExpr": { "doubleValue": 5.75 } },
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "3",
                                  "constExpr": { "doubleValue": 1.5 }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "doubleValue": 2.5 }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "10",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          {
                            "id": "8",
                            "callExpr": {
                              "function": "_*_",
                              "args": [
                                {
                                  "id": "7",
                                  "constExpr": { "doubleValue": 5.75 }
                                },
                                {
                                  "id": "9",
                                  "constExpr": { "doubleValue": 1.5 }
                                }
                              ]
                            }
                          },
                          {
                            "id": "12",
                            "callExpr": {
                              "function": "_*_",
                              "args": [
                                {
                                  "id": "11",
                                  "constExpr": { "doubleValue": 5.75 }
                                },
                                {
                                  "id": "13",
                                  "constExpr": { "doubleValue": 2.5 }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "fp_overflow_positive",
            "expression": "2.0 * 8.988466e+307 ",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 2 } },
                    { "id": "3", "constExpr": { "doubleValue": 8.988466e307 } }
                  ]
                }
              }
            }
          },
          {
            "name": "fp_overflow_negative",
            "expression": "2.0 * -8.988466e+307 ",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 2 } },
                    { "id": "3", "constExpr": { "doubleValue": -8.988466e307 } }
                  ]
                }
              }
            }
          },
          {
            "name": "fp_underflow",
            "expression": "1e-324  / 2.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 8, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_/_",
                  "args": [
                    { "id": "1", "constExpr": { "doubleValue": 0 } },
                    { "id": "3", "constExpr": { "doubleValue": 2 } }
                  ]
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "integer_math",
    "sections": [
      {
        "name": "int64_math",
        "tests": [
          {
            "name": "add_positive_positive",
            "expression": "40 + 2",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "40" } },
                    { "id": "3", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "add_positive_negative",
            "expression": "42 + (-7)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "42" } },
                    { "id": "3", "constExpr": { "int64Value": "-7" } }
                  ]
                }
              }
            }
          },
          {
            "name": "add_negative_negative",
            "expression": "-4 + (-2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "-4" } },
                    { "id": "3", "constExpr": { "int64Value": "-2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "sub_positive_positive",
            "expression": "42 - 12",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_-_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "42" } },
                    { "id": "3", "constExpr": { "int64Value": "12" } }
                  ]
                }
              }
            }
          },
          {
            "name": "sub_positive_negative",
            "expression": "42 - (-22)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_-_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "42" } },
                    { "id": "3", "constExpr": { "int64Value": "-22" } }
                  ]
                }
              }
            }
          },
          {
            "name": "sub_negative_negative",
            "expression": "-42 - (-12)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_-_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "-42" } },
                    { "id": "3", "constExpr": { "int64Value": "-12" } }
                  ]
                }
              }
            }
          },
          {
            "name": "multiply_positive_positive",
            "expression": "42 * 2",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "42" } },
                    { "id": "3", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "multiply_positive_negative",
            "expression": "40 * (-2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "40" } },
                    { "id": "3", "constExpr": { "int64Value": "-2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "multiply_negative_negative",
            "expression": "-30 * (-2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "-30" } },
                    { "id": "3", "constExpr": { "int64Value": "-2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "divide_positive_positive",
            "expression": "42 / 2",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_/_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "42" } },
                    { "id": "3", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "divide_positive_negative",
            "expression": "-20 / 2",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_/_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "-20" } },
                    { "id": "3", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "divide_negative_negative",
            "expression": "-80 / (-2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_/_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "-80" } },
                    { "id": "3", "constExpr": { "int64Value": "-2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "mod_positive_positive",
            "expression": "47 % 5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_%_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "47" } },
                    { "id": "3", "constExpr": { "int64Value": "5" } }
                  ]
                }
              }
            }
          },
          {
            "name": "mod_positive_negative",
            "expression": "43 % (-5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 3, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_%_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "43" } },
                    { "id": "3", "constExpr": { "int64Value": "-5" } }
                  ]
                }
              }
            }
          },
          {
            "name": "mod_negative_negative",
            "expression": "-42 % (-5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 4, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_%_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "-42" } },
                    { "id": "3", "constExpr": { "int64Value": "-5" } }
                  ]
                }
              }
            }
          },
          {
            "name": "mod_negative_positive",
            "expression": "-3 % 5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_%_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "-3" } },
                    { "id": "3", "constExpr": { "int64Value": "5" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unary_minus_pos",
            "expression": "-(42)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [6],
                "positions": { "1": 0, "2": 2 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "-_",
                  "args": [{ "id": "2", "constExpr": { "int64Value": "42" } }]
                }
              }
            }
          },
          {
            "name": "unary_minus_neg",
            "expression": "-(-42)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 2 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "-_",
                  "args": [{ "id": "2", "constExpr": { "int64Value": "-42" } }]
                }
              }
            }
          },
          {
            "name": "unary_minus_no_overload",
            "expression": "-(42u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 2 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "-_",
                  "args": [{ "id": "2", "constExpr": { "uint64Value": "42" } }]
                }
              }
            }
          },
          {
            "name": "unary_minus_not_bool",
            "expression": "-false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "-_",
                  "args": [{ "id": "2", "constExpr": { "boolValue": false } }]
                }
              }
            }
          },
          {
            "name": "mod_zero",
            "expression": "34 % 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_%_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "34" } },
                    { "id": "3", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "negtive_zero",
            "expression": "-(0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [5],
                "positions": { "1": 0, "2": 2 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "-_",
                  "args": [{ "id": "2", "constExpr": { "int64Value": "0" } }]
                }
              }
            }
          },
          {
            "name": "double_negative",
            "expression": "-(-42)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 2 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "-_",
                  "args": [{ "id": "2", "constExpr": { "int64Value": "-42" } }]
                }
              }
            }
          },
          {
            "name": "divide_zero",
            "expression": "15 / 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_/_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "15" } },
                    { "id": "3", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "multiply_zero",
            "expression": "15 * 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "15" } },
                    { "id": "3", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "add_left_identity",
            "expression": "0 + 17",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 2, "3": 4 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "0" } },
                    { "id": "3", "constExpr": { "int64Value": "17" } }
                  ]
                }
              }
            }
          },
          {
            "name": "add_right_identity",
            "expression": " 29 + 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 1, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "29" } },
                    { "id": "3", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "add_commutative",
            "expression": "75 + 15 == 15 + 75",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": {
                  "1": 0,
                  "2": 3,
                  "3": 5,
                  "4": 8,
                  "5": 11,
                  "6": 14,
                  "7": 16
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          { "id": "1", "constExpr": { "int64Value": "75" } },
                          { "id": "3", "constExpr": { "int64Value": "15" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          { "id": "5", "constExpr": { "int64Value": "15" } },
                          { "id": "7", "constExpr": { "int64Value": "75" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "add_associative",
            "expression": "5 + (15 + 20) == (5 + 15) + 20",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": {
                  "1": 0,
                  "2": 2,
                  "3": 5,
                  "4": 8,
                  "5": 10,
                  "6": 14,
                  "7": 18,
                  "8": 20,
                  "9": 22,
                  "10": 26,
                  "11": 28
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          { "id": "1", "constExpr": { "int64Value": "5" } },
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "3",
                                  "constExpr": { "int64Value": "15" }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "20" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "10",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          {
                            "id": "8",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "7",
                                  "constExpr": { "int64Value": "5" }
                                },
                                {
                                  "id": "9",
                                  "constExpr": { "int64Value": "15" }
                                }
                              ]
                            }
                          },
                          { "id": "11", "constExpr": { "int64Value": "20" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "mul_left_identity",
            "expression": "1 * 45",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 2, "3": 4 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "1" } },
                    { "id": "3", "constExpr": { "int64Value": "45" } }
                  ]
                }
              }
            }
          },
          {
            "name": "mul_right_identity",
            "expression": "-25 * 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "-25" } },
                    { "id": "3", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "mul_commutative",
            "expression": "15 * 25 == 25 * 15",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": {
                  "1": 0,
                  "2": 3,
                  "3": 5,
                  "4": 8,
                  "5": 11,
                  "6": 14,
                  "7": 16
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_*_",
                        "args": [
                          { "id": "1", "constExpr": { "int64Value": "15" } },
                          { "id": "3", "constExpr": { "int64Value": "25" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "callExpr": {
                        "function": "_*_",
                        "args": [
                          { "id": "5", "constExpr": { "int64Value": "25" } },
                          { "id": "7", "constExpr": { "int64Value": "15" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "mul_associative",
            "expression": "15 * (23 * 88) == (15 * 23) * 88",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": {
                  "1": 0,
                  "2": 3,
                  "3": 6,
                  "4": 9,
                  "5": 11,
                  "6": 15,
                  "7": 19,
                  "8": 22,
                  "9": 24,
                  "10": 28,
                  "11": 30
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_*_",
                        "args": [
                          { "id": "1", "constExpr": { "int64Value": "15" } },
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "_*_",
                              "args": [
                                {
                                  "id": "3",
                                  "constExpr": { "int64Value": "23" }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "88" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "10",
                      "callExpr": {
                        "function": "_*_",
                        "args": [
                          {
                            "id": "8",
                            "callExpr": {
                              "function": "_*_",
                              "args": [
                                {
                                  "id": "7",
                                  "constExpr": { "int64Value": "15" }
                                },
                                {
                                  "id": "9",
                                  "constExpr": { "int64Value": "23" }
                                }
                              ]
                            }
                          },
                          { "id": "11", "constExpr": { "int64Value": "88" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "add_mul_distribute",
            "expression": "5 * (15 + 25)  == 5 * 15 + 5 * 25",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": {
                  "1": 0,
                  "2": 2,
                  "3": 5,
                  "4": 8,
                  "5": 10,
                  "6": 15,
                  "7": 18,
                  "8": 20,
                  "9": 22,
                  "10": 25,
                  "11": 27,
                  "12": 29,
                  "13": 31
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_*_",
                        "args": [
                          { "id": "1", "constExpr": { "int64Value": "5" } },
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "3",
                                  "constExpr": { "int64Value": "15" }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "25" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "10",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          {
                            "id": "8",
                            "callExpr": {
                              "function": "_*_",
                              "args": [
                                {
                                  "id": "7",
                                  "constExpr": { "int64Value": "5" }
                                },
                                {
                                  "id": "9",
                                  "constExpr": { "int64Value": "15" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "12",
                            "callExpr": {
                              "function": "_*_",
                              "args": [
                                {
                                  "id": "11",
                                  "constExpr": { "int64Value": "5" }
                                },
                                {
                                  "id": "13",
                                  "constExpr": { "int64Value": "25" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int64_overflow_positive",
            "expression": "9223372036854775807 + 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": { "1": 0, "2": 20, "3": 22 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    {
                      "id": "1",
                      "constExpr": { "int64Value": "9223372036854775807" }
                    },
                    { "id": "3", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "int64_overflow_negative",
            "expression": "-9223372036854775808 - 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": { "1": 0, "2": 21, "3": 23 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_-_",
                  "args": [
                    {
                      "id": "1",
                      "constExpr": { "int64Value": "-9223372036854775808" }
                    },
                    { "id": "3", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "int64_overflow_add_negative",
            "expression": "-9223372036854775808 + (-1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 0, "2": 21, "3": 24 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    {
                      "id": "1",
                      "constExpr": { "int64Value": "-9223372036854775808" }
                    },
                    { "id": "3", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "int64_overflow_sub_positive",
            "expression": "1 - (-9223372036854775807)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 0, "2": 2, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_-_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "1" } },
                    {
                      "id": "3",
                      "constExpr": { "int64Value": "-9223372036854775807" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int64_min_negate",
            "expression": "-(-9223372036854775808)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": { "1": 0, "2": 2 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "-_",
                  "args": [
                    {
                      "id": "2",
                      "constExpr": { "int64Value": "-9223372036854775808" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int64_min_negate_mul",
            "expression": "(-9223372036854775808) * -1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 1, "2": 23, "3": 25 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    {
                      "id": "1",
                      "constExpr": { "int64Value": "-9223372036854775808" }
                    },
                    { "id": "3", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "int64_min_negate_div",
            "expression": "(-9223372036854775808)/-1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 1, "2": 22, "3": 23 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_/_",
                  "args": [
                    {
                      "id": "1",
                      "constExpr": { "int64Value": "-9223372036854775808" }
                    },
                    { "id": "3", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "int64_overflow_mul_positive",
            "expression": "5000000000 * 5000000000",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": { "1": 0, "2": 11, "3": 13 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "5000000000" } },
                    { "id": "3", "constExpr": { "int64Value": "5000000000" } }
                  ]
                }
              }
            }
          },
          {
            "name": "int64_overflow_mul_negative",
            "expression": "(-5000000000) * 5000000000",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 1, "2": 14, "3": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "-5000000000" } },
                    { "id": "3", "constExpr": { "int64Value": "5000000000" } }
                  ]
                }
              }
            }
          },
          {
            "name": "uint64_overflow_positive",
            "expression": "18446744073709551615u + 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 0, "2": 22, "3": 24 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    {
                      "id": "1",
                      "constExpr": { "uint64Value": "18446744073709551615" }
                    },
                    { "id": "3", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "uint64_overflow_negative",
            "expression": "0u - 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_-_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "0" } },
                    { "id": "3", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "uint64_overflow_mul_positive",
            "expression": "5000000000u * 5000000000u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 0, "2": 12, "3": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "5000000000" } },
                    { "id": "3", "constExpr": { "uint64Value": "5000000000" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "uint64_math",
        "tests": [
          {
            "name": "add",
            "expression": "42u + 2u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "42" } },
                    { "id": "3", "constExpr": { "uint64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "sub",
            "expression": "42u - 12u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_-_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "42" } },
                    { "id": "3", "constExpr": { "uint64Value": "12" } }
                  ]
                }
              }
            }
          },
          {
            "name": "multiply",
            "expression": "40u * 2u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "40" } },
                    { "id": "3", "constExpr": { "uint64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "divide",
            "expression": "60u / 2u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_/_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "60" } },
                    { "id": "3", "constExpr": { "uint64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "mod",
            "expression": "42u % 5u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_%_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "42" } },
                    { "id": "3", "constExpr": { "uint64Value": "5" } }
                  ]
                }
              }
            }
          },
          {
            "name": "negtive_no_overload",
            "expression": "-(5u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [6],
                "positions": { "1": 0, "2": 2 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "-_",
                  "args": [{ "id": "2", "constExpr": { "uint64Value": "5" } }]
                }
              }
            }
          },
          {
            "name": "mod_zero",
            "expression": "34u % 0u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_%_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "34" } },
                    { "id": "3", "constExpr": { "uint64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "divide_zero",
            "expression": "15u / 0u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_/_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "15" } },
                    { "id": "3", "constExpr": { "uint64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "multiply_zero",
            "expression": "15u * 0u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "15" } },
                    { "id": "3", "constExpr": { "uint64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "add_left_identity",
            "expression": "0u + 17u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "0" } },
                    { "id": "3", "constExpr": { "uint64Value": "17" } }
                  ]
                }
              }
            }
          },
          {
            "name": "add_right_identity",
            "expression": " 29u + 0u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 1, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "29" } },
                    { "id": "3", "constExpr": { "uint64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "add_commutative",
            "expression": "75u + 15u == 15u + 75u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 6,
                  "4": 10,
                  "5": 13,
                  "6": 17,
                  "7": 19
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          { "id": "1", "constExpr": { "uint64Value": "75" } },
                          { "id": "3", "constExpr": { "uint64Value": "15" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          { "id": "5", "constExpr": { "uint64Value": "15" } },
                          { "id": "7", "constExpr": { "uint64Value": "75" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "add_associative",
            "expression": "5u + (15u + 20u) == (5u + 15u) + 20u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": {
                  "1": 0,
                  "2": 3,
                  "3": 6,
                  "4": 10,
                  "5": 12,
                  "6": 17,
                  "7": 21,
                  "8": 24,
                  "9": 26,
                  "10": 31,
                  "11": 33
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          { "id": "1", "constExpr": { "uint64Value": "5" } },
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "3",
                                  "constExpr": { "uint64Value": "15" }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "uint64Value": "20" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "10",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          {
                            "id": "8",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "7",
                                  "constExpr": { "uint64Value": "5" }
                                },
                                {
                                  "id": "9",
                                  "constExpr": { "uint64Value": "15" }
                                }
                              ]
                            }
                          },
                          { "id": "11", "constExpr": { "uint64Value": "20" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "mul_left_identity",
            "expression": "1u * 45u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "1" } },
                    { "id": "3", "constExpr": { "uint64Value": "45" } }
                  ]
                }
              }
            }
          },
          {
            "name": "mul_right_identity",
            "expression": "25u * 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_*_",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "25" } },
                    { "id": "3", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "mul_commutative",
            "expression": "15u * 25u == 25u * 15u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 6,
                  "4": 10,
                  "5": 13,
                  "6": 17,
                  "7": 19
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_*_",
                        "args": [
                          { "id": "1", "constExpr": { "uint64Value": "15" } },
                          { "id": "3", "constExpr": { "uint64Value": "25" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "callExpr": {
                        "function": "_*_",
                        "args": [
                          { "id": "5", "constExpr": { "uint64Value": "25" } },
                          { "id": "7", "constExpr": { "uint64Value": "15" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "mul_associative",
            "expression": "15u * (23u * 88u) == (15u * 23u) * 88u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 7,
                  "4": 11,
                  "5": 13,
                  "6": 18,
                  "7": 22,
                  "8": 26,
                  "9": 28,
                  "10": 33,
                  "11": 35
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_*_",
                        "args": [
                          { "id": "1", "constExpr": { "uint64Value": "15" } },
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "_*_",
                              "args": [
                                {
                                  "id": "3",
                                  "constExpr": { "uint64Value": "23" }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "uint64Value": "88" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "10",
                      "callExpr": {
                        "function": "_*_",
                        "args": [
                          {
                            "id": "8",
                            "callExpr": {
                              "function": "_*_",
                              "args": [
                                {
                                  "id": "7",
                                  "constExpr": { "uint64Value": "15" }
                                },
                                {
                                  "id": "9",
                                  "constExpr": { "uint64Value": "23" }
                                }
                              ]
                            }
                          },
                          { "id": "11", "constExpr": { "uint64Value": "88" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "add_mul_distribute",
            "expression": "5u * (15u + 25u)  == 5u * 15u + 5u * 25u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": {
                  "1": 0,
                  "2": 3,
                  "3": 6,
                  "4": 10,
                  "5": 12,
                  "6": 18,
                  "7": 21,
                  "8": 24,
                  "9": 26,
                  "10": 30,
                  "11": 32,
                  "12": 35,
                  "13": 37
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_*_",
                        "args": [
                          { "id": "1", "constExpr": { "uint64Value": "5" } },
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "3",
                                  "constExpr": { "uint64Value": "15" }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "uint64Value": "25" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "10",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          {
                            "id": "8",
                            "callExpr": {
                              "function": "_*_",
                              "args": [
                                {
                                  "id": "7",
                                  "constExpr": { "uint64Value": "5" }
                                },
                                {
                                  "id": "9",
                                  "constExpr": { "uint64Value": "15" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "12",
                            "callExpr": {
                              "function": "_*_",
                              "args": [
                                {
                                  "id": "11",
                                  "constExpr": { "uint64Value": "5" }
                                },
                                {
                                  "id": "13",
                                  "constExpr": { "uint64Value": "25" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "lists",
    "sections": [
      {
        "name": "concatentation",
        "tests": [
          {
            "name": "list_append",
            "expression": "[0, 1, 2] + [3, 4, 5] == [0, 1, 2, 3, 4, 5]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "5": 10,
                  "6": 12,
                  "7": 13,
                  "8": 16,
                  "9": 19,
                  "10": 22,
                  "11": 25,
                  "12": 26,
                  "13": 29,
                  "14": 32,
                  "15": 35,
                  "16": 38,
                  "17": 41
                }
              },
              "expr": {
                "id": "10",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          {
                            "id": "1",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "2",
                                  "constExpr": { "int64Value": "0" }
                                },
                                {
                                  "id": "3",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "4",
                                  "constExpr": { "int64Value": "2" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "6",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "7",
                                  "constExpr": { "int64Value": "3" }
                                },
                                {
                                  "id": "8",
                                  "constExpr": { "int64Value": "4" }
                                },
                                {
                                  "id": "9",
                                  "constExpr": { "int64Value": "5" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "11",
                      "listExpr": {
                        "elements": [
                          { "id": "12", "constExpr": { "int64Value": "0" } },
                          { "id": "13", "constExpr": { "int64Value": "1" } },
                          { "id": "14", "constExpr": { "int64Value": "2" } },
                          { "id": "15", "constExpr": { "int64Value": "3" } },
                          { "id": "16", "constExpr": { "int64Value": "4" } },
                          { "id": "17", "constExpr": { "int64Value": "5" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "list_not_commutative",
            "expression": "[0, 1, 2] + [3, 4, 5] == [3, 4, 5, 0, 1, 2]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "5": 10,
                  "6": 12,
                  "7": 13,
                  "8": 16,
                  "9": 19,
                  "10": 22,
                  "11": 25,
                  "12": 26,
                  "13": 29,
                  "14": 32,
                  "15": 35,
                  "16": 38,
                  "17": 41
                }
              },
              "expr": {
                "id": "10",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          {
                            "id": "1",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "2",
                                  "constExpr": { "int64Value": "0" }
                                },
                                {
                                  "id": "3",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "4",
                                  "constExpr": { "int64Value": "2" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "6",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "7",
                                  "constExpr": { "int64Value": "3" }
                                },
                                {
                                  "id": "8",
                                  "constExpr": { "int64Value": "4" }
                                },
                                {
                                  "id": "9",
                                  "constExpr": { "int64Value": "5" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "11",
                      "listExpr": {
                        "elements": [
                          { "id": "12", "constExpr": { "int64Value": "3" } },
                          { "id": "13", "constExpr": { "int64Value": "4" } },
                          { "id": "14", "constExpr": { "int64Value": "5" } },
                          { "id": "15", "constExpr": { "int64Value": "0" } },
                          { "id": "16", "constExpr": { "int64Value": "1" } },
                          { "id": "17", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "list_repeat",
            "expression": "[2] + [2]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 1, "3": 4, "4": 6, "5": 7 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "listExpr": {
                        "elements": [
                          { "id": "5", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "empty_empty",
            "expression": "[] + []",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "listExpr": {} },
                    { "id": "3", "listExpr": {} }
                  ]
                }
              }
            }
          },
          {
            "name": "left_unit",
            "expression": "[] + [3, 4]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 3, "3": 5, "4": 6, "5": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "listExpr": {} },
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "int64Value": "3" } },
                          { "id": "5", "constExpr": { "int64Value": "4" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "right_unit",
            "expression": "[1, 2] + []",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 1, "3": 4, "4": 7, "5": 9 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "int64Value": "1" } },
                          { "id": "3", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "5", "listExpr": {} }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "index",
        "tests": [
          {
            "name": "zero_based",
            "expression": "[7, 8, 9][0]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 1, "3": 4, "4": 7, "5": 9, "6": 10 }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "int64Value": "7" } },
                          { "id": "3", "constExpr": { "int64Value": "8" } },
                          { "id": "4", "constExpr": { "int64Value": "9" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "zero_based_double",
            "expression": "[7, 8, 9][dyn(0.0)]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "5": 9,
                  "6": 13,
                  "7": 14
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "int64Value": "7" } },
                          { "id": "3", "constExpr": { "int64Value": "8" } },
                          { "id": "4", "constExpr": { "int64Value": "9" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "7", "constExpr": { "doubleValue": 0 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "zero_based_double_error",
            "expression": "[7, 8, 9][dyn(0.1)]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "5": 9,
                  "6": 13,
                  "7": 14
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "int64Value": "7" } },
                          { "id": "3", "constExpr": { "int64Value": "8" } },
                          { "id": "4", "constExpr": { "int64Value": "9" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "7", "constExpr": { "doubleValue": 0.1 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "zero_based_uint",
            "expression": "[7, 8, 9][dyn(0u)]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "5": 9,
                  "6": 13,
                  "7": 14
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "int64Value": "7" } },
                          { "id": "3", "constExpr": { "int64Value": "8" } },
                          { "id": "4", "constExpr": { "int64Value": "9" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "7", "constExpr": { "uint64Value": "0" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "singleton",
            "expression": "['foo'][0]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 1, "3": 7, "4": 8 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "stringValue": "foo" } }
                        ]
                      }
                    },
                    { "id": "4", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "middle",
            "expression": "[0, 1, 1, 2, 3, 5, 8, 13][4]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "5": 10,
                  "6": 13,
                  "7": 16,
                  "8": 19,
                  "9": 22,
                  "10": 25,
                  "11": 26
                }
              },
              "expr": {
                "id": "10",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "int64Value": "0" } },
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "2" } },
                          { "id": "6", "constExpr": { "int64Value": "3" } },
                          { "id": "7", "constExpr": { "int64Value": "5" } },
                          { "id": "8", "constExpr": { "int64Value": "8" } },
                          { "id": "9", "constExpr": { "int64Value": "13" } }
                        ]
                      }
                    },
                    { "id": "11", "constExpr": { "int64Value": "4" } }
                  ]
                }
              }
            }
          },
          {
            "name": "last",
            "expression": "['George', 'John', 'Paul', 'Ringo'][3]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 11,
                  "4": 19,
                  "5": 27,
                  "6": 35,
                  "7": 36
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "2",
                            "constExpr": { "stringValue": "George" }
                          },
                          { "id": "3", "constExpr": { "stringValue": "John" } },
                          { "id": "4", "constExpr": { "stringValue": "Paul" } },
                          { "id": "5", "constExpr": { "stringValue": "Ringo" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "3" } }
                  ]
                }
              }
            }
          },
          {
            "name": "range",
            "expression": "[1, 2, 3][3]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 1, "3": 4, "4": 7, "5": 9, "6": 10 }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "int64Value": "1" } },
                          { "id": "3", "constExpr": { "int64Value": "2" } },
                          { "id": "4", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "3" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "in",
        "tests": [
          {
            "name": "empty",
            "expression": "7 in []",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0, "2": 2, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "7" } },
                    { "id": "3", "listExpr": {} }
                  ]
                }
              }
            }
          },
          {
            "name": "singleton",
            "expression": "4u in [4u]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 3, "3": 6, "4": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "4" } },
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "uint64Value": "4" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "first",
            "expression": "'alpha' in ['alpha', 'beta', 'gamma']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": {
                  "1": 0,
                  "2": 8,
                  "3": 11,
                  "4": 12,
                  "5": 21,
                  "6": 29
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "alpha" } },
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "constExpr": { "stringValue": "alpha" }
                          },
                          { "id": "5", "constExpr": { "stringValue": "beta" } },
                          { "id": "6", "constExpr": { "stringValue": "gamma" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "middle",
            "expression": "3 in [5, 4, 3, 2, 1]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": {
                  "1": 0,
                  "2": 2,
                  "3": 5,
                  "4": 6,
                  "5": 9,
                  "6": 12,
                  "7": 15,
                  "8": 18
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "3" } },
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "int64Value": "5" } },
                          { "id": "5", "constExpr": { "int64Value": "4" } },
                          { "id": "6", "constExpr": { "int64Value": "3" } },
                          { "id": "7", "constExpr": { "int64Value": "2" } },
                          { "id": "8", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "last",
            "expression": "20u in [4u, 6u, 8u, 12u, 20u]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": {
                  "1": 0,
                  "2": 4,
                  "3": 7,
                  "4": 8,
                  "5": 12,
                  "6": 16,
                  "7": 20,
                  "8": 25
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "uint64Value": "20" } },
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "uint64Value": "4" } },
                          { "id": "5", "constExpr": { "uint64Value": "6" } },
                          { "id": "6", "constExpr": { "uint64Value": "8" } },
                          { "id": "7", "constExpr": { "uint64Value": "12" } },
                          { "id": "8", "constExpr": { "uint64Value": "20" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "double_in_ints",
            "expression": "dyn(3.0) in [5, 4, 3, 2, 1]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": {
                  "1": 3,
                  "2": 4,
                  "3": 9,
                  "4": 12,
                  "5": 13,
                  "6": 16,
                  "7": 19,
                  "8": 22,
                  "9": 25
                }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 3 } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "listExpr": {
                        "elements": [
                          { "id": "5", "constExpr": { "int64Value": "5" } },
                          { "id": "6", "constExpr": { "int64Value": "4" } },
                          { "id": "7", "constExpr": { "int64Value": "3" } },
                          { "id": "8", "constExpr": { "int64Value": "2" } },
                          { "id": "9", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint_in_ints",
            "expression": "dyn(3u) in [5, 4, 3, 2, 1]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": {
                  "1": 3,
                  "2": 4,
                  "3": 8,
                  "4": 11,
                  "5": 12,
                  "6": 15,
                  "7": 18,
                  "8": 21,
                  "9": 24
                }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "3" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "listExpr": {
                        "elements": [
                          { "id": "5", "constExpr": { "int64Value": "5" } },
                          { "id": "6", "constExpr": { "int64Value": "4" } },
                          { "id": "7", "constExpr": { "int64Value": "3" } },
                          { "id": "8", "constExpr": { "int64Value": "2" } },
                          { "id": "9", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int_in_doubles",
            "expression": "dyn(3) in [5.0, 4.0, 3.0, 2.0, 1.0]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": {
                  "1": 3,
                  "2": 4,
                  "3": 7,
                  "4": 10,
                  "5": 11,
                  "6": 16,
                  "7": 21,
                  "8": 26,
                  "9": 31
                }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "listExpr": {
                        "elements": [
                          { "id": "5", "constExpr": { "doubleValue": 5 } },
                          { "id": "6", "constExpr": { "doubleValue": 4 } },
                          { "id": "7", "constExpr": { "doubleValue": 3 } },
                          { "id": "8", "constExpr": { "doubleValue": 2 } },
                          { "id": "9", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint_in_doubles",
            "expression": "dyn(3u) in [5.0, 4.0, 3.0, 2.0, 1.0]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": {
                  "1": 3,
                  "2": 4,
                  "3": 8,
                  "4": 11,
                  "5": 12,
                  "6": 17,
                  "7": 22,
                  "8": 27,
                  "9": 32
                }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "uint64Value": "3" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "listExpr": {
                        "elements": [
                          { "id": "5", "constExpr": { "doubleValue": 5 } },
                          { "id": "6", "constExpr": { "doubleValue": 4 } },
                          { "id": "7", "constExpr": { "doubleValue": 3 } },
                          { "id": "8", "constExpr": { "doubleValue": 2 } },
                          { "id": "9", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int_in_uints",
            "expression": "dyn(3) in [5u, 4u, 3u, 2u, 1u]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": {
                  "1": 3,
                  "2": 4,
                  "3": 7,
                  "4": 10,
                  "5": 11,
                  "6": 15,
                  "7": 19,
                  "8": 23,
                  "9": 27
                }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "listExpr": {
                        "elements": [
                          { "id": "5", "constExpr": { "uint64Value": "5" } },
                          { "id": "6", "constExpr": { "uint64Value": "4" } },
                          { "id": "7", "constExpr": { "uint64Value": "3" } },
                          { "id": "8", "constExpr": { "uint64Value": "2" } },
                          { "id": "9", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "double_in_uints",
            "expression": "dyn(3.0) in [5u, 4u, 3u, 2u, 1u]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": {
                  "1": 3,
                  "2": 4,
                  "3": 9,
                  "4": 12,
                  "5": 13,
                  "6": 17,
                  "7": 21,
                  "8": 25,
                  "9": 29
                }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "2", "constExpr": { "doubleValue": 3 } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "listExpr": {
                        "elements": [
                          { "id": "5", "constExpr": { "uint64Value": "5" } },
                          { "id": "6", "constExpr": { "uint64Value": "4" } },
                          { "id": "7", "constExpr": { "uint64Value": "3" } },
                          { "id": "8", "constExpr": { "uint64Value": "2" } },
                          { "id": "9", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "missing",
            "expression": "'hawaiian' in ['meat', 'veggie', 'margarita', 'cheese']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [56],
                "positions": {
                  "1": 0,
                  "2": 11,
                  "3": 14,
                  "4": 15,
                  "5": 23,
                  "6": 33,
                  "7": 46
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "@in",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "hawaiian" } },
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "stringValue": "meat" } },
                          {
                            "id": "5",
                            "constExpr": { "stringValue": "veggie" }
                          },
                          {
                            "id": "6",
                            "constExpr": { "stringValue": "margarita" }
                          },
                          {
                            "id": "7",
                            "constExpr": { "stringValue": "cheese" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "size",
        "tests": [
          {
            "name": "list_empty",
            "expression": "size([])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "size",
                  "args": [{ "id": "2", "listExpr": {} }]
                }
              }
            }
          },
          {
            "name": "list",
            "expression": "size([1, 2, 3])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 4, "2": 5, "3": 6, "4": 9, "5": 12 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "size",
                  "args": [
                    {
                      "id": "2",
                      "listExpr": {
                        "elements": [
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "int64Value": "2" } },
                          { "id": "5", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "map_empty",
            "expression": "size({})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "size",
                  "args": [{ "id": "2", "structExpr": {} }]
                }
              }
            }
          },
          {
            "name": "map",
            "expression": "size({1: 'one', 2: 'two', 3: 'three'})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": {
                  "1": 4,
                  "2": 5,
                  "3": 7,
                  "4": 6,
                  "5": 9,
                  "6": 17,
                  "7": 16,
                  "8": 19,
                  "9": 27,
                  "10": 26,
                  "11": 29
                }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "size",
                  "args": [
                    {
                      "id": "2",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "3",
                            "mapKey": {
                              "id": "4",
                              "constExpr": { "int64Value": "1" }
                            },
                            "value": {
                              "id": "5",
                              "constExpr": { "stringValue": "one" }
                            }
                          },
                          {
                            "id": "6",
                            "mapKey": {
                              "id": "7",
                              "constExpr": { "int64Value": "2" }
                            },
                            "value": {
                              "id": "8",
                              "constExpr": { "stringValue": "two" }
                            }
                          },
                          {
                            "id": "9",
                            "mapKey": {
                              "id": "10",
                              "constExpr": { "int64Value": "3" }
                            },
                            "value": {
                              "id": "11",
                              "constExpr": { "stringValue": "three" }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "logic",
    "sections": [
      {
        "name": "conditional",
        "tests": [
          {
            "name": "true_case",
            "expression": "true ? 1 : 2",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 5, "3": 7, "4": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_?_:_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    { "id": "3", "constExpr": { "int64Value": "1" } },
                    { "id": "4", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "false_case",
            "expression": "false ? 'foo' : 'bar'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": { "1": 0, "2": 6, "3": 8, "4": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_?_:_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": false } },
                    { "id": "3", "constExpr": { "stringValue": "foo" } },
                    { "id": "4", "constExpr": { "stringValue": "bar" } }
                  ]
                }
              }
            }
          },
          {
            "name": "error_case",
            "expression": "2 / 0 \u003e 4 ? 'baz' : 'quux'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": {
                  "1": 0,
                  "2": 2,
                  "3": 4,
                  "4": 6,
                  "5": 8,
                  "6": 10,
                  "7": 12,
                  "8": 20
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_?_:_",
                  "args": [
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "_\u003e_",
                        "args": [
                          {
                            "id": "2",
                            "callExpr": {
                              "function": "_/_",
                              "args": [
                                {
                                  "id": "1",
                                  "constExpr": { "int64Value": "2" }
                                },
                                {
                                  "id": "3",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          { "id": "5", "constExpr": { "int64Value": "4" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "stringValue": "baz" } },
                    { "id": "8", "constExpr": { "stringValue": "quux" } }
                  ]
                }
              }
            }
          },
          {
            "name": "mixed_type",
            "expression": "true ? 'cows' : 17",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 0, "2": 5, "3": 7, "4": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_?_:_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    { "id": "3", "constExpr": { "stringValue": "cows" } },
                    { "id": "4", "constExpr": { "int64Value": "17" } }
                  ]
                }
              }
            }
          },
          {
            "name": "bad_type",
            "expression": "'cows' ? false : 17",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 7, "3": 9, "4": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_?_:_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "cows" } },
                    { "id": "3", "constExpr": { "boolValue": false } },
                    { "id": "4", "constExpr": { "int64Value": "17" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "AND",
        "tests": [
          {
            "name": "all_true",
            "expression": "true \u0026\u0026 true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 8, "3": 5 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u0026\u0026_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    { "id": "2", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "all_false",
            "expression": "false \u0026\u0026 false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 9, "3": 6 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u0026\u0026_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": false } },
                    { "id": "2", "constExpr": { "boolValue": false } }
                  ]
                }
              }
            }
          },
          {
            "name": "false_left",
            "expression": "false \u0026\u0026 true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 9, "3": 6 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u0026\u0026_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": false } },
                    { "id": "2", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "false_right",
            "expression": "true \u0026\u0026 false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 8, "3": 5 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u0026\u0026_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    { "id": "2", "constExpr": { "boolValue": false } }
                  ]
                }
              }
            }
          },
          {
            "name": "short_circuit_type_left",
            "expression": "false \u0026\u0026 32",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 9, "3": 6 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u0026\u0026_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": false } },
                    { "id": "2", "constExpr": { "int64Value": "32" } }
                  ]
                }
              }
            }
          },
          {
            "name": "short_circuit_type_right",
            "expression": "'horses' \u0026\u0026 false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 12, "3": 9 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u0026\u0026_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "horses" } },
                    { "id": "2", "constExpr": { "boolValue": false } }
                  ]
                }
              }
            }
          },
          {
            "name": "short_circuit_error_left",
            "expression": "false \u0026\u0026 (2 / 0 \u003e 3 ? false : true)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 12,
                  "4": 14,
                  "5": 16,
                  "6": 18,
                  "7": 20,
                  "8": 22,
                  "9": 30,
                  "10": 6
                }
              },
              "expr": {
                "id": "10",
                "callExpr": {
                  "function": "_\u0026\u0026_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": false } },
                    {
                      "id": "7",
                      "callExpr": {
                        "function": "_?_:_",
                        "args": [
                          {
                            "id": "5",
                            "callExpr": {
                              "function": "_\u003e_",
                              "args": [
                                {
                                  "id": "3",
                                  "callExpr": {
                                    "function": "_/_",
                                    "args": [
                                      {
                                        "id": "2",
                                        "constExpr": { "int64Value": "2" }
                                      },
                                      {
                                        "id": "4",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "6",
                                  "constExpr": { "int64Value": "3" }
                                }
                              ]
                            }
                          },
                          { "id": "8", "constExpr": { "boolValue": false } },
                          { "id": "9", "constExpr": { "boolValue": true } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "short_circuit_error_right",
            "expression": "(2 / 0 \u003e 3 ? false : true) \u0026\u0026 false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": {
                  "1": 1,
                  "2": 3,
                  "3": 5,
                  "4": 7,
                  "5": 9,
                  "6": 11,
                  "7": 13,
                  "8": 21,
                  "9": 30,
                  "10": 27
                }
              },
              "expr": {
                "id": "10",
                "callExpr": {
                  "function": "_\u0026\u0026_",
                  "args": [
                    {
                      "id": "6",
                      "callExpr": {
                        "function": "_?_:_",
                        "args": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "_\u003e_",
                              "args": [
                                {
                                  "id": "2",
                                  "callExpr": {
                                    "function": "_/_",
                                    "args": [
                                      {
                                        "id": "1",
                                        "constExpr": { "int64Value": "2" }
                                      },
                                      {
                                        "id": "3",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "3" }
                                }
                              ]
                            }
                          },
                          { "id": "7", "constExpr": { "boolValue": false } },
                          { "id": "8", "constExpr": { "boolValue": true } }
                        ]
                      }
                    },
                    { "id": "9", "constExpr": { "boolValue": false } }
                  ]
                }
              }
            }
          },
          {
            "name": "error_right",
            "expression": "true \u0026\u0026 1/0 != 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": {
                  "1": 0,
                  "2": 8,
                  "3": 9,
                  "4": 10,
                  "5": 12,
                  "6": 15,
                  "7": 5
                }
              },
              "expr": {
                "id": "7",
                "callExpr": {
                  "function": "_\u0026\u0026_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "_!=_",
                        "args": [
                          {
                            "id": "3",
                            "callExpr": {
                              "function": "_/_",
                              "args": [
                                {
                                  "id": "2",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "4",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          { "id": "6", "constExpr": { "int64Value": "0" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "error_left",
            "expression": "1/0 != 0 \u0026\u0026 true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 2,
                  "4": 4,
                  "5": 7,
                  "6": 12,
                  "7": 9
                }
              },
              "expr": {
                "id": "7",
                "callExpr": {
                  "function": "_\u0026\u0026_",
                  "args": [
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "_!=_",
                        "args": [
                          {
                            "id": "2",
                            "callExpr": {
                              "function": "_/_",
                              "args": [
                                {
                                  "id": "1",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "3",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          { "id": "5", "constExpr": { "int64Value": "0" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "no_overload",
            "expression": "'less filling' \u0026\u0026 'tastes great'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 0, "2": 18, "3": 15 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u0026\u0026_",
                  "args": [
                    {
                      "id": "1",
                      "constExpr": { "stringValue": "less filling" }
                    },
                    {
                      "id": "2",
                      "constExpr": { "stringValue": "tastes great" }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "OR",
        "tests": [
          {
            "name": "all_true",
            "expression": "true || true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 8, "3": 5 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_||_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    { "id": "2", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "all_false",
            "expression": "false || false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 9, "3": 6 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_||_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": false } },
                    { "id": "2", "constExpr": { "boolValue": false } }
                  ]
                }
              }
            }
          },
          {
            "name": "false_left",
            "expression": "false || true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 9, "3": 6 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_||_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": false } },
                    { "id": "2", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "false_right",
            "expression": "true || false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 8, "3": 5 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_||_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    { "id": "2", "constExpr": { "boolValue": false } }
                  ]
                }
              }
            }
          },
          {
            "name": "short_circuit_type_left",
            "expression": "true || 32",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 8, "3": 5 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_||_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    { "id": "2", "constExpr": { "int64Value": "32" } }
                  ]
                }
              }
            }
          },
          {
            "name": "short_circuit_type_right",
            "expression": "'horses' || true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 12, "3": 9 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_||_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "horses" } },
                    { "id": "2", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "short_circuit_error_left",
            "expression": "true || (2 / 0 \u003e 3 ? false : true)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 11,
                  "4": 13,
                  "5": 15,
                  "6": 17,
                  "7": 19,
                  "8": 21,
                  "9": 29,
                  "10": 5
                }
              },
              "expr": {
                "id": "10",
                "callExpr": {
                  "function": "_||_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    {
                      "id": "7",
                      "callExpr": {
                        "function": "_?_:_",
                        "args": [
                          {
                            "id": "5",
                            "callExpr": {
                              "function": "_\u003e_",
                              "args": [
                                {
                                  "id": "3",
                                  "callExpr": {
                                    "function": "_/_",
                                    "args": [
                                      {
                                        "id": "2",
                                        "constExpr": { "int64Value": "2" }
                                      },
                                      {
                                        "id": "4",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "6",
                                  "constExpr": { "int64Value": "3" }
                                }
                              ]
                            }
                          },
                          { "id": "8", "constExpr": { "boolValue": false } },
                          { "id": "9", "constExpr": { "boolValue": true } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "short_circuit_error_right",
            "expression": "(2 / 0 \u003e 3 ? false : true) || true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": {
                  "1": 1,
                  "2": 3,
                  "3": 5,
                  "4": 7,
                  "5": 9,
                  "6": 11,
                  "7": 13,
                  "8": 21,
                  "9": 30,
                  "10": 27
                }
              },
              "expr": {
                "id": "10",
                "callExpr": {
                  "function": "_||_",
                  "args": [
                    {
                      "id": "6",
                      "callExpr": {
                        "function": "_?_:_",
                        "args": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "_\u003e_",
                              "args": [
                                {
                                  "id": "2",
                                  "callExpr": {
                                    "function": "_/_",
                                    "args": [
                                      {
                                        "id": "1",
                                        "constExpr": { "int64Value": "2" }
                                      },
                                      {
                                        "id": "3",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "3" }
                                }
                              ]
                            }
                          },
                          { "id": "7", "constExpr": { "boolValue": false } },
                          { "id": "8", "constExpr": { "boolValue": true } }
                        ]
                      }
                    },
                    { "id": "9", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "error_right",
            "expression": "false || 1/0 != 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 10,
                  "4": 11,
                  "5": 13,
                  "6": 16,
                  "7": 6
                }
              },
              "expr": {
                "id": "7",
                "callExpr": {
                  "function": "_||_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": false } },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "_!=_",
                        "args": [
                          {
                            "id": "3",
                            "callExpr": {
                              "function": "_/_",
                              "args": [
                                {
                                  "id": "2",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "4",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          { "id": "6", "constExpr": { "int64Value": "0" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "error_left",
            "expression": "1/0 != 0 || false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 2,
                  "4": 4,
                  "5": 7,
                  "6": 12,
                  "7": 9
                }
              },
              "expr": {
                "id": "7",
                "callExpr": {
                  "function": "_||_",
                  "args": [
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "_!=_",
                        "args": [
                          {
                            "id": "2",
                            "callExpr": {
                              "function": "_/_",
                              "args": [
                                {
                                  "id": "1",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "3",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          { "id": "5", "constExpr": { "int64Value": "0" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "boolValue": false } }
                  ]
                }
              }
            }
          },
          {
            "name": "no_overload",
            "expression": "'less filling' || 'tastes great'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 0, "2": 18, "3": 15 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_||_",
                  "args": [
                    {
                      "id": "1",
                      "constExpr": { "stringValue": "less filling" }
                    },
                    {
                      "id": "2",
                      "constExpr": { "stringValue": "tastes great" }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "NOT",
        "tests": [
          {
            "name": "not_true",
            "expression": "!true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [6],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "!_",
                  "args": [{ "id": "2", "constExpr": { "boolValue": true } }]
                }
              }
            }
          },
          {
            "name": "not_false",
            "expression": "!false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [7],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "!_",
                  "args": [{ "id": "2", "constExpr": { "boolValue": false } }]
                }
              }
            }
          },
          {
            "name": "no_overload",
            "expression": "!0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [3],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "!_",
                  "args": [{ "id": "2", "constExpr": { "int64Value": "0" } }]
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "macros",
    "sections": [
      {
        "name": "exists",
        "tests": [
          {
            "name": "list_elem_all_true",
            "expression": "[1, 2, 3].exists(e, e \u003e 0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "6": 17,
                  "7": 20,
                  "8": 22,
                  "9": 24,
                  "10": 16,
                  "11": 16,
                  "12": 16,
                  "13": 16,
                  "14": 16,
                  "15": 16,
                  "16": 16,
                  "17": 16
                },
                "macroCalls": {
                  "17": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "1" } },
                            { "id": "3", "constExpr": { "int64Value": "2" } },
                            { "id": "4", "constExpr": { "int64Value": "3" } }
                          ]
                        }
                      },
                      "function": "exists",
                      "args": [
                        { "id": "6", "identExpr": { "name": "e" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              { "id": "9", "constExpr": { "int64Value": "0" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "17",
                "comprehensionExpr": {
                  "iterVar": "e",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "1" } },
                        { "id": "3", "constExpr": { "int64Value": "2" } },
                        { "id": "4", "constExpr": { "int64Value": "3" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "10",
                    "constExpr": { "boolValue": false }
                  },
                  "loopCondition": {
                    "id": "13",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        {
                          "id": "12",
                          "callExpr": {
                            "function": "!_",
                            "args": [
                              {
                                "id": "11",
                                "identExpr": { "name": "__result__" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "15",
                    "callExpr": {
                      "function": "_||_",
                      "args": [
                        { "id": "14", "identExpr": { "name": "__result__" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              { "id": "9", "constExpr": { "int64Value": "0" } }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "16",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_elem_some_true",
            "expression": "[1, 2, 3].exists(e, e == 2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "6": 17,
                  "7": 20,
                  "8": 22,
                  "9": 25,
                  "10": 16,
                  "11": 16,
                  "12": 16,
                  "13": 16,
                  "14": 16,
                  "15": 16,
                  "16": 16,
                  "17": 16
                },
                "macroCalls": {
                  "17": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "1" } },
                            { "id": "3", "constExpr": { "int64Value": "2" } },
                            { "id": "4", "constExpr": { "int64Value": "3" } }
                          ]
                        }
                      },
                      "function": "exists",
                      "args": [
                        { "id": "6", "identExpr": { "name": "e" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              { "id": "9", "constExpr": { "int64Value": "2" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "17",
                "comprehensionExpr": {
                  "iterVar": "e",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "1" } },
                        { "id": "3", "constExpr": { "int64Value": "2" } },
                        { "id": "4", "constExpr": { "int64Value": "3" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "10",
                    "constExpr": { "boolValue": false }
                  },
                  "loopCondition": {
                    "id": "13",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        {
                          "id": "12",
                          "callExpr": {
                            "function": "!_",
                            "args": [
                              {
                                "id": "11",
                                "identExpr": { "name": "__result__" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "15",
                    "callExpr": {
                      "function": "_||_",
                      "args": [
                        { "id": "14", "identExpr": { "name": "__result__" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              { "id": "9", "constExpr": { "int64Value": "2" } }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "16",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_elem_none_true",
            "expression": "[1, 2, 3].exists(e, e \u003e 3)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "6": 17,
                  "7": 20,
                  "8": 22,
                  "9": 24,
                  "10": 16,
                  "11": 16,
                  "12": 16,
                  "13": 16,
                  "14": 16,
                  "15": 16,
                  "16": 16,
                  "17": 16
                },
                "macroCalls": {
                  "17": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "1" } },
                            { "id": "3", "constExpr": { "int64Value": "2" } },
                            { "id": "4", "constExpr": { "int64Value": "3" } }
                          ]
                        }
                      },
                      "function": "exists",
                      "args": [
                        { "id": "6", "identExpr": { "name": "e" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              { "id": "9", "constExpr": { "int64Value": "3" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "17",
                "comprehensionExpr": {
                  "iterVar": "e",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "1" } },
                        { "id": "3", "constExpr": { "int64Value": "2" } },
                        { "id": "4", "constExpr": { "int64Value": "3" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "10",
                    "constExpr": { "boolValue": false }
                  },
                  "loopCondition": {
                    "id": "13",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        {
                          "id": "12",
                          "callExpr": {
                            "function": "!_",
                            "args": [
                              {
                                "id": "11",
                                "identExpr": { "name": "__result__" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "15",
                    "callExpr": {
                      "function": "_||_",
                      "args": [
                        { "id": "14", "identExpr": { "name": "__result__" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              { "id": "9", "constExpr": { "int64Value": "3" } }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "16",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_elem_type_shortcircuit",
            "expression": "[1, 'foo', 3].exists(e, e != '1')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 11,
                  "6": 21,
                  "7": 24,
                  "8": 26,
                  "9": 29,
                  "10": 20,
                  "11": 20,
                  "12": 20,
                  "13": 20,
                  "14": 20,
                  "15": 20,
                  "16": 20,
                  "17": 20
                },
                "macroCalls": {
                  "17": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "1" } },
                            {
                              "id": "3",
                              "constExpr": { "stringValue": "foo" }
                            },
                            { "id": "4", "constExpr": { "int64Value": "3" } }
                          ]
                        }
                      },
                      "function": "exists",
                      "args": [
                        { "id": "6", "identExpr": { "name": "e" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_!=_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              { "id": "9", "constExpr": { "stringValue": "1" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "17",
                "comprehensionExpr": {
                  "iterVar": "e",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "1" } },
                        { "id": "3", "constExpr": { "stringValue": "foo" } },
                        { "id": "4", "constExpr": { "int64Value": "3" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "10",
                    "constExpr": { "boolValue": false }
                  },
                  "loopCondition": {
                    "id": "13",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        {
                          "id": "12",
                          "callExpr": {
                            "function": "!_",
                            "args": [
                              {
                                "id": "11",
                                "identExpr": { "name": "__result__" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "15",
                    "callExpr": {
                      "function": "_||_",
                      "args": [
                        { "id": "14", "identExpr": { "name": "__result__" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_!=_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              { "id": "9", "constExpr": { "stringValue": "1" } }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "16",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_elem_type_exhaustive",
            "expression": "[1, 'foo', 3].exists(e, e == '10')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 11,
                  "6": 21,
                  "7": 24,
                  "8": 26,
                  "9": 29,
                  "10": 20,
                  "11": 20,
                  "12": 20,
                  "13": 20,
                  "14": 20,
                  "15": 20,
                  "16": 20,
                  "17": 20
                },
                "macroCalls": {
                  "17": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "1" } },
                            {
                              "id": "3",
                              "constExpr": { "stringValue": "foo" }
                            },
                            { "id": "4", "constExpr": { "int64Value": "3" } }
                          ]
                        }
                      },
                      "function": "exists",
                      "args": [
                        { "id": "6", "identExpr": { "name": "e" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              {
                                "id": "9",
                                "constExpr": { "stringValue": "10" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "17",
                "comprehensionExpr": {
                  "iterVar": "e",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "1" } },
                        { "id": "3", "constExpr": { "stringValue": "foo" } },
                        { "id": "4", "constExpr": { "int64Value": "3" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "10",
                    "constExpr": { "boolValue": false }
                  },
                  "loopCondition": {
                    "id": "13",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        {
                          "id": "12",
                          "callExpr": {
                            "function": "!_",
                            "args": [
                              {
                                "id": "11",
                                "identExpr": { "name": "__result__" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "15",
                    "callExpr": {
                      "function": "_||_",
                      "args": [
                        { "id": "14", "identExpr": { "name": "__result__" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              {
                                "id": "9",
                                "constExpr": { "stringValue": "10" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "16",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_elem_exists_error",
            "expression": "[1, 2, 3].exists(e, e / 0 == 17)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "6": 17,
                  "7": 20,
                  "8": 22,
                  "9": 24,
                  "10": 26,
                  "11": 29,
                  "12": 16,
                  "13": 16,
                  "14": 16,
                  "15": 16,
                  "16": 16,
                  "17": 16,
                  "18": 16,
                  "19": 16
                },
                "macroCalls": {
                  "19": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "1" } },
                            { "id": "3", "constExpr": { "int64Value": "2" } },
                            { "id": "4", "constExpr": { "int64Value": "3" } }
                          ]
                        }
                      },
                      "function": "exists",
                      "args": [
                        { "id": "6", "identExpr": { "name": "e" } },
                        {
                          "id": "10",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              {
                                "id": "8",
                                "callExpr": {
                                  "function": "_/_",
                                  "args": [
                                    { "id": "7", "identExpr": { "name": "e" } },
                                    {
                                      "id": "9",
                                      "constExpr": { "int64Value": "0" }
                                    }
                                  ]
                                }
                              },
                              {
                                "id": "11",
                                "constExpr": { "int64Value": "17" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "19",
                "comprehensionExpr": {
                  "iterVar": "e",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "1" } },
                        { "id": "3", "constExpr": { "int64Value": "2" } },
                        { "id": "4", "constExpr": { "int64Value": "3" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "12",
                    "constExpr": { "boolValue": false }
                  },
                  "loopCondition": {
                    "id": "15",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        {
                          "id": "14",
                          "callExpr": {
                            "function": "!_",
                            "args": [
                              {
                                "id": "13",
                                "identExpr": { "name": "__result__" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "17",
                    "callExpr": {
                      "function": "_||_",
                      "args": [
                        { "id": "16", "identExpr": { "name": "__result__" } },
                        {
                          "id": "10",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              {
                                "id": "8",
                                "callExpr": {
                                  "function": "_/_",
                                  "args": [
                                    { "id": "7", "identExpr": { "name": "e" } },
                                    {
                                      "id": "9",
                                      "constExpr": { "int64Value": "0" }
                                    }
                                  ]
                                }
                              },
                              {
                                "id": "11",
                                "constExpr": { "int64Value": "17" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "18",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_empty",
            "expression": "[].exists(e, e == 2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": {
                  "1": 0,
                  "3": 10,
                  "4": 13,
                  "5": 15,
                  "6": 18,
                  "7": 9,
                  "8": 9,
                  "9": 9,
                  "10": 9,
                  "11": 9,
                  "12": 9,
                  "13": 9,
                  "14": 9
                },
                "macroCalls": {
                  "14": {
                    "callExpr": {
                      "target": { "id": "1", "listExpr": {} },
                      "function": "exists",
                      "args": [
                        { "id": "3", "identExpr": { "name": "e" } },
                        {
                          "id": "5",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "4", "identExpr": { "name": "e" } },
                              { "id": "6", "constExpr": { "int64Value": "2" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "14",
                "comprehensionExpr": {
                  "iterVar": "e",
                  "iterRange": { "id": "1", "listExpr": {} },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "7",
                    "constExpr": { "boolValue": false }
                  },
                  "loopCondition": {
                    "id": "10",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        {
                          "id": "9",
                          "callExpr": {
                            "function": "!_",
                            "args": [
                              {
                                "id": "8",
                                "identExpr": { "name": "__result__" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "12",
                    "callExpr": {
                      "function": "_||_",
                      "args": [
                        { "id": "11", "identExpr": { "name": "__result__" } },
                        {
                          "id": "5",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "4", "identExpr": { "name": "e" } },
                              { "id": "6", "constExpr": { "int64Value": "2" } }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "13",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "map_key",
            "expression": "{'key1':1, 'key2':2}.exists(k, k == 'key2')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": {
                  "1": 0,
                  "2": 7,
                  "3": 1,
                  "4": 8,
                  "5": 17,
                  "6": 11,
                  "7": 18,
                  "9": 28,
                  "10": 31,
                  "11": 33,
                  "12": 36,
                  "13": 27,
                  "14": 27,
                  "15": 27,
                  "16": 27,
                  "17": 27,
                  "18": 27,
                  "19": 27,
                  "20": 27
                },
                "macroCalls": {
                  "20": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "structExpr": {
                          "entries": [
                            {
                              "id": "2",
                              "mapKey": {
                                "id": "3",
                                "constExpr": { "stringValue": "key1" }
                              },
                              "value": {
                                "id": "4",
                                "constExpr": { "int64Value": "1" }
                              }
                            },
                            {
                              "id": "5",
                              "mapKey": {
                                "id": "6",
                                "constExpr": { "stringValue": "key2" }
                              },
                              "value": {
                                "id": "7",
                                "constExpr": { "int64Value": "2" }
                              }
                            }
                          ]
                        }
                      },
                      "function": "exists",
                      "args": [
                        { "id": "9", "identExpr": { "name": "k" } },
                        {
                          "id": "11",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "10", "identExpr": { "name": "k" } },
                              {
                                "id": "12",
                                "constExpr": { "stringValue": "key2" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "20",
                "comprehensionExpr": {
                  "iterVar": "k",
                  "iterRange": {
                    "id": "1",
                    "structExpr": {
                      "entries": [
                        {
                          "id": "2",
                          "mapKey": {
                            "id": "3",
                            "constExpr": { "stringValue": "key1" }
                          },
                          "value": {
                            "id": "4",
                            "constExpr": { "int64Value": "1" }
                          }
                        },
                        {
                          "id": "5",
                          "mapKey": {
                            "id": "6",
                            "constExpr": { "stringValue": "key2" }
                          },
                          "value": {
                            "id": "7",
                            "constExpr": { "int64Value": "2" }
                          }
                        }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "13",
                    "constExpr": { "boolValue": false }
                  },
                  "loopCondition": {
                    "id": "16",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        {
                          "id": "15",
                          "callExpr": {
                            "function": "!_",
                            "args": [
                              {
                                "id": "14",
                                "identExpr": { "name": "__result__" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "18",
                    "callExpr": {
                      "function": "_||_",
                      "args": [
                        { "id": "17", "identExpr": { "name": "__result__" } },
                        {
                          "id": "11",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "10", "identExpr": { "name": "k" } },
                              {
                                "id": "12",
                                "constExpr": { "stringValue": "key2" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "19",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "not_map_key",
            "expression": "!{'key1':1, 'key2':2}.exists(k, k == 'key3')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 8,
                  "4": 2,
                  "5": 9,
                  "6": 18,
                  "7": 12,
                  "8": 19,
                  "10": 29,
                  "11": 32,
                  "12": 34,
                  "13": 37,
                  "14": 28,
                  "15": 28,
                  "16": 28,
                  "17": 28,
                  "18": 28,
                  "19": 28,
                  "20": 28,
                  "21": 28
                },
                "macroCalls": {
                  "21": {
                    "callExpr": {
                      "target": {
                        "id": "2",
                        "structExpr": {
                          "entries": [
                            {
                              "id": "3",
                              "mapKey": {
                                "id": "4",
                                "constExpr": { "stringValue": "key1" }
                              },
                              "value": {
                                "id": "5",
                                "constExpr": { "int64Value": "1" }
                              }
                            },
                            {
                              "id": "6",
                              "mapKey": {
                                "id": "7",
                                "constExpr": { "stringValue": "key2" }
                              },
                              "value": {
                                "id": "8",
                                "constExpr": { "int64Value": "2" }
                              }
                            }
                          ]
                        }
                      },
                      "function": "exists",
                      "args": [
                        { "id": "10", "identExpr": { "name": "k" } },
                        {
                          "id": "12",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "11", "identExpr": { "name": "k" } },
                              {
                                "id": "13",
                                "constExpr": { "stringValue": "key3" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "!_",
                  "args": [
                    {
                      "id": "21",
                      "comprehensionExpr": {
                        "iterVar": "k",
                        "iterRange": {
                          "id": "2",
                          "structExpr": {
                            "entries": [
                              {
                                "id": "3",
                                "mapKey": {
                                  "id": "4",
                                  "constExpr": { "stringValue": "key1" }
                                },
                                "value": {
                                  "id": "5",
                                  "constExpr": { "int64Value": "1" }
                                }
                              },
                              {
                                "id": "6",
                                "mapKey": {
                                  "id": "7",
                                  "constExpr": { "stringValue": "key2" }
                                },
                                "value": {
                                  "id": "8",
                                  "constExpr": { "int64Value": "2" }
                                }
                              }
                            ]
                          }
                        },
                        "accuVar": "__result__",
                        "accuInit": {
                          "id": "14",
                          "constExpr": { "boolValue": false }
                        },
                        "loopCondition": {
                          "id": "17",
                          "callExpr": {
                            "function": "@not_strictly_false",
                            "args": [
                              {
                                "id": "16",
                                "callExpr": {
                                  "function": "!_",
                                  "args": [
                                    {
                                      "id": "15",
                                      "identExpr": { "name": "__result__" }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "loopStep": {
                          "id": "19",
                          "callExpr": {
                            "function": "_||_",
                            "args": [
                              {
                                "id": "18",
                                "identExpr": { "name": "__result__" }
                              },
                              {
                                "id": "12",
                                "callExpr": {
                                  "function": "_==_",
                                  "args": [
                                    {
                                      "id": "11",
                                      "identExpr": { "name": "k" }
                                    },
                                    {
                                      "id": "13",
                                      "constExpr": { "stringValue": "key3" }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "result": {
                          "id": "20",
                          "identExpr": { "name": "__result__" }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "map_key_type_shortcircuit",
            "expression": "{'key':1, 1:21}.exists(k, k != 2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": {
                  "1": 0,
                  "2": 6,
                  "3": 1,
                  "4": 7,
                  "5": 11,
                  "6": 10,
                  "7": 12,
                  "9": 23,
                  "10": 26,
                  "11": 28,
                  "12": 31,
                  "13": 22,
                  "14": 22,
                  "15": 22,
                  "16": 22,
                  "17": 22,
                  "18": 22,
                  "19": 22,
                  "20": 22
                },
                "macroCalls": {
                  "20": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "structExpr": {
                          "entries": [
                            {
                              "id": "2",
                              "mapKey": {
                                "id": "3",
                                "constExpr": { "stringValue": "key" }
                              },
                              "value": {
                                "id": "4",
                                "constExpr": { "int64Value": "1" }
                              }
                            },
                            {
                              "id": "5",
                              "mapKey": {
                                "id": "6",
                                "constExpr": { "int64Value": "1" }
                              },
                              "value": {
                                "id": "7",
                                "constExpr": { "int64Value": "21" }
                              }
                            }
                          ]
                        }
                      },
                      "function": "exists",
                      "args": [
                        { "id": "9", "identExpr": { "name": "k" } },
                        {
                          "id": "11",
                          "callExpr": {
                            "function": "_!=_",
                            "args": [
                              { "id": "10", "identExpr": { "name": "k" } },
                              { "id": "12", "constExpr": { "int64Value": "2" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "20",
                "comprehensionExpr": {
                  "iterVar": "k",
                  "iterRange": {
                    "id": "1",
                    "structExpr": {
                      "entries": [
                        {
                          "id": "2",
                          "mapKey": {
                            "id": "3",
                            "constExpr": { "stringValue": "key" }
                          },
                          "value": {
                            "id": "4",
                            "constExpr": { "int64Value": "1" }
                          }
                        },
                        {
                          "id": "5",
                          "mapKey": {
                            "id": "6",
                            "constExpr": { "int64Value": "1" }
                          },
                          "value": {
                            "id": "7",
                            "constExpr": { "int64Value": "21" }
                          }
                        }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "13",
                    "constExpr": { "boolValue": false }
                  },
                  "loopCondition": {
                    "id": "16",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        {
                          "id": "15",
                          "callExpr": {
                            "function": "!_",
                            "args": [
                              {
                                "id": "14",
                                "identExpr": { "name": "__result__" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "18",
                    "callExpr": {
                      "function": "_||_",
                      "args": [
                        { "id": "17", "identExpr": { "name": "__result__" } },
                        {
                          "id": "11",
                          "callExpr": {
                            "function": "_!=_",
                            "args": [
                              { "id": "10", "identExpr": { "name": "k" } },
                              { "id": "12", "constExpr": { "int64Value": "2" } }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "19",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "map_key_type_exhaustive",
            "expression": "!{'key':1, 1:42}.exists(k, k == 2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 7,
                  "4": 2,
                  "5": 8,
                  "6": 12,
                  "7": 11,
                  "8": 13,
                  "10": 24,
                  "11": 27,
                  "12": 29,
                  "13": 32,
                  "14": 23,
                  "15": 23,
                  "16": 23,
                  "17": 23,
                  "18": 23,
                  "19": 23,
                  "20": 23,
                  "21": 23
                },
                "macroCalls": {
                  "21": {
                    "callExpr": {
                      "target": {
                        "id": "2",
                        "structExpr": {
                          "entries": [
                            {
                              "id": "3",
                              "mapKey": {
                                "id": "4",
                                "constExpr": { "stringValue": "key" }
                              },
                              "value": {
                                "id": "5",
                                "constExpr": { "int64Value": "1" }
                              }
                            },
                            {
                              "id": "6",
                              "mapKey": {
                                "id": "7",
                                "constExpr": { "int64Value": "1" }
                              },
                              "value": {
                                "id": "8",
                                "constExpr": { "int64Value": "42" }
                              }
                            }
                          ]
                        }
                      },
                      "function": "exists",
                      "args": [
                        { "id": "10", "identExpr": { "name": "k" } },
                        {
                          "id": "12",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "11", "identExpr": { "name": "k" } },
                              { "id": "13", "constExpr": { "int64Value": "2" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "!_",
                  "args": [
                    {
                      "id": "21",
                      "comprehensionExpr": {
                        "iterVar": "k",
                        "iterRange": {
                          "id": "2",
                          "structExpr": {
                            "entries": [
                              {
                                "id": "3",
                                "mapKey": {
                                  "id": "4",
                                  "constExpr": { "stringValue": "key" }
                                },
                                "value": {
                                  "id": "5",
                                  "constExpr": { "int64Value": "1" }
                                }
                              },
                              {
                                "id": "6",
                                "mapKey": {
                                  "id": "7",
                                  "constExpr": { "int64Value": "1" }
                                },
                                "value": {
                                  "id": "8",
                                  "constExpr": { "int64Value": "42" }
                                }
                              }
                            ]
                          }
                        },
                        "accuVar": "__result__",
                        "accuInit": {
                          "id": "14",
                          "constExpr": { "boolValue": false }
                        },
                        "loopCondition": {
                          "id": "17",
                          "callExpr": {
                            "function": "@not_strictly_false",
                            "args": [
                              {
                                "id": "16",
                                "callExpr": {
                                  "function": "!_",
                                  "args": [
                                    {
                                      "id": "15",
                                      "identExpr": { "name": "__result__" }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "loopStep": {
                          "id": "19",
                          "callExpr": {
                            "function": "_||_",
                            "args": [
                              {
                                "id": "18",
                                "identExpr": { "name": "__result__" }
                              },
                              {
                                "id": "12",
                                "callExpr": {
                                  "function": "_==_",
                                  "args": [
                                    {
                                      "id": "11",
                                      "identExpr": { "name": "k" }
                                    },
                                    {
                                      "id": "13",
                                      "constExpr": { "int64Value": "2" }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "result": {
                          "id": "20",
                          "identExpr": { "name": "__result__" }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "all",
        "tests": [
          {
            "name": "list_elem_all_true",
            "expression": "[1, 2, 3].all(e, e \u003e 0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "6": 14,
                  "7": 17,
                  "8": 19,
                  "9": 21,
                  "10": 13,
                  "11": 13,
                  "12": 13,
                  "13": 13,
                  "14": 13,
                  "15": 13,
                  "16": 13
                },
                "macroCalls": {
                  "16": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "1" } },
                            { "id": "3", "constExpr": { "int64Value": "2" } },
                            { "id": "4", "constExpr": { "int64Value": "3" } }
                          ]
                        }
                      },
                      "function": "all",
                      "args": [
                        { "id": "6", "identExpr": { "name": "e" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              { "id": "9", "constExpr": { "int64Value": "0" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "16",
                "comprehensionExpr": {
                  "iterVar": "e",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "1" } },
                        { "id": "3", "constExpr": { "int64Value": "2" } },
                        { "id": "4", "constExpr": { "int64Value": "3" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "10",
                    "constExpr": { "boolValue": true }
                  },
                  "loopCondition": {
                    "id": "12",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        { "id": "11", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "14",
                    "callExpr": {
                      "function": "_\u0026\u0026_",
                      "args": [
                        { "id": "13", "identExpr": { "name": "__result__" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              { "id": "9", "constExpr": { "int64Value": "0" } }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "15",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_elem_some_true",
            "expression": "[1, 2, 3].all(e, e == 2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "6": 14,
                  "7": 17,
                  "8": 19,
                  "9": 22,
                  "10": 13,
                  "11": 13,
                  "12": 13,
                  "13": 13,
                  "14": 13,
                  "15": 13,
                  "16": 13
                },
                "macroCalls": {
                  "16": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "1" } },
                            { "id": "3", "constExpr": { "int64Value": "2" } },
                            { "id": "4", "constExpr": { "int64Value": "3" } }
                          ]
                        }
                      },
                      "function": "all",
                      "args": [
                        { "id": "6", "identExpr": { "name": "e" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              { "id": "9", "constExpr": { "int64Value": "2" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "16",
                "comprehensionExpr": {
                  "iterVar": "e",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "1" } },
                        { "id": "3", "constExpr": { "int64Value": "2" } },
                        { "id": "4", "constExpr": { "int64Value": "3" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "10",
                    "constExpr": { "boolValue": true }
                  },
                  "loopCondition": {
                    "id": "12",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        { "id": "11", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "14",
                    "callExpr": {
                      "function": "_\u0026\u0026_",
                      "args": [
                        { "id": "13", "identExpr": { "name": "__result__" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              { "id": "9", "constExpr": { "int64Value": "2" } }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "15",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_elem_none_true",
            "expression": "[1, 2, 3].all(e, e == 17)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "6": 14,
                  "7": 17,
                  "8": 19,
                  "9": 22,
                  "10": 13,
                  "11": 13,
                  "12": 13,
                  "13": 13,
                  "14": 13,
                  "15": 13,
                  "16": 13
                },
                "macroCalls": {
                  "16": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "1" } },
                            { "id": "3", "constExpr": { "int64Value": "2" } },
                            { "id": "4", "constExpr": { "int64Value": "3" } }
                          ]
                        }
                      },
                      "function": "all",
                      "args": [
                        { "id": "6", "identExpr": { "name": "e" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              { "id": "9", "constExpr": { "int64Value": "17" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "16",
                "comprehensionExpr": {
                  "iterVar": "e",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "1" } },
                        { "id": "3", "constExpr": { "int64Value": "2" } },
                        { "id": "4", "constExpr": { "int64Value": "3" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "10",
                    "constExpr": { "boolValue": true }
                  },
                  "loopCondition": {
                    "id": "12",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        { "id": "11", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "14",
                    "callExpr": {
                      "function": "_\u0026\u0026_",
                      "args": [
                        { "id": "13", "identExpr": { "name": "__result__" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              { "id": "9", "constExpr": { "int64Value": "17" } }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "15",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_elem_type_shortcircuit",
            "expression": "[1, 'foo', 3].all(e, e == 1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 11,
                  "6": 18,
                  "7": 21,
                  "8": 23,
                  "9": 26,
                  "10": 17,
                  "11": 17,
                  "12": 17,
                  "13": 17,
                  "14": 17,
                  "15": 17,
                  "16": 17
                },
                "macroCalls": {
                  "16": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "1" } },
                            {
                              "id": "3",
                              "constExpr": { "stringValue": "foo" }
                            },
                            { "id": "4", "constExpr": { "int64Value": "3" } }
                          ]
                        }
                      },
                      "function": "all",
                      "args": [
                        { "id": "6", "identExpr": { "name": "e" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              { "id": "9", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "16",
                "comprehensionExpr": {
                  "iterVar": "e",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "1" } },
                        { "id": "3", "constExpr": { "stringValue": "foo" } },
                        { "id": "4", "constExpr": { "int64Value": "3" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "10",
                    "constExpr": { "boolValue": true }
                  },
                  "loopCondition": {
                    "id": "12",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        { "id": "11", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "14",
                    "callExpr": {
                      "function": "_\u0026\u0026_",
                      "args": [
                        { "id": "13", "identExpr": { "name": "__result__" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              { "id": "9", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "15",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_elem_type_exhaustive",
            "expression": "[1, 'foo', 3].all(e, e % 2 == 1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 11,
                  "6": 18,
                  "7": 21,
                  "8": 23,
                  "9": 25,
                  "10": 27,
                  "11": 30,
                  "12": 17,
                  "13": 17,
                  "14": 17,
                  "15": 17,
                  "16": 17,
                  "17": 17,
                  "18": 17
                },
                "macroCalls": {
                  "18": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "1" } },
                            {
                              "id": "3",
                              "constExpr": { "stringValue": "foo" }
                            },
                            { "id": "4", "constExpr": { "int64Value": "3" } }
                          ]
                        }
                      },
                      "function": "all",
                      "args": [
                        { "id": "6", "identExpr": { "name": "e" } },
                        {
                          "id": "10",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              {
                                "id": "8",
                                "callExpr": {
                                  "function": "_%_",
                                  "args": [
                                    { "id": "7", "identExpr": { "name": "e" } },
                                    {
                                      "id": "9",
                                      "constExpr": { "int64Value": "2" }
                                    }
                                  ]
                                }
                              },
                              { "id": "11", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "18",
                "comprehensionExpr": {
                  "iterVar": "e",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "1" } },
                        { "id": "3", "constExpr": { "stringValue": "foo" } },
                        { "id": "4", "constExpr": { "int64Value": "3" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "12",
                    "constExpr": { "boolValue": true }
                  },
                  "loopCondition": {
                    "id": "14",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        { "id": "13", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "16",
                    "callExpr": {
                      "function": "_\u0026\u0026_",
                      "args": [
                        { "id": "15", "identExpr": { "name": "__result__" } },
                        {
                          "id": "10",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              {
                                "id": "8",
                                "callExpr": {
                                  "function": "_%_",
                                  "args": [
                                    { "id": "7", "identExpr": { "name": "e" } },
                                    {
                                      "id": "9",
                                      "constExpr": { "int64Value": "2" }
                                    }
                                  ]
                                }
                              },
                              { "id": "11", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "17",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_elem_error_shortcircuit",
            "expression": "[1, 2, 3].all(e, 6 / (2 - e) == 6)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "6": 14,
                  "7": 17,
                  "8": 19,
                  "9": 22,
                  "10": 24,
                  "11": 26,
                  "12": 29,
                  "13": 32,
                  "14": 13,
                  "15": 13,
                  "16": 13,
                  "17": 13,
                  "18": 13,
                  "19": 13,
                  "20": 13
                },
                "macroCalls": {
                  "20": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "1" } },
                            { "id": "3", "constExpr": { "int64Value": "2" } },
                            { "id": "4", "constExpr": { "int64Value": "3" } }
                          ]
                        }
                      },
                      "function": "all",
                      "args": [
                        { "id": "6", "identExpr": { "name": "e" } },
                        {
                          "id": "12",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              {
                                "id": "8",
                                "callExpr": {
                                  "function": "_/_",
                                  "args": [
                                    {
                                      "id": "7",
                                      "constExpr": { "int64Value": "6" }
                                    },
                                    {
                                      "id": "10",
                                      "callExpr": {
                                        "function": "_-_",
                                        "args": [
                                          {
                                            "id": "9",
                                            "constExpr": { "int64Value": "2" }
                                          },
                                          {
                                            "id": "11",
                                            "identExpr": { "name": "e" }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              { "id": "13", "constExpr": { "int64Value": "6" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "20",
                "comprehensionExpr": {
                  "iterVar": "e",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "1" } },
                        { "id": "3", "constExpr": { "int64Value": "2" } },
                        { "id": "4", "constExpr": { "int64Value": "3" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "14",
                    "constExpr": { "boolValue": true }
                  },
                  "loopCondition": {
                    "id": "16",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        { "id": "15", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "18",
                    "callExpr": {
                      "function": "_\u0026\u0026_",
                      "args": [
                        { "id": "17", "identExpr": { "name": "__result__" } },
                        {
                          "id": "12",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              {
                                "id": "8",
                                "callExpr": {
                                  "function": "_/_",
                                  "args": [
                                    {
                                      "id": "7",
                                      "constExpr": { "int64Value": "6" }
                                    },
                                    {
                                      "id": "10",
                                      "callExpr": {
                                        "function": "_-_",
                                        "args": [
                                          {
                                            "id": "9",
                                            "constExpr": { "int64Value": "2" }
                                          },
                                          {
                                            "id": "11",
                                            "identExpr": { "name": "e" }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              { "id": "13", "constExpr": { "int64Value": "6" } }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "19",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_elem_error_exhaustive",
            "expression": "[1, 2, 3].all(e, e / 0 != 17)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "6": 14,
                  "7": 17,
                  "8": 19,
                  "9": 21,
                  "10": 23,
                  "11": 26,
                  "12": 13,
                  "13": 13,
                  "14": 13,
                  "15": 13,
                  "16": 13,
                  "17": 13,
                  "18": 13
                },
                "macroCalls": {
                  "18": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "1" } },
                            { "id": "3", "constExpr": { "int64Value": "2" } },
                            { "id": "4", "constExpr": { "int64Value": "3" } }
                          ]
                        }
                      },
                      "function": "all",
                      "args": [
                        { "id": "6", "identExpr": { "name": "e" } },
                        {
                          "id": "10",
                          "callExpr": {
                            "function": "_!=_",
                            "args": [
                              {
                                "id": "8",
                                "callExpr": {
                                  "function": "_/_",
                                  "args": [
                                    { "id": "7", "identExpr": { "name": "e" } },
                                    {
                                      "id": "9",
                                      "constExpr": { "int64Value": "0" }
                                    }
                                  ]
                                }
                              },
                              {
                                "id": "11",
                                "constExpr": { "int64Value": "17" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "18",
                "comprehensionExpr": {
                  "iterVar": "e",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "1" } },
                        { "id": "3", "constExpr": { "int64Value": "2" } },
                        { "id": "4", "constExpr": { "int64Value": "3" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "12",
                    "constExpr": { "boolValue": true }
                  },
                  "loopCondition": {
                    "id": "14",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        { "id": "13", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "16",
                    "callExpr": {
                      "function": "_\u0026\u0026_",
                      "args": [
                        { "id": "15", "identExpr": { "name": "__result__" } },
                        {
                          "id": "10",
                          "callExpr": {
                            "function": "_!=_",
                            "args": [
                              {
                                "id": "8",
                                "callExpr": {
                                  "function": "_/_",
                                  "args": [
                                    { "id": "7", "identExpr": { "name": "e" } },
                                    {
                                      "id": "9",
                                      "constExpr": { "int64Value": "0" }
                                    }
                                  ]
                                }
                              },
                              {
                                "id": "11",
                                "constExpr": { "int64Value": "17" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "17",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_empty",
            "expression": "[].all(e, e \u003e 0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": {
                  "1": 0,
                  "3": 7,
                  "4": 10,
                  "5": 12,
                  "6": 14,
                  "7": 6,
                  "8": 6,
                  "9": 6,
                  "10": 6,
                  "11": 6,
                  "12": 6,
                  "13": 6
                },
                "macroCalls": {
                  "13": {
                    "callExpr": {
                      "target": { "id": "1", "listExpr": {} },
                      "function": "all",
                      "args": [
                        { "id": "3", "identExpr": { "name": "e" } },
                        {
                          "id": "5",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              { "id": "4", "identExpr": { "name": "e" } },
                              { "id": "6", "constExpr": { "int64Value": "0" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "13",
                "comprehensionExpr": {
                  "iterVar": "e",
                  "iterRange": { "id": "1", "listExpr": {} },
                  "accuVar": "__result__",
                  "accuInit": { "id": "7", "constExpr": { "boolValue": true } },
                  "loopCondition": {
                    "id": "9",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        { "id": "8", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "11",
                    "callExpr": {
                      "function": "_\u0026\u0026_",
                      "args": [
                        { "id": "10", "identExpr": { "name": "__result__" } },
                        {
                          "id": "5",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              { "id": "4", "identExpr": { "name": "e" } },
                              { "id": "6", "constExpr": { "int64Value": "0" } }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "12",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "map_key",
            "expression": "{'key1':1, 'key2':2}.all(k, k == 'key2')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": {
                  "1": 0,
                  "2": 7,
                  "3": 1,
                  "4": 8,
                  "5": 17,
                  "6": 11,
                  "7": 18,
                  "9": 25,
                  "10": 28,
                  "11": 30,
                  "12": 33,
                  "13": 24,
                  "14": 24,
                  "15": 24,
                  "16": 24,
                  "17": 24,
                  "18": 24,
                  "19": 24
                },
                "macroCalls": {
                  "19": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "structExpr": {
                          "entries": [
                            {
                              "id": "2",
                              "mapKey": {
                                "id": "3",
                                "constExpr": { "stringValue": "key1" }
                              },
                              "value": {
                                "id": "4",
                                "constExpr": { "int64Value": "1" }
                              }
                            },
                            {
                              "id": "5",
                              "mapKey": {
                                "id": "6",
                                "constExpr": { "stringValue": "key2" }
                              },
                              "value": {
                                "id": "7",
                                "constExpr": { "int64Value": "2" }
                              }
                            }
                          ]
                        }
                      },
                      "function": "all",
                      "args": [
                        { "id": "9", "identExpr": { "name": "k" } },
                        {
                          "id": "11",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "10", "identExpr": { "name": "k" } },
                              {
                                "id": "12",
                                "constExpr": { "stringValue": "key2" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "19",
                "comprehensionExpr": {
                  "iterVar": "k",
                  "iterRange": {
                    "id": "1",
                    "structExpr": {
                      "entries": [
                        {
                          "id": "2",
                          "mapKey": {
                            "id": "3",
                            "constExpr": { "stringValue": "key1" }
                          },
                          "value": {
                            "id": "4",
                            "constExpr": { "int64Value": "1" }
                          }
                        },
                        {
                          "id": "5",
                          "mapKey": {
                            "id": "6",
                            "constExpr": { "stringValue": "key2" }
                          },
                          "value": {
                            "id": "7",
                            "constExpr": { "int64Value": "2" }
                          }
                        }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "13",
                    "constExpr": { "boolValue": true }
                  },
                  "loopCondition": {
                    "id": "15",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        { "id": "14", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "17",
                    "callExpr": {
                      "function": "_\u0026\u0026_",
                      "args": [
                        { "id": "16", "identExpr": { "name": "__result__" } },
                        {
                          "id": "11",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "10", "identExpr": { "name": "k" } },
                              {
                                "id": "12",
                                "constExpr": { "stringValue": "key2" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "18",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          }
        ]
      },
      {
        "name": "exists_one",
        "tests": [
          {
            "name": "list_empty",
            "expression": "[].exists_one(a, a == 7)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": {
                  "1": 0,
                  "3": 14,
                  "4": 17,
                  "5": 19,
                  "6": 22,
                  "7": 13,
                  "8": 13,
                  "9": 13,
                  "10": 13,
                  "11": 13,
                  "12": 13,
                  "13": 13,
                  "14": 13,
                  "15": 13,
                  "16": 13,
                  "17": 13
                },
                "macroCalls": {
                  "17": {
                    "callExpr": {
                      "target": { "id": "1", "listExpr": {} },
                      "function": "exists_one",
                      "args": [
                        { "id": "3", "identExpr": { "name": "a" } },
                        {
                          "id": "5",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "4", "identExpr": { "name": "a" } },
                              { "id": "6", "constExpr": { "int64Value": "7" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "17",
                "comprehensionExpr": {
                  "iterVar": "a",
                  "iterRange": { "id": "1", "listExpr": {} },
                  "accuVar": "__result__",
                  "accuInit": { "id": "7", "constExpr": { "int64Value": "0" } },
                  "loopCondition": {
                    "id": "8",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "13",
                    "callExpr": {
                      "function": "_?_:_",
                      "args": [
                        {
                          "id": "5",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "4", "identExpr": { "name": "a" } },
                              { "id": "6", "constExpr": { "int64Value": "7" } }
                            ]
                          }
                        },
                        {
                          "id": "11",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              {
                                "id": "9",
                                "identExpr": { "name": "__result__" }
                              },
                              { "id": "10", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        },
                        { "id": "12", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "result": {
                    "id": "16",
                    "callExpr": {
                      "function": "_==_",
                      "args": [
                        { "id": "14", "identExpr": { "name": "__result__" } },
                        { "id": "15", "constExpr": { "int64Value": "1" } }
                      ]
                    }
                  }
                }
              }
            }
          },
          {
            "name": "list_one_true",
            "expression": "[7].exists_one(a, a == 7)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "4": 15,
                  "5": 18,
                  "6": 20,
                  "7": 23,
                  "8": 14,
                  "9": 14,
                  "10": 14,
                  "11": 14,
                  "12": 14,
                  "13": 14,
                  "14": 14,
                  "15": 14,
                  "16": 14,
                  "17": 14,
                  "18": 14
                },
                "macroCalls": {
                  "18": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "7" } }
                          ]
                        }
                      },
                      "function": "exists_one",
                      "args": [
                        { "id": "4", "identExpr": { "name": "a" } },
                        {
                          "id": "6",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "5", "identExpr": { "name": "a" } },
                              { "id": "7", "constExpr": { "int64Value": "7" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "18",
                "comprehensionExpr": {
                  "iterVar": "a",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "7" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": { "id": "8", "constExpr": { "int64Value": "0" } },
                  "loopCondition": {
                    "id": "9",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "14",
                    "callExpr": {
                      "function": "_?_:_",
                      "args": [
                        {
                          "id": "6",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "5", "identExpr": { "name": "a" } },
                              { "id": "7", "constExpr": { "int64Value": "7" } }
                            ]
                          }
                        },
                        {
                          "id": "12",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              {
                                "id": "10",
                                "identExpr": { "name": "__result__" }
                              },
                              { "id": "11", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        },
                        { "id": "13", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "result": {
                    "id": "17",
                    "callExpr": {
                      "function": "_==_",
                      "args": [
                        { "id": "15", "identExpr": { "name": "__result__" } },
                        { "id": "16", "constExpr": { "int64Value": "1" } }
                      ]
                    }
                  }
                }
              }
            }
          },
          {
            "name": "list_one_false",
            "expression": "[8].exists_one(a, a == 7)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "4": 15,
                  "5": 18,
                  "6": 20,
                  "7": 23,
                  "8": 14,
                  "9": 14,
                  "10": 14,
                  "11": 14,
                  "12": 14,
                  "13": 14,
                  "14": 14,
                  "15": 14,
                  "16": 14,
                  "17": 14,
                  "18": 14
                },
                "macroCalls": {
                  "18": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "8" } }
                          ]
                        }
                      },
                      "function": "exists_one",
                      "args": [
                        { "id": "4", "identExpr": { "name": "a" } },
                        {
                          "id": "6",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "5", "identExpr": { "name": "a" } },
                              { "id": "7", "constExpr": { "int64Value": "7" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "18",
                "comprehensionExpr": {
                  "iterVar": "a",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "8" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": { "id": "8", "constExpr": { "int64Value": "0" } },
                  "loopCondition": {
                    "id": "9",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "14",
                    "callExpr": {
                      "function": "_?_:_",
                      "args": [
                        {
                          "id": "6",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "5", "identExpr": { "name": "a" } },
                              { "id": "7", "constExpr": { "int64Value": "7" } }
                            ]
                          }
                        },
                        {
                          "id": "12",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              {
                                "id": "10",
                                "identExpr": { "name": "__result__" }
                              },
                              { "id": "11", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        },
                        { "id": "13", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "result": {
                    "id": "17",
                    "callExpr": {
                      "function": "_==_",
                      "args": [
                        { "id": "15", "identExpr": { "name": "__result__" } },
                        { "id": "16", "constExpr": { "int64Value": "1" } }
                      ]
                    }
                  }
                }
              }
            }
          },
          {
            "name": "list_none",
            "expression": "[1, 2, 3].exists_one(x, x \u003e 20)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "6": 21,
                  "7": 24,
                  "8": 26,
                  "9": 28,
                  "10": 20,
                  "11": 20,
                  "12": 20,
                  "13": 20,
                  "14": 20,
                  "15": 20,
                  "16": 20,
                  "17": 20,
                  "18": 20,
                  "19": 20,
                  "20": 20
                },
                "macroCalls": {
                  "20": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "1" } },
                            { "id": "3", "constExpr": { "int64Value": "2" } },
                            { "id": "4", "constExpr": { "int64Value": "3" } }
                          ]
                        }
                      },
                      "function": "exists_one",
                      "args": [
                        { "id": "6", "identExpr": { "name": "x" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "x" } },
                              { "id": "9", "constExpr": { "int64Value": "20" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "20",
                "comprehensionExpr": {
                  "iterVar": "x",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "1" } },
                        { "id": "3", "constExpr": { "int64Value": "2" } },
                        { "id": "4", "constExpr": { "int64Value": "3" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "10",
                    "constExpr": { "int64Value": "0" }
                  },
                  "loopCondition": {
                    "id": "11",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "16",
                    "callExpr": {
                      "function": "_?_:_",
                      "args": [
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "x" } },
                              { "id": "9", "constExpr": { "int64Value": "20" } }
                            ]
                          }
                        },
                        {
                          "id": "14",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              {
                                "id": "12",
                                "identExpr": { "name": "__result__" }
                              },
                              { "id": "13", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        },
                        { "id": "15", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "result": {
                    "id": "19",
                    "callExpr": {
                      "function": "_==_",
                      "args": [
                        { "id": "17", "identExpr": { "name": "__result__" } },
                        { "id": "18", "constExpr": { "int64Value": "1" } }
                      ]
                    }
                  }
                }
              }
            }
          },
          {
            "name": "list_one",
            "expression": "[6, 7, 8].exists_one(foo, foo % 5 == 2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "6": 21,
                  "7": 26,
                  "8": 30,
                  "9": 32,
                  "10": 34,
                  "11": 37,
                  "12": 20,
                  "13": 20,
                  "14": 20,
                  "15": 20,
                  "16": 20,
                  "17": 20,
                  "18": 20,
                  "19": 20,
                  "20": 20,
                  "21": 20,
                  "22": 20
                },
                "macroCalls": {
                  "22": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "6" } },
                            { "id": "3", "constExpr": { "int64Value": "7" } },
                            { "id": "4", "constExpr": { "int64Value": "8" } }
                          ]
                        }
                      },
                      "function": "exists_one",
                      "args": [
                        { "id": "6", "identExpr": { "name": "foo" } },
                        {
                          "id": "10",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              {
                                "id": "8",
                                "callExpr": {
                                  "function": "_%_",
                                  "args": [
                                    {
                                      "id": "7",
                                      "identExpr": { "name": "foo" }
                                    },
                                    {
                                      "id": "9",
                                      "constExpr": { "int64Value": "5" }
                                    }
                                  ]
                                }
                              },
                              { "id": "11", "constExpr": { "int64Value": "2" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "22",
                "comprehensionExpr": {
                  "iterVar": "foo",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "6" } },
                        { "id": "3", "constExpr": { "int64Value": "7" } },
                        { "id": "4", "constExpr": { "int64Value": "8" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "12",
                    "constExpr": { "int64Value": "0" }
                  },
                  "loopCondition": {
                    "id": "13",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "18",
                    "callExpr": {
                      "function": "_?_:_",
                      "args": [
                        {
                          "id": "10",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              {
                                "id": "8",
                                "callExpr": {
                                  "function": "_%_",
                                  "args": [
                                    {
                                      "id": "7",
                                      "identExpr": { "name": "foo" }
                                    },
                                    {
                                      "id": "9",
                                      "constExpr": { "int64Value": "5" }
                                    }
                                  ]
                                }
                              },
                              { "id": "11", "constExpr": { "int64Value": "2" } }
                            ]
                          }
                        },
                        {
                          "id": "16",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              {
                                "id": "14",
                                "identExpr": { "name": "__result__" }
                              },
                              { "id": "15", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        },
                        { "id": "17", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "result": {
                    "id": "21",
                    "callExpr": {
                      "function": "_==_",
                      "args": [
                        { "id": "19", "identExpr": { "name": "__result__" } },
                        { "id": "20", "constExpr": { "int64Value": "1" } }
                      ]
                    }
                  }
                }
              }
            }
          },
          {
            "name": "list_many",
            "expression": "[0, 1, 2, 3, 4].exists_one(n, n % 2 == 1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "5": 10,
                  "6": 13,
                  "8": 27,
                  "9": 30,
                  "10": 32,
                  "11": 34,
                  "12": 36,
                  "13": 39,
                  "14": 26,
                  "15": 26,
                  "16": 26,
                  "17": 26,
                  "18": 26,
                  "19": 26,
                  "20": 26,
                  "21": 26,
                  "22": 26,
                  "23": 26,
                  "24": 26
                },
                "macroCalls": {
                  "24": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "0" } },
                            { "id": "3", "constExpr": { "int64Value": "1" } },
                            { "id": "4", "constExpr": { "int64Value": "2" } },
                            { "id": "5", "constExpr": { "int64Value": "3" } },
                            { "id": "6", "constExpr": { "int64Value": "4" } }
                          ]
                        }
                      },
                      "function": "exists_one",
                      "args": [
                        { "id": "8", "identExpr": { "name": "n" } },
                        {
                          "id": "12",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              {
                                "id": "10",
                                "callExpr": {
                                  "function": "_%_",
                                  "args": [
                                    { "id": "9", "identExpr": { "name": "n" } },
                                    {
                                      "id": "11",
                                      "constExpr": { "int64Value": "2" }
                                    }
                                  ]
                                }
                              },
                              { "id": "13", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "24",
                "comprehensionExpr": {
                  "iterVar": "n",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "0" } },
                        { "id": "3", "constExpr": { "int64Value": "1" } },
                        { "id": "4", "constExpr": { "int64Value": "2" } },
                        { "id": "5", "constExpr": { "int64Value": "3" } },
                        { "id": "6", "constExpr": { "int64Value": "4" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "14",
                    "constExpr": { "int64Value": "0" }
                  },
                  "loopCondition": {
                    "id": "15",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "20",
                    "callExpr": {
                      "function": "_?_:_",
                      "args": [
                        {
                          "id": "12",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              {
                                "id": "10",
                                "callExpr": {
                                  "function": "_%_",
                                  "args": [
                                    { "id": "9", "identExpr": { "name": "n" } },
                                    {
                                      "id": "11",
                                      "constExpr": { "int64Value": "2" }
                                    }
                                  ]
                                }
                              },
                              { "id": "13", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        },
                        {
                          "id": "18",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              {
                                "id": "16",
                                "identExpr": { "name": "__result__" }
                              },
                              { "id": "17", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        },
                        { "id": "19", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "result": {
                    "id": "23",
                    "callExpr": {
                      "function": "_==_",
                      "args": [
                        { "id": "21", "identExpr": { "name": "__result__" } },
                        { "id": "22", "constExpr": { "int64Value": "1" } }
                      ]
                    }
                  }
                }
              }
            }
          },
          {
            "name": "list_all",
            "expression": "['foal', 'foo', 'four'].exists_one(n, n.startsWith('fo'))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [58],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 9,
                  "4": 16,
                  "6": 35,
                  "7": 38,
                  "8": 50,
                  "9": 51,
                  "10": 34,
                  "11": 34,
                  "12": 34,
                  "13": 34,
                  "14": 34,
                  "15": 34,
                  "16": 34,
                  "17": 34,
                  "18": 34,
                  "19": 34,
                  "20": 34
                },
                "macroCalls": {
                  "20": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            {
                              "id": "2",
                              "constExpr": { "stringValue": "foal" }
                            },
                            {
                              "id": "3",
                              "constExpr": { "stringValue": "foo" }
                            },
                            {
                              "id": "4",
                              "constExpr": { "stringValue": "four" }
                            }
                          ]
                        }
                      },
                      "function": "exists_one",
                      "args": [
                        { "id": "6", "identExpr": { "name": "n" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "target": {
                              "id": "7",
                              "identExpr": { "name": "n" }
                            },
                            "function": "startsWith",
                            "args": [
                              {
                                "id": "9",
                                "constExpr": { "stringValue": "fo" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "20",
                "comprehensionExpr": {
                  "iterVar": "n",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "stringValue": "foal" } },
                        { "id": "3", "constExpr": { "stringValue": "foo" } },
                        { "id": "4", "constExpr": { "stringValue": "four" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "10",
                    "constExpr": { "int64Value": "0" }
                  },
                  "loopCondition": {
                    "id": "11",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "16",
                    "callExpr": {
                      "function": "_?_:_",
                      "args": [
                        {
                          "id": "8",
                          "callExpr": {
                            "target": {
                              "id": "7",
                              "identExpr": { "name": "n" }
                            },
                            "function": "startsWith",
                            "args": [
                              {
                                "id": "9",
                                "constExpr": { "stringValue": "fo" }
                              }
                            ]
                          }
                        },
                        {
                          "id": "14",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              {
                                "id": "12",
                                "identExpr": { "name": "__result__" }
                              },
                              { "id": "13", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        },
                        { "id": "15", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "result": {
                    "id": "19",
                    "callExpr": {
                      "function": "_==_",
                      "args": [
                        { "id": "17", "identExpr": { "name": "__result__" } },
                        { "id": "18", "constExpr": { "int64Value": "1" } }
                      ]
                    }
                  }
                }
              }
            }
          },
          {
            "name": "list_no_shortcircuit",
            "expression": "[3, 2, 1, 0].exists_one(n, 12 / n \u003e 1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "5": 10,
                  "7": 24,
                  "8": 27,
                  "9": 30,
                  "10": 32,
                  "11": 34,
                  "12": 36,
                  "13": 23,
                  "14": 23,
                  "15": 23,
                  "16": 23,
                  "17": 23,
                  "18": 23,
                  "19": 23,
                  "20": 23,
                  "21": 23,
                  "22": 23,
                  "23": 23
                },
                "macroCalls": {
                  "23": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "3" } },
                            { "id": "3", "constExpr": { "int64Value": "2" } },
                            { "id": "4", "constExpr": { "int64Value": "1" } },
                            { "id": "5", "constExpr": { "int64Value": "0" } }
                          ]
                        }
                      },
                      "function": "exists_one",
                      "args": [
                        { "id": "7", "identExpr": { "name": "n" } },
                        {
                          "id": "11",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              {
                                "id": "9",
                                "callExpr": {
                                  "function": "_/_",
                                  "args": [
                                    {
                                      "id": "8",
                                      "constExpr": { "int64Value": "12" }
                                    },
                                    { "id": "10", "identExpr": { "name": "n" } }
                                  ]
                                }
                              },
                              { "id": "12", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "23",
                "comprehensionExpr": {
                  "iterVar": "n",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "3" } },
                        { "id": "3", "constExpr": { "int64Value": "2" } },
                        { "id": "4", "constExpr": { "int64Value": "1" } },
                        { "id": "5", "constExpr": { "int64Value": "0" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "13",
                    "constExpr": { "int64Value": "0" }
                  },
                  "loopCondition": {
                    "id": "14",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "19",
                    "callExpr": {
                      "function": "_?_:_",
                      "args": [
                        {
                          "id": "11",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              {
                                "id": "9",
                                "callExpr": {
                                  "function": "_/_",
                                  "args": [
                                    {
                                      "id": "8",
                                      "constExpr": { "int64Value": "12" }
                                    },
                                    { "id": "10", "identExpr": { "name": "n" } }
                                  ]
                                }
                              },
                              { "id": "12", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        },
                        {
                          "id": "17",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              {
                                "id": "15",
                                "identExpr": { "name": "__result__" }
                              },
                              { "id": "16", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        },
                        { "id": "18", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "result": {
                    "id": "22",
                    "callExpr": {
                      "function": "_==_",
                      "args": [
                        { "id": "20", "identExpr": { "name": "__result__" } },
                        { "id": "21", "constExpr": { "int64Value": "1" } }
                      ]
                    }
                  }
                }
              }
            }
          },
          {
            "name": "map_one",
            "expression": "{6: 'six', 7: 'seven', 8: 'eight'}.exists_one(foo, foo % 5 == 2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [65],
                "positions": {
                  "1": 0,
                  "2": 2,
                  "3": 1,
                  "4": 4,
                  "5": 12,
                  "6": 11,
                  "7": 14,
                  "8": 24,
                  "9": 23,
                  "10": 26,
                  "12": 46,
                  "13": 51,
                  "14": 55,
                  "15": 57,
                  "16": 59,
                  "17": 62,
                  "18": 45,
                  "19": 45,
                  "20": 45,
                  "21": 45,
                  "22": 45,
                  "23": 45,
                  "24": 45,
                  "25": 45,
                  "26": 45,
                  "27": 45,
                  "28": 45
                },
                "macroCalls": {
                  "28": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "structExpr": {
                          "entries": [
                            {
                              "id": "2",
                              "mapKey": {
                                "id": "3",
                                "constExpr": { "int64Value": "6" }
                              },
                              "value": {
                                "id": "4",
                                "constExpr": { "stringValue": "six" }
                              }
                            },
                            {
                              "id": "5",
                              "mapKey": {
                                "id": "6",
                                "constExpr": { "int64Value": "7" }
                              },
                              "value": {
                                "id": "7",
                                "constExpr": { "stringValue": "seven" }
                              }
                            },
                            {
                              "id": "8",
                              "mapKey": {
                                "id": "9",
                                "constExpr": { "int64Value": "8" }
                              },
                              "value": {
                                "id": "10",
                                "constExpr": { "stringValue": "eight" }
                              }
                            }
                          ]
                        }
                      },
                      "function": "exists_one",
                      "args": [
                        { "id": "12", "identExpr": { "name": "foo" } },
                        {
                          "id": "16",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              {
                                "id": "14",
                                "callExpr": {
                                  "function": "_%_",
                                  "args": [
                                    {
                                      "id": "13",
                                      "identExpr": { "name": "foo" }
                                    },
                                    {
                                      "id": "15",
                                      "constExpr": { "int64Value": "5" }
                                    }
                                  ]
                                }
                              },
                              { "id": "17", "constExpr": { "int64Value": "2" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "28",
                "comprehensionExpr": {
                  "iterVar": "foo",
                  "iterRange": {
                    "id": "1",
                    "structExpr": {
                      "entries": [
                        {
                          "id": "2",
                          "mapKey": {
                            "id": "3",
                            "constExpr": { "int64Value": "6" }
                          },
                          "value": {
                            "id": "4",
                            "constExpr": { "stringValue": "six" }
                          }
                        },
                        {
                          "id": "5",
                          "mapKey": {
                            "id": "6",
                            "constExpr": { "int64Value": "7" }
                          },
                          "value": {
                            "id": "7",
                            "constExpr": { "stringValue": "seven" }
                          }
                        },
                        {
                          "id": "8",
                          "mapKey": {
                            "id": "9",
                            "constExpr": { "int64Value": "8" }
                          },
                          "value": {
                            "id": "10",
                            "constExpr": { "stringValue": "eight" }
                          }
                        }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "18",
                    "constExpr": { "int64Value": "0" }
                  },
                  "loopCondition": {
                    "id": "19",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "24",
                    "callExpr": {
                      "function": "_?_:_",
                      "args": [
                        {
                          "id": "16",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              {
                                "id": "14",
                                "callExpr": {
                                  "function": "_%_",
                                  "args": [
                                    {
                                      "id": "13",
                                      "identExpr": { "name": "foo" }
                                    },
                                    {
                                      "id": "15",
                                      "constExpr": { "int64Value": "5" }
                                    }
                                  ]
                                }
                              },
                              { "id": "17", "constExpr": { "int64Value": "2" } }
                            ]
                          }
                        },
                        {
                          "id": "22",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              {
                                "id": "20",
                                "identExpr": { "name": "__result__" }
                              },
                              { "id": "21", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        },
                        { "id": "23", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "result": {
                    "id": "27",
                    "callExpr": {
                      "function": "_==_",
                      "args": [
                        { "id": "25", "identExpr": { "name": "__result__" } },
                        { "id": "26", "constExpr": { "int64Value": "1" } }
                      ]
                    }
                  }
                }
              }
            }
          }
        ]
      },
      {
        "name": "map",
        "tests": [
          {
            "name": "list_empty",
            "expression": "[].map(n, n / 2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": {
                  "1": 0,
                  "3": 7,
                  "4": 10,
                  "5": 12,
                  "6": 14,
                  "7": 6,
                  "8": 6,
                  "9": 6,
                  "10": 6,
                  "11": 6,
                  "12": 6,
                  "13": 6
                },
                "macroCalls": {
                  "13": {
                    "callExpr": {
                      "target": { "id": "1", "listExpr": {} },
                      "function": "map",
                      "args": [
                        { "id": "3", "identExpr": { "name": "n" } },
                        {
                          "id": "5",
                          "callExpr": {
                            "function": "_/_",
                            "args": [
                              { "id": "4", "identExpr": { "name": "n" } },
                              { "id": "6", "constExpr": { "int64Value": "2" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "13",
                "comprehensionExpr": {
                  "iterVar": "n",
                  "iterRange": { "id": "1", "listExpr": {} },
                  "accuVar": "__result__",
                  "accuInit": { "id": "7", "listExpr": {} },
                  "loopCondition": {
                    "id": "8",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "11",
                    "callExpr": {
                      "function": "_+_",
                      "args": [
                        { "id": "9", "identExpr": { "name": "__result__" } },
                        {
                          "id": "10",
                          "listExpr": {
                            "elements": [
                              {
                                "id": "5",
                                "callExpr": {
                                  "function": "_/_",
                                  "args": [
                                    { "id": "4", "identExpr": { "name": "n" } },
                                    {
                                      "id": "6",
                                      "constExpr": { "int64Value": "2" }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "12",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_one",
            "expression": "[3].map(n, n * n)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "4": 8,
                  "5": 11,
                  "6": 13,
                  "7": 15,
                  "8": 7,
                  "9": 7,
                  "10": 7,
                  "11": 7,
                  "12": 7,
                  "13": 7,
                  "14": 7
                },
                "macroCalls": {
                  "14": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "3" } }
                          ]
                        }
                      },
                      "function": "map",
                      "args": [
                        { "id": "4", "identExpr": { "name": "n" } },
                        {
                          "id": "6",
                          "callExpr": {
                            "function": "_*_",
                            "args": [
                              { "id": "5", "identExpr": { "name": "n" } },
                              { "id": "7", "identExpr": { "name": "n" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "14",
                "comprehensionExpr": {
                  "iterVar": "n",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "3" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": { "id": "8", "listExpr": {} },
                  "loopCondition": {
                    "id": "9",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "12",
                    "callExpr": {
                      "function": "_+_",
                      "args": [
                        { "id": "10", "identExpr": { "name": "__result__" } },
                        {
                          "id": "11",
                          "listExpr": {
                            "elements": [
                              {
                                "id": "6",
                                "callExpr": {
                                  "function": "_*_",
                                  "args": [
                                    { "id": "5", "identExpr": { "name": "n" } },
                                    { "id": "7", "identExpr": { "name": "n" } }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "13",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_many",
            "expression": "[2, 4, 6].map(n, n / 2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "6": 14,
                  "7": 17,
                  "8": 19,
                  "9": 21,
                  "10": 13,
                  "11": 13,
                  "12": 13,
                  "13": 13,
                  "14": 13,
                  "15": 13,
                  "16": 13
                },
                "macroCalls": {
                  "16": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "2" } },
                            { "id": "3", "constExpr": { "int64Value": "4" } },
                            { "id": "4", "constExpr": { "int64Value": "6" } }
                          ]
                        }
                      },
                      "function": "map",
                      "args": [
                        { "id": "6", "identExpr": { "name": "n" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_/_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "n" } },
                              { "id": "9", "constExpr": { "int64Value": "2" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "16",
                "comprehensionExpr": {
                  "iterVar": "n",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "2" } },
                        { "id": "3", "constExpr": { "int64Value": "4" } },
                        { "id": "4", "constExpr": { "int64Value": "6" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": { "id": "10", "listExpr": {} },
                  "loopCondition": {
                    "id": "11",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "14",
                    "callExpr": {
                      "function": "_+_",
                      "args": [
                        { "id": "12", "identExpr": { "name": "__result__" } },
                        {
                          "id": "13",
                          "listExpr": {
                            "elements": [
                              {
                                "id": "8",
                                "callExpr": {
                                  "function": "_/_",
                                  "args": [
                                    { "id": "7", "identExpr": { "name": "n" } },
                                    {
                                      "id": "9",
                                      "constExpr": { "int64Value": "2" }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "15",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_error",
            "expression": "[2, 1, 0].map(n, 4 / n)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "6": 14,
                  "7": 17,
                  "8": 19,
                  "9": 21,
                  "10": 13,
                  "11": 13,
                  "12": 13,
                  "13": 13,
                  "14": 13,
                  "15": 13,
                  "16": 13
                },
                "macroCalls": {
                  "16": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "2" } },
                            { "id": "3", "constExpr": { "int64Value": "1" } },
                            { "id": "4", "constExpr": { "int64Value": "0" } }
                          ]
                        }
                      },
                      "function": "map",
                      "args": [
                        { "id": "6", "identExpr": { "name": "n" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_/_",
                            "args": [
                              { "id": "7", "constExpr": { "int64Value": "4" } },
                              { "id": "9", "identExpr": { "name": "n" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "16",
                "comprehensionExpr": {
                  "iterVar": "n",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "2" } },
                        { "id": "3", "constExpr": { "int64Value": "1" } },
                        { "id": "4", "constExpr": { "int64Value": "0" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": { "id": "10", "listExpr": {} },
                  "loopCondition": {
                    "id": "11",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "14",
                    "callExpr": {
                      "function": "_+_",
                      "args": [
                        { "id": "12", "identExpr": { "name": "__result__" } },
                        {
                          "id": "13",
                          "listExpr": {
                            "elements": [
                              {
                                "id": "8",
                                "callExpr": {
                                  "function": "_/_",
                                  "args": [
                                    {
                                      "id": "7",
                                      "constExpr": { "int64Value": "4" }
                                    },
                                    { "id": "9", "identExpr": { "name": "n" } }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "15",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "map_extract_keys",
            "expression": "{'John': 'smart'}.map(key, key) == ['John']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": {
                  "1": 0,
                  "2": 7,
                  "3": 1,
                  "4": 9,
                  "6": 22,
                  "7": 27,
                  "8": 21,
                  "9": 21,
                  "10": 21,
                  "11": 21,
                  "12": 21,
                  "13": 21,
                  "14": 21,
                  "15": 32,
                  "16": 35,
                  "17": 36
                },
                "macroCalls": {
                  "14": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "structExpr": {
                          "entries": [
                            {
                              "id": "2",
                              "mapKey": {
                                "id": "3",
                                "constExpr": { "stringValue": "John" }
                              },
                              "value": {
                                "id": "4",
                                "constExpr": { "stringValue": "smart" }
                              }
                            }
                          ]
                        }
                      },
                      "function": "map",
                      "args": [
                        { "id": "6", "identExpr": { "name": "key" } },
                        { "id": "7", "identExpr": { "name": "key" } }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "15",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "14",
                      "comprehensionExpr": {
                        "iterVar": "key",
                        "iterRange": {
                          "id": "1",
                          "structExpr": {
                            "entries": [
                              {
                                "id": "2",
                                "mapKey": {
                                  "id": "3",
                                  "constExpr": { "stringValue": "John" }
                                },
                                "value": {
                                  "id": "4",
                                  "constExpr": { "stringValue": "smart" }
                                }
                              }
                            ]
                          }
                        },
                        "accuVar": "__result__",
                        "accuInit": { "id": "8", "listExpr": {} },
                        "loopCondition": {
                          "id": "9",
                          "constExpr": { "boolValue": true }
                        },
                        "loopStep": {
                          "id": "12",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              {
                                "id": "10",
                                "identExpr": { "name": "__result__" }
                              },
                              {
                                "id": "11",
                                "listExpr": {
                                  "elements": [
                                    {
                                      "id": "7",
                                      "identExpr": { "name": "key" }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "result": {
                          "id": "13",
                          "identExpr": { "name": "__result__" }
                        }
                      }
                    },
                    {
                      "id": "16",
                      "listExpr": {
                        "elements": [
                          { "id": "17", "constExpr": { "stringValue": "John" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "filter",
        "tests": [
          {
            "name": "list_empty",
            "expression": "[].filter(n, n % 2 == 0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": {
                  "1": 0,
                  "3": 10,
                  "4": 13,
                  "5": 15,
                  "6": 17,
                  "7": 19,
                  "8": 22,
                  "9": 9,
                  "10": 9,
                  "11": 9,
                  "12": 9,
                  "13": 9,
                  "14": 9,
                  "15": 9,
                  "16": 9,
                  "17": 9
                },
                "macroCalls": {
                  "17": {
                    "callExpr": {
                      "target": { "id": "1", "listExpr": {} },
                      "function": "filter",
                      "args": [
                        { "id": "3", "identExpr": { "name": "n" } },
                        {
                          "id": "7",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              {
                                "id": "5",
                                "callExpr": {
                                  "function": "_%_",
                                  "args": [
                                    { "id": "4", "identExpr": { "name": "n" } },
                                    {
                                      "id": "6",
                                      "constExpr": { "int64Value": "2" }
                                    }
                                  ]
                                }
                              },
                              { "id": "8", "constExpr": { "int64Value": "0" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "17",
                "comprehensionExpr": {
                  "iterVar": "n",
                  "iterRange": { "id": "1", "listExpr": {} },
                  "accuVar": "__result__",
                  "accuInit": { "id": "9", "listExpr": {} },
                  "loopCondition": {
                    "id": "10",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "15",
                    "callExpr": {
                      "function": "_?_:_",
                      "args": [
                        {
                          "id": "7",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              {
                                "id": "5",
                                "callExpr": {
                                  "function": "_%_",
                                  "args": [
                                    { "id": "4", "identExpr": { "name": "n" } },
                                    {
                                      "id": "6",
                                      "constExpr": { "int64Value": "2" }
                                    }
                                  ]
                                }
                              },
                              { "id": "8", "constExpr": { "int64Value": "0" } }
                            ]
                          }
                        },
                        {
                          "id": "13",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              {
                                "id": "11",
                                "identExpr": { "name": "__result__" }
                              },
                              {
                                "id": "12",
                                "listExpr": {
                                  "elements": [
                                    { "id": "3", "identExpr": { "name": "n" } }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        { "id": "14", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "result": {
                    "id": "16",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_one_true",
            "expression": "[2].filter(n, n == 2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "4": 11,
                  "5": 14,
                  "6": 16,
                  "7": 19,
                  "8": 10,
                  "9": 10,
                  "10": 10,
                  "11": 10,
                  "12": 10,
                  "13": 10,
                  "14": 10,
                  "15": 10,
                  "16": 10
                },
                "macroCalls": {
                  "16": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "2" } }
                          ]
                        }
                      },
                      "function": "filter",
                      "args": [
                        { "id": "4", "identExpr": { "name": "n" } },
                        {
                          "id": "6",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "5", "identExpr": { "name": "n" } },
                              { "id": "7", "constExpr": { "int64Value": "2" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "16",
                "comprehensionExpr": {
                  "iterVar": "n",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "2" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": { "id": "8", "listExpr": {} },
                  "loopCondition": {
                    "id": "9",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "14",
                    "callExpr": {
                      "function": "_?_:_",
                      "args": [
                        {
                          "id": "6",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "5", "identExpr": { "name": "n" } },
                              { "id": "7", "constExpr": { "int64Value": "2" } }
                            ]
                          }
                        },
                        {
                          "id": "12",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              {
                                "id": "10",
                                "identExpr": { "name": "__result__" }
                              },
                              {
                                "id": "11",
                                "listExpr": {
                                  "elements": [
                                    { "id": "4", "identExpr": { "name": "n" } }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        { "id": "13", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "result": {
                    "id": "15",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_one_false",
            "expression": "[1].filter(n, n \u003e 3)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "4": 11,
                  "5": 14,
                  "6": 16,
                  "7": 18,
                  "8": 10,
                  "9": 10,
                  "10": 10,
                  "11": 10,
                  "12": 10,
                  "13": 10,
                  "14": 10,
                  "15": 10,
                  "16": 10
                },
                "macroCalls": {
                  "16": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "1" } }
                          ]
                        }
                      },
                      "function": "filter",
                      "args": [
                        { "id": "4", "identExpr": { "name": "n" } },
                        {
                          "id": "6",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              { "id": "5", "identExpr": { "name": "n" } },
                              { "id": "7", "constExpr": { "int64Value": "3" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "16",
                "comprehensionExpr": {
                  "iterVar": "n",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "1" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": { "id": "8", "listExpr": {} },
                  "loopCondition": {
                    "id": "9",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "14",
                    "callExpr": {
                      "function": "_?_:_",
                      "args": [
                        {
                          "id": "6",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              { "id": "5", "identExpr": { "name": "n" } },
                              { "id": "7", "constExpr": { "int64Value": "3" } }
                            ]
                          }
                        },
                        {
                          "id": "12",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              {
                                "id": "10",
                                "identExpr": { "name": "__result__" }
                              },
                              {
                                "id": "11",
                                "listExpr": {
                                  "elements": [
                                    { "id": "4", "identExpr": { "name": "n" } }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        { "id": "13", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "result": {
                    "id": "15",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_none",
            "expression": "[1, 2, 3].filter(e, e \u003e 3)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "6": 17,
                  "7": 20,
                  "8": 22,
                  "9": 24,
                  "10": 16,
                  "11": 16,
                  "12": 16,
                  "13": 16,
                  "14": 16,
                  "15": 16,
                  "16": 16,
                  "17": 16,
                  "18": 16
                },
                "macroCalls": {
                  "18": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "1" } },
                            { "id": "3", "constExpr": { "int64Value": "2" } },
                            { "id": "4", "constExpr": { "int64Value": "3" } }
                          ]
                        }
                      },
                      "function": "filter",
                      "args": [
                        { "id": "6", "identExpr": { "name": "e" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              { "id": "9", "constExpr": { "int64Value": "3" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "18",
                "comprehensionExpr": {
                  "iterVar": "e",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "1" } },
                        { "id": "3", "constExpr": { "int64Value": "2" } },
                        { "id": "4", "constExpr": { "int64Value": "3" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": { "id": "10", "listExpr": {} },
                  "loopCondition": {
                    "id": "11",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "16",
                    "callExpr": {
                      "function": "_?_:_",
                      "args": [
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "e" } },
                              { "id": "9", "constExpr": { "int64Value": "3" } }
                            ]
                          }
                        },
                        {
                          "id": "14",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              {
                                "id": "12",
                                "identExpr": { "name": "__result__" }
                              },
                              {
                                "id": "13",
                                "listExpr": {
                                  "elements": [
                                    { "id": "6", "identExpr": { "name": "e" } }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        { "id": "15", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "result": {
                    "id": "17",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_some",
            "expression": "[0, 1, 2, 3, 4].filter(x, x % 2 == 1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "5": 10,
                  "6": 13,
                  "8": 23,
                  "9": 26,
                  "10": 28,
                  "11": 30,
                  "12": 32,
                  "13": 35,
                  "14": 22,
                  "15": 22,
                  "16": 22,
                  "17": 22,
                  "18": 22,
                  "19": 22,
                  "20": 22,
                  "21": 22,
                  "22": 22
                },
                "macroCalls": {
                  "22": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "0" } },
                            { "id": "3", "constExpr": { "int64Value": "1" } },
                            { "id": "4", "constExpr": { "int64Value": "2" } },
                            { "id": "5", "constExpr": { "int64Value": "3" } },
                            { "id": "6", "constExpr": { "int64Value": "4" } }
                          ]
                        }
                      },
                      "function": "filter",
                      "args": [
                        { "id": "8", "identExpr": { "name": "x" } },
                        {
                          "id": "12",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              {
                                "id": "10",
                                "callExpr": {
                                  "function": "_%_",
                                  "args": [
                                    { "id": "9", "identExpr": { "name": "x" } },
                                    {
                                      "id": "11",
                                      "constExpr": { "int64Value": "2" }
                                    }
                                  ]
                                }
                              },
                              { "id": "13", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "22",
                "comprehensionExpr": {
                  "iterVar": "x",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "0" } },
                        { "id": "3", "constExpr": { "int64Value": "1" } },
                        { "id": "4", "constExpr": { "int64Value": "2" } },
                        { "id": "5", "constExpr": { "int64Value": "3" } },
                        { "id": "6", "constExpr": { "int64Value": "4" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": { "id": "14", "listExpr": {} },
                  "loopCondition": {
                    "id": "15",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "20",
                    "callExpr": {
                      "function": "_?_:_",
                      "args": [
                        {
                          "id": "12",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              {
                                "id": "10",
                                "callExpr": {
                                  "function": "_%_",
                                  "args": [
                                    { "id": "9", "identExpr": { "name": "x" } },
                                    {
                                      "id": "11",
                                      "constExpr": { "int64Value": "2" }
                                    }
                                  ]
                                }
                              },
                              { "id": "13", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        },
                        {
                          "id": "18",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              {
                                "id": "16",
                                "identExpr": { "name": "__result__" }
                              },
                              {
                                "id": "17",
                                "listExpr": {
                                  "elements": [
                                    { "id": "8", "identExpr": { "name": "x" } }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        { "id": "19", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "result": {
                    "id": "21",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_all",
            "expression": "[1, 2, 3].filter(n, n \u003e 0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "6": 17,
                  "7": 20,
                  "8": 22,
                  "9": 24,
                  "10": 16,
                  "11": 16,
                  "12": 16,
                  "13": 16,
                  "14": 16,
                  "15": 16,
                  "16": 16,
                  "17": 16,
                  "18": 16
                },
                "macroCalls": {
                  "18": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "1" } },
                            { "id": "3", "constExpr": { "int64Value": "2" } },
                            { "id": "4", "constExpr": { "int64Value": "3" } }
                          ]
                        }
                      },
                      "function": "filter",
                      "args": [
                        { "id": "6", "identExpr": { "name": "n" } },
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "n" } },
                              { "id": "9", "constExpr": { "int64Value": "0" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "18",
                "comprehensionExpr": {
                  "iterVar": "n",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "1" } },
                        { "id": "3", "constExpr": { "int64Value": "2" } },
                        { "id": "4", "constExpr": { "int64Value": "3" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": { "id": "10", "listExpr": {} },
                  "loopCondition": {
                    "id": "11",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "16",
                    "callExpr": {
                      "function": "_?_:_",
                      "args": [
                        {
                          "id": "8",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              { "id": "7", "identExpr": { "name": "n" } },
                              { "id": "9", "constExpr": { "int64Value": "0" } }
                            ]
                          }
                        },
                        {
                          "id": "14",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              {
                                "id": "12",
                                "identExpr": { "name": "__result__" }
                              },
                              {
                                "id": "13",
                                "listExpr": {
                                  "elements": [
                                    { "id": "6", "identExpr": { "name": "n" } }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        { "id": "15", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "result": {
                    "id": "17",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "list_no_shortcircuit",
            "expression": "[3, 2, 1, 0].filter(n, 12 / n \u003e 4)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "5": 10,
                  "7": 20,
                  "8": 23,
                  "9": 26,
                  "10": 28,
                  "11": 30,
                  "12": 32,
                  "13": 19,
                  "14": 19,
                  "15": 19,
                  "16": 19,
                  "17": 19,
                  "18": 19,
                  "19": 19,
                  "20": 19,
                  "21": 19
                },
                "macroCalls": {
                  "21": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            { "id": "2", "constExpr": { "int64Value": "3" } },
                            { "id": "3", "constExpr": { "int64Value": "2" } },
                            { "id": "4", "constExpr": { "int64Value": "1" } },
                            { "id": "5", "constExpr": { "int64Value": "0" } }
                          ]
                        }
                      },
                      "function": "filter",
                      "args": [
                        { "id": "7", "identExpr": { "name": "n" } },
                        {
                          "id": "11",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              {
                                "id": "9",
                                "callExpr": {
                                  "function": "_/_",
                                  "args": [
                                    {
                                      "id": "8",
                                      "constExpr": { "int64Value": "12" }
                                    },
                                    { "id": "10", "identExpr": { "name": "n" } }
                                  ]
                                }
                              },
                              { "id": "12", "constExpr": { "int64Value": "4" } }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "21",
                "comprehensionExpr": {
                  "iterVar": "n",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "int64Value": "3" } },
                        { "id": "3", "constExpr": { "int64Value": "2" } },
                        { "id": "4", "constExpr": { "int64Value": "1" } },
                        { "id": "5", "constExpr": { "int64Value": "0" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": { "id": "13", "listExpr": {} },
                  "loopCondition": {
                    "id": "14",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "19",
                    "callExpr": {
                      "function": "_?_:_",
                      "args": [
                        {
                          "id": "11",
                          "callExpr": {
                            "function": "_\u003e_",
                            "args": [
                              {
                                "id": "9",
                                "callExpr": {
                                  "function": "_/_",
                                  "args": [
                                    {
                                      "id": "8",
                                      "constExpr": { "int64Value": "12" }
                                    },
                                    { "id": "10", "identExpr": { "name": "n" } }
                                  ]
                                }
                              },
                              { "id": "12", "constExpr": { "int64Value": "4" } }
                            ]
                          }
                        },
                        {
                          "id": "17",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              {
                                "id": "15",
                                "identExpr": { "name": "__result__" }
                              },
                              {
                                "id": "16",
                                "listExpr": {
                                  "elements": [
                                    { "id": "7", "identExpr": { "name": "n" } }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        { "id": "18", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "result": {
                    "id": "20",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "map_filter_keys",
            "expression": "{'John': 'smart', 'Paul': 'cute', 'George': 'quiet', 'Ringo': 'funny'}.filter(key, key == 'Ringo') == ['Ringo']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [112],
                "positions": {
                  "1": 0,
                  "2": 7,
                  "3": 1,
                  "4": 9,
                  "5": 24,
                  "6": 18,
                  "7": 26,
                  "8": 42,
                  "9": 34,
                  "10": 44,
                  "11": 60,
                  "12": 53,
                  "13": 62,
                  "15": 78,
                  "16": 83,
                  "17": 87,
                  "18": 90,
                  "19": 77,
                  "20": 77,
                  "21": 77,
                  "22": 77,
                  "23": 77,
                  "24": 77,
                  "25": 77,
                  "26": 77,
                  "27": 77,
                  "28": 99,
                  "29": 102,
                  "30": 103
                },
                "macroCalls": {
                  "27": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "structExpr": {
                          "entries": [
                            {
                              "id": "2",
                              "mapKey": {
                                "id": "3",
                                "constExpr": { "stringValue": "John" }
                              },
                              "value": {
                                "id": "4",
                                "constExpr": { "stringValue": "smart" }
                              }
                            },
                            {
                              "id": "5",
                              "mapKey": {
                                "id": "6",
                                "constExpr": { "stringValue": "Paul" }
                              },
                              "value": {
                                "id": "7",
                                "constExpr": { "stringValue": "cute" }
                              }
                            },
                            {
                              "id": "8",
                              "mapKey": {
                                "id": "9",
                                "constExpr": { "stringValue": "George" }
                              },
                              "value": {
                                "id": "10",
                                "constExpr": { "stringValue": "quiet" }
                              }
                            },
                            {
                              "id": "11",
                              "mapKey": {
                                "id": "12",
                                "constExpr": { "stringValue": "Ringo" }
                              },
                              "value": {
                                "id": "13",
                                "constExpr": { "stringValue": "funny" }
                              }
                            }
                          ]
                        }
                      },
                      "function": "filter",
                      "args": [
                        { "id": "15", "identExpr": { "name": "key" } },
                        {
                          "id": "17",
                          "callExpr": {
                            "function": "_==_",
                            "args": [
                              { "id": "16", "identExpr": { "name": "key" } },
                              {
                                "id": "18",
                                "constExpr": { "stringValue": "Ringo" }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "28",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "27",
                      "comprehensionExpr": {
                        "iterVar": "key",
                        "iterRange": {
                          "id": "1",
                          "structExpr": {
                            "entries": [
                              {
                                "id": "2",
                                "mapKey": {
                                  "id": "3",
                                  "constExpr": { "stringValue": "John" }
                                },
                                "value": {
                                  "id": "4",
                                  "constExpr": { "stringValue": "smart" }
                                }
                              },
                              {
                                "id": "5",
                                "mapKey": {
                                  "id": "6",
                                  "constExpr": { "stringValue": "Paul" }
                                },
                                "value": {
                                  "id": "7",
                                  "constExpr": { "stringValue": "cute" }
                                }
                              },
                              {
                                "id": "8",
                                "mapKey": {
                                  "id": "9",
                                  "constExpr": { "stringValue": "George" }
                                },
                                "value": {
                                  "id": "10",
                                  "constExpr": { "stringValue": "quiet" }
                                }
                              },
                              {
                                "id": "11",
                                "mapKey": {
                                  "id": "12",
                                  "constExpr": { "stringValue": "Ringo" }
                                },
                                "value": {
                                  "id": "13",
                                  "constExpr": { "stringValue": "funny" }
                                }
                              }
                            ]
                          }
                        },
                        "accuVar": "__result__",
                        "accuInit": { "id": "19", "listExpr": {} },
                        "loopCondition": {
                          "id": "20",
                          "constExpr": { "boolValue": true }
                        },
                        "loopStep": {
                          "id": "25",
                          "callExpr": {
                            "function": "_?_:_",
                            "args": [
                              {
                                "id": "17",
                                "callExpr": {
                                  "function": "_==_",
                                  "args": [
                                    {
                                      "id": "16",
                                      "identExpr": { "name": "key" }
                                    },
                                    {
                                      "id": "18",
                                      "constExpr": { "stringValue": "Ringo" }
                                    }
                                  ]
                                }
                              },
                              {
                                "id": "23",
                                "callExpr": {
                                  "function": "_+_",
                                  "args": [
                                    {
                                      "id": "21",
                                      "identExpr": { "name": "__result__" }
                                    },
                                    {
                                      "id": "22",
                                      "listExpr": {
                                        "elements": [
                                          {
                                            "id": "15",
                                            "identExpr": { "name": "key" }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "id": "24",
                                "identExpr": { "name": "__result__" }
                              }
                            ]
                          }
                        },
                        "result": {
                          "id": "26",
                          "identExpr": { "name": "__result__" }
                        }
                      }
                    },
                    {
                      "id": "29",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "30",
                            "constExpr": { "stringValue": "Ringo" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "nested",
        "tests": [
          {
            "name": "filter_all",
            "expression": "['signer'].filter(signer, ['artifact'].all(artifact, true))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [60],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "4": 18,
                  "5": 26,
                  "6": 27,
                  "8": 43,
                  "9": 53,
                  "10": 42,
                  "11": 42,
                  "12": 42,
                  "13": 42,
                  "14": 42,
                  "15": 42,
                  "16": 42,
                  "17": 17,
                  "18": 17,
                  "19": 17,
                  "20": 17,
                  "21": 17,
                  "22": 17,
                  "23": 17,
                  "24": 17,
                  "25": 17
                },
                "macroCalls": {
                  "16": {
                    "callExpr": {
                      "target": {
                        "id": "5",
                        "listExpr": {
                          "elements": [
                            {
                              "id": "6",
                              "constExpr": { "stringValue": "artifact" }
                            }
                          ]
                        }
                      },
                      "function": "all",
                      "args": [
                        { "id": "8", "identExpr": { "name": "artifact" } },
                        { "id": "9", "constExpr": { "boolValue": true } }
                      ]
                    }
                  },
                  "25": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            {
                              "id": "2",
                              "constExpr": { "stringValue": "signer" }
                            }
                          ]
                        }
                      },
                      "function": "filter",
                      "args": [
                        { "id": "4", "identExpr": { "name": "signer" } },
                        { "id": "16" }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "25",
                "comprehensionExpr": {
                  "iterVar": "signer",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "stringValue": "signer" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": { "id": "17", "listExpr": {} },
                  "loopCondition": {
                    "id": "18",
                    "constExpr": { "boolValue": true }
                  },
                  "loopStep": {
                    "id": "23",
                    "callExpr": {
                      "function": "_?_:_",
                      "args": [
                        {
                          "id": "16",
                          "comprehensionExpr": {
                            "iterVar": "artifact",
                            "iterRange": {
                              "id": "5",
                              "listExpr": {
                                "elements": [
                                  {
                                    "id": "6",
                                    "constExpr": { "stringValue": "artifact" }
                                  }
                                ]
                              }
                            },
                            "accuVar": "__result__",
                            "accuInit": {
                              "id": "10",
                              "constExpr": { "boolValue": true }
                            },
                            "loopCondition": {
                              "id": "12",
                              "callExpr": {
                                "function": "@not_strictly_false",
                                "args": [
                                  {
                                    "id": "11",
                                    "identExpr": { "name": "__result__" }
                                  }
                                ]
                              }
                            },
                            "loopStep": {
                              "id": "14",
                              "callExpr": {
                                "function": "_\u0026\u0026_",
                                "args": [
                                  {
                                    "id": "13",
                                    "identExpr": { "name": "__result__" }
                                  },
                                  {
                                    "id": "9",
                                    "constExpr": { "boolValue": true }
                                  }
                                ]
                              }
                            },
                            "result": {
                              "id": "15",
                              "identExpr": { "name": "__result__" }
                            }
                          }
                        },
                        {
                          "id": "21",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              {
                                "id": "19",
                                "identExpr": { "name": "__result__" }
                              },
                              {
                                "id": "20",
                                "listExpr": {
                                  "elements": [
                                    {
                                      "id": "4",
                                      "identExpr": { "name": "signer" }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        { "id": "22", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "result": {
                    "id": "24",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          },
          {
            "name": "all_all",
            "expression": "['signer'].all(signer, ['artifact'].all(artifact, true))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [57],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "4": 15,
                  "5": 23,
                  "6": 24,
                  "8": 40,
                  "9": 50,
                  "10": 39,
                  "11": 39,
                  "12": 39,
                  "13": 39,
                  "14": 39,
                  "15": 39,
                  "16": 39,
                  "17": 14,
                  "18": 14,
                  "19": 14,
                  "20": 14,
                  "21": 14,
                  "22": 14,
                  "23": 14
                },
                "macroCalls": {
                  "16": {
                    "callExpr": {
                      "target": {
                        "id": "5",
                        "listExpr": {
                          "elements": [
                            {
                              "id": "6",
                              "constExpr": { "stringValue": "artifact" }
                            }
                          ]
                        }
                      },
                      "function": "all",
                      "args": [
                        { "id": "8", "identExpr": { "name": "artifact" } },
                        { "id": "9", "constExpr": { "boolValue": true } }
                      ]
                    }
                  },
                  "23": {
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "listExpr": {
                          "elements": [
                            {
                              "id": "2",
                              "constExpr": { "stringValue": "signer" }
                            }
                          ]
                        }
                      },
                      "function": "all",
                      "args": [
                        { "id": "4", "identExpr": { "name": "signer" } },
                        { "id": "16" }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "23",
                "comprehensionExpr": {
                  "iterVar": "signer",
                  "iterRange": {
                    "id": "1",
                    "listExpr": {
                      "elements": [
                        { "id": "2", "constExpr": { "stringValue": "signer" } }
                      ]
                    }
                  },
                  "accuVar": "__result__",
                  "accuInit": {
                    "id": "17",
                    "constExpr": { "boolValue": true }
                  },
                  "loopCondition": {
                    "id": "19",
                    "callExpr": {
                      "function": "@not_strictly_false",
                      "args": [
                        { "id": "18", "identExpr": { "name": "__result__" } }
                      ]
                    }
                  },
                  "loopStep": {
                    "id": "21",
                    "callExpr": {
                      "function": "_\u0026\u0026_",
                      "args": [
                        { "id": "20", "identExpr": { "name": "__result__" } },
                        {
                          "id": "16",
                          "comprehensionExpr": {
                            "iterVar": "artifact",
                            "iterRange": {
                              "id": "5",
                              "listExpr": {
                                "elements": [
                                  {
                                    "id": "6",
                                    "constExpr": { "stringValue": "artifact" }
                                  }
                                ]
                              }
                            },
                            "accuVar": "__result__",
                            "accuInit": {
                              "id": "10",
                              "constExpr": { "boolValue": true }
                            },
                            "loopCondition": {
                              "id": "12",
                              "callExpr": {
                                "function": "@not_strictly_false",
                                "args": [
                                  {
                                    "id": "11",
                                    "identExpr": { "name": "__result__" }
                                  }
                                ]
                              }
                            },
                            "loopStep": {
                              "id": "14",
                              "callExpr": {
                                "function": "_\u0026\u0026_",
                                "args": [
                                  {
                                    "id": "13",
                                    "identExpr": { "name": "__result__" }
                                  },
                                  {
                                    "id": "9",
                                    "constExpr": { "boolValue": true }
                                  }
                                ]
                              }
                            },
                            "result": {
                              "id": "15",
                              "identExpr": { "name": "__result__" }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "result": {
                    "id": "22",
                    "identExpr": { "name": "__result__" }
                  }
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "math_ext",
    "sections": [
      {
        "name": "greatest_int_result",
        "tests": [
          {
            "name": "unary_negative",
            "expression": "math.greatest(-5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 13, "3": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [{ "id": "3", "constExpr": { "int64Value": "-5" } }]
                }
              }
            }
          },
          {
            "name": "unary_positive",
            "expression": "math.greatest(5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 13, "3": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [{ "id": "3", "constExpr": { "int64Value": "5" } }]
                }
              }
            }
          },
          {
            "name": "binary_same_args",
            "expression": "math.greatest(1, 1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "1" } },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_with_decimal",
            "expression": "math.greatest(1, 1.0) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 17,
                  "5": 22,
                  "6": 25
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_with_uint",
            "expression": "math.greatest(1, 1u) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 17,
                  "5": 21,
                  "6": 24
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_first_arg_greater",
            "expression": "math.greatest(3, -3)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "3" } },
                    { "id": "4", "constExpr": { "int64Value": "-3" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_second_arg_greater",
            "expression": "math.greatest(-7, 5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 18 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "-7" } },
                    { "id": "4", "constExpr": { "int64Value": "5" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_first_arg_int_max",
            "expression": "math.greatest(9223372036854775807, 1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 35 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    {
                      "id": "3",
                      "constExpr": { "int64Value": "9223372036854775807" }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_second_arg_int_max",
            "expression": "math.greatest(1, 9223372036854775807)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "1" } },
                    {
                      "id": "4",
                      "constExpr": { "int64Value": "9223372036854775807" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_first_arg_int_min",
            "expression": "math.greatest(-9223372036854775808, 1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 36 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    {
                      "id": "3",
                      "constExpr": { "int64Value": "-9223372036854775808" }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_second_arg_int_min",
            "expression": "math.greatest(1, -9223372036854775808)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "1" } },
                    {
                      "id": "4",
                      "constExpr": { "int64Value": "-9223372036854775808" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_same_args",
            "expression": "math.greatest(1, 1, 1) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 17,
                  "5": 20,
                  "6": 23,
                  "7": 26
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_with_decimal",
            "expression": "math.greatest(1, 1.0, 1.0) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 17,
                  "5": 22,
                  "6": 27,
                  "7": 30
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "doubleValue": 1 } },
                          { "id": "5", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_with_uint",
            "expression": "math.greatest(1, 1u, 1u) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 17,
                  "5": 21,
                  "6": 25,
                  "7": 28
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "uint64Value": "1" } },
                          { "id": "5", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_first_arg_greatest",
            "expression": "math.greatest(10, 1, 3) == 10",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 18,
                  "5": 21,
                  "6": 24,
                  "7": 27
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "10" } },
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "10" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_third_arg_greatest",
            "expression": "math.greatest(1, 3, 10) == 10",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 17,
                  "5": 20,
                  "6": 24,
                  "7": 27
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "int64Value": "3" } },
                          { "id": "5", "constExpr": { "int64Value": "10" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "10" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_with_negatives",
            "expression": "math.greatest(-1, -2, -3) == -1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 18,
                  "5": 22,
                  "6": 26,
                  "7": 29
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "-1" } },
                          { "id": "4", "constExpr": { "int64Value": "-2" } },
                          { "id": "5", "constExpr": { "int64Value": "-3" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_int_max",
            "expression": "math.greatest(9223372036854775807, 1, 5) == 9223372036854775807",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [64],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 35,
                  "5": 38,
                  "6": 41,
                  "7": 44
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "int64Value": "9223372036854775807" }
                          },
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "5" } }
                        ]
                      }
                    },
                    {
                      "id": "7",
                      "constExpr": { "int64Value": "9223372036854775807" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_int_min",
            "expression": "math.greatest(-9223372036854775807, -1, -5) == -1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 36,
                  "5": 40,
                  "6": 44,
                  "7": 47
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": {
                              "int64Value": "-9223372036854775807"
                            }
                          },
                          { "id": "4", "constExpr": { "int64Value": "-1" } },
                          { "id": "5", "constExpr": { "int64Value": "-5" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "quaternary_mixed",
            "expression": "math.greatest(5.4, 10, 3u, -5.0, 9223372036854775807) == 9223372036854775807",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [77],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 19,
                  "5": 23,
                  "6": 27,
                  "7": 33,
                  "8": 54,
                  "9": 57
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 5.4 } },
                          { "id": "4", "constExpr": { "int64Value": "10" } },
                          { "id": "5", "constExpr": { "uint64Value": "3" } },
                          { "id": "6", "constExpr": { "doubleValue": -5 } },
                          {
                            "id": "7",
                            "constExpr": { "int64Value": "9223372036854775807" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "constExpr": { "int64Value": "9223372036854775807" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "quaternary_mixed_array",
            "expression": "math.greatest([5.4, 10, 3u, -5.0, 3.5]) == 10",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 15,
                  "5": 20,
                  "6": 24,
                  "7": 28,
                  "8": 34,
                  "9": 40,
                  "10": 43
                }
              },
              "expr": {
                "id": "9",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "constExpr": { "doubleValue": 5.4 }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "10" }
                                },
                                {
                                  "id": "6",
                                  "constExpr": { "uint64Value": "3" }
                                },
                                {
                                  "id": "7",
                                  "constExpr": { "doubleValue": -5 }
                                },
                                {
                                  "id": "8",
                                  "constExpr": { "doubleValue": 3.5 }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    { "id": "10", "constExpr": { "int64Value": "10" } }
                  ]
                }
              }
            }
          },
          {
            "name": "quaternary_mixed_dyn_array",
            "expression": "math.greatest([dyn(5.4), dyn(10), dyn(3u), dyn(-5.0), dyn(3.5)]) == 10",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [71],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 18,
                  "5": 19,
                  "6": 28,
                  "7": 29,
                  "8": 37,
                  "9": 38,
                  "10": 46,
                  "11": 47,
                  "12": 57,
                  "13": 58,
                  "14": 65,
                  "15": 68
                }
              },
              "expr": {
                "id": "14",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "5",
                                        "constExpr": { "doubleValue": 5.4 }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "6",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "7",
                                        "constExpr": { "int64Value": "10" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "8",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "9",
                                        "constExpr": { "uint64Value": "3" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "10",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "11",
                                        "constExpr": { "doubleValue": -5 }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "12",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "13",
                                        "constExpr": { "doubleValue": 3.5 }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    { "id": "15", "constExpr": { "int64Value": "10" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "greatest_double_result",
        "tests": [
          {
            "name": "unary_negative",
            "expression": "math.greatest(-5.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 13, "3": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": -5 } }]
                }
              }
            }
          },
          {
            "name": "unary_positive",
            "expression": "math.greatest(5.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 0, "2": 13, "3": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": 5 } }]
                }
              }
            }
          },
          {
            "name": "binary_same_args",
            "expression": "math.greatest(1.0, 1.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 19 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    { "id": "3", "constExpr": { "doubleValue": 1 } },
                    { "id": "4", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_with_int",
            "expression": "math.greatest(1.0, 1) == 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 19,
                  "5": 22,
                  "6": 25
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 1 } },
                          { "id": "4", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_with_uint",
            "expression": "math.greatest(1.0, 1u) == 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 19,
                  "5": 23,
                  "6": 26
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 1 } },
                          { "id": "4", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_first_arg_greater",
            "expression": "math.greatest(5.0, -7.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 19 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    { "id": "3", "constExpr": { "doubleValue": 5 } },
                    { "id": "4", "constExpr": { "doubleValue": -7 } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_second_arg_greater",
            "expression": "math.greatest(-3.0, 3.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 20 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    { "id": "3", "constExpr": { "doubleValue": -3 } },
                    { "id": "4", "constExpr": { "doubleValue": 3 } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_first_arg_double_max",
            "expression": "math.greatest(1.797693e308, 1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 28 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    { "id": "3", "constExpr": { "doubleValue": 1.797693e308 } },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_second_arg_double_max",
            "expression": "math.greatest(1, 1.797693e308)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "1" } },
                    { "id": "4", "constExpr": { "doubleValue": 1.797693e308 } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_first_arg_double_min",
            "expression": "math.greatest(-1.797693e308, 1.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 29 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    {
                      "id": "3",
                      "constExpr": { "doubleValue": -1.797693e308 }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1.5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_second_arg_double_min",
            "expression": "math.greatest(1.5, -1.797693e308)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 19 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    { "id": "3", "constExpr": { "doubleValue": 1.5 } },
                    { "id": "4", "constExpr": { "doubleValue": -1.797693e308 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_same_args",
            "expression": "math.greatest(1.0, 1.0, 1.0) == 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 19,
                  "5": 24,
                  "6": 29,
                  "7": 32
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 1 } },
                          { "id": "4", "constExpr": { "doubleValue": 1 } },
                          { "id": "5", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_with_int",
            "expression": "math.greatest(1.0, 1, 1) == 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 19,
                  "5": 22,
                  "6": 25,
                  "7": 28
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 1 } },
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_with_uint",
            "expression": "math.greatest(1.0, 1u, 1u) == 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 19,
                  "5": 23,
                  "6": 27,
                  "7": 30
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 1 } },
                          { "id": "4", "constExpr": { "uint64Value": "1" } },
                          { "id": "5", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_first_arg_greatest",
            "expression": "math.greatest(10.5, 1.5, 3.5) == 10.5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 20,
                  "5": 25,
                  "6": 30,
                  "7": 33
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 10.5 } },
                          { "id": "4", "constExpr": { "doubleValue": 1.5 } },
                          { "id": "5", "constExpr": { "doubleValue": 3.5 } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "doubleValue": 10.5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_third_arg_greatest",
            "expression": "math.greatest(1.5, 3.5, 10.5) == 10.5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 19,
                  "5": 24,
                  "6": 30,
                  "7": 33
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 1.5 } },
                          { "id": "4", "constExpr": { "doubleValue": 3.5 } },
                          { "id": "5", "constExpr": { "doubleValue": 10.5 } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "doubleValue": 10.5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_with_negatives",
            "expression": "math.greatest(-1.5, -2.5, -3.5) == -1.5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 20,
                  "5": 26,
                  "6": 32,
                  "7": 35
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": -1.5 } },
                          { "id": "4", "constExpr": { "doubleValue": -2.5 } },
                          { "id": "5", "constExpr": { "doubleValue": -3.5 } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "doubleValue": -1.5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_double_max",
            "expression": "math.greatest(1.797693e308, 1, 5) == 1.797693e308",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 28,
                  "5": 31,
                  "6": 34,
                  "7": 37
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "doubleValue": 1.797693e308 }
                          },
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "5" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "doubleValue": 1.797693e308 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_double_min",
            "expression": "math.greatest(-1.797693e308, -1, -5) == -1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [43],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 29,
                  "5": 33,
                  "6": 37,
                  "7": 40
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "doubleValue": -1.797693e308 }
                          },
                          { "id": "4", "constExpr": { "int64Value": "-1" } },
                          { "id": "5", "constExpr": { "int64Value": "-5" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "quaternary_mixed",
            "expression": "math.greatest(5.4, 10, 3u, -5.0, 1.797693e308) == 1.797693e308",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [63],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 19,
                  "5": 23,
                  "6": 27,
                  "7": 33,
                  "8": 47,
                  "9": 50
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 5.4 } },
                          { "id": "4", "constExpr": { "int64Value": "10" } },
                          { "id": "5", "constExpr": { "uint64Value": "3" } },
                          { "id": "6", "constExpr": { "doubleValue": -5 } },
                          {
                            "id": "7",
                            "constExpr": { "doubleValue": 1.797693e308 }
                          }
                        ]
                      }
                    },
                    { "id": "9", "constExpr": { "doubleValue": 1.797693e308 } }
                  ]
                }
              }
            }
          },
          {
            "name": "quaternary_mixed_array",
            "expression": "math.greatest([5.4, 10.5, 3u, -5.0, 3.5]) == 10.5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 15,
                  "5": 20,
                  "6": 26,
                  "7": 30,
                  "8": 36,
                  "9": 42,
                  "10": 45
                }
              },
              "expr": {
                "id": "9",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "constExpr": { "doubleValue": 5.4 }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "doubleValue": 10.5 }
                                },
                                {
                                  "id": "6",
                                  "constExpr": { "uint64Value": "3" }
                                },
                                {
                                  "id": "7",
                                  "constExpr": { "doubleValue": -5 }
                                },
                                {
                                  "id": "8",
                                  "constExpr": { "doubleValue": 3.5 }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    { "id": "10", "constExpr": { "doubleValue": 10.5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "quaternary_mixed_dyn_array",
            "expression": "math.greatest([dyn(5.4), dyn(10.5), dyn(3u), dyn(-5.0), dyn(3.5)]) == 10.5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [75],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 18,
                  "5": 19,
                  "6": 28,
                  "7": 29,
                  "8": 39,
                  "9": 40,
                  "10": 48,
                  "11": 49,
                  "12": 59,
                  "13": 60,
                  "14": 67,
                  "15": 70
                }
              },
              "expr": {
                "id": "14",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "5",
                                        "constExpr": { "doubleValue": 5.4 }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "6",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "7",
                                        "constExpr": { "doubleValue": 10.5 }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "8",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "9",
                                        "constExpr": { "uint64Value": "3" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "10",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "11",
                                        "constExpr": { "doubleValue": -5 }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "12",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "13",
                                        "constExpr": { "doubleValue": 3.5 }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    { "id": "15", "constExpr": { "doubleValue": 10.5 } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "greatest_uint_result",
        "tests": [
          {
            "name": "unary",
            "expression": "math.greatest(5u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 13, "3": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [{ "id": "3", "constExpr": { "uint64Value": "5" } }]
                }
              }
            }
          },
          {
            "name": "binary_same_args",
            "expression": "math.greatest(1u, 1u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 18 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    { "id": "3", "constExpr": { "uint64Value": "1" } },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_with_decimal",
            "expression": "math.greatest(1u, 1.0) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 18,
                  "5": 23,
                  "6": 26
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "uint64Value": "1" } },
                          { "id": "4", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_with_int",
            "expression": "math.greatest(1u, 1) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 18,
                  "5": 21,
                  "6": 24
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "uint64Value": "1" } },
                          { "id": "4", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_first_arg_greater",
            "expression": "math.greatest(5u, -7)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 18 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    { "id": "3", "constExpr": { "uint64Value": "5" } },
                    { "id": "4", "constExpr": { "int64Value": "-7" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_second_arg_greater",
            "expression": "math.greatest(-3, 3u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 18 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "-3" } },
                    { "id": "4", "constExpr": { "uint64Value": "3" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_first_arg_uint_max",
            "expression": "math.greatest(18446744073709551615u, 1u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 37 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    {
                      "id": "3",
                      "constExpr": { "uint64Value": "18446744073709551615" }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_second_arg_uint_max",
            "expression": "math.greatest(1u, 18446744073709551615u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 18 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "greatest",
                  "args": [
                    { "id": "3", "constExpr": { "uint64Value": "1" } },
                    {
                      "id": "4",
                      "constExpr": { "uint64Value": "18446744073709551615" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_same_args",
            "expression": "math.greatest(1u, 1u, 1u) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 18,
                  "5": 22,
                  "6": 26,
                  "7": 29
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "uint64Value": "1" } },
                          { "id": "4", "constExpr": { "uint64Value": "1" } },
                          { "id": "5", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_with_decimal",
            "expression": "math.greatest(1u, 1.0, 1.0) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 18,
                  "5": 23,
                  "6": 28,
                  "7": 31
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "uint64Value": "1" } },
                          { "id": "4", "constExpr": { "doubleValue": 1 } },
                          { "id": "5", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_with_int",
            "expression": "math.greatest(1u, 1, 1) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 18,
                  "5": 21,
                  "6": 24,
                  "7": 27
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "uint64Value": "1" } },
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_first_arg_greatest",
            "expression": "math.greatest(10u, 1u, 3u) == 10u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 19,
                  "5": 23,
                  "6": 27,
                  "7": 30
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "uint64Value": "10" } },
                          { "id": "4", "constExpr": { "uint64Value": "1" } },
                          { "id": "5", "constExpr": { "uint64Value": "3" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "uint64Value": "10" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_third_arg_greatest",
            "expression": "math.greatest(1u, 3u, 10u) == 10u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 18,
                  "5": 22,
                  "6": 27,
                  "7": 30
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "uint64Value": "1" } },
                          { "id": "4", "constExpr": { "uint64Value": "3" } },
                          { "id": "5", "constExpr": { "uint64Value": "10" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "uint64Value": "10" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_int_max",
            "expression": "math.greatest(18446744073709551615u, 1u, 5u) == 18446744073709551615u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [70],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 37,
                  "5": 41,
                  "6": 45,
                  "7": 48
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": {
                              "uint64Value": "18446744073709551615"
                            }
                          },
                          { "id": "4", "constExpr": { "uint64Value": "1" } },
                          { "id": "5", "constExpr": { "uint64Value": "5" } }
                        ]
                      }
                    },
                    {
                      "id": "7",
                      "constExpr": { "uint64Value": "18446744073709551615" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "quaternary_mixed",
            "expression": "math.greatest(5.4, 10, 3u, -5.0, 18446744073709551615u) == 18446744073709551615u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [81],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 19,
                  "5": 23,
                  "6": 27,
                  "7": 33,
                  "8": 56,
                  "9": 59
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 5.4 } },
                          { "id": "4", "constExpr": { "int64Value": "10" } },
                          { "id": "5", "constExpr": { "uint64Value": "3" } },
                          { "id": "6", "constExpr": { "doubleValue": -5 } },
                          {
                            "id": "7",
                            "constExpr": {
                              "uint64Value": "18446744073709551615"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "constExpr": { "uint64Value": "18446744073709551615" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "quaternary_mixed_array",
            "expression": "math.greatest([5.4, 10u, 3u, -5.0, 3.5]) == 10u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [48],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 15,
                  "5": 20,
                  "6": 25,
                  "7": 29,
                  "8": 35,
                  "9": 41,
                  "10": 44
                }
              },
              "expr": {
                "id": "9",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "constExpr": { "doubleValue": 5.4 }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "uint64Value": "10" }
                                },
                                {
                                  "id": "6",
                                  "constExpr": { "uint64Value": "3" }
                                },
                                {
                                  "id": "7",
                                  "constExpr": { "doubleValue": -5 }
                                },
                                {
                                  "id": "8",
                                  "constExpr": { "doubleValue": 3.5 }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    { "id": "10", "constExpr": { "uint64Value": "10" } }
                  ]
                }
              }
            }
          },
          {
            "name": "quaternary_mixed_dyn_array",
            "expression": "math.greatest([dyn(5.4), dyn(10u), dyn(3u), dyn(-5.0), dyn(3.5)]) == 10u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [73],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 14,
                  "4": 18,
                  "5": 19,
                  "6": 28,
                  "7": 29,
                  "8": 38,
                  "9": 39,
                  "10": 47,
                  "11": 48,
                  "12": 58,
                  "13": 59,
                  "14": 66,
                  "15": 69
                }
              },
              "expr": {
                "id": "14",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "greatest",
                        "args": [
                          {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "5",
                                        "constExpr": { "doubleValue": 5.4 }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "6",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "7",
                                        "constExpr": { "uint64Value": "10" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "8",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "9",
                                        "constExpr": { "uint64Value": "3" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "10",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "11",
                                        "constExpr": { "doubleValue": -5 }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "12",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "13",
                                        "constExpr": { "doubleValue": 3.5 }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    { "id": "15", "constExpr": { "uint64Value": "10" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "least_int_result",
        "tests": [
          {
            "name": "unary_negative",
            "expression": "math.least(-5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 10, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [{ "id": "3", "constExpr": { "int64Value": "-5" } }]
                }
              }
            }
          },
          {
            "name": "unary_positive",
            "expression": "math.least(5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 10, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [{ "id": "3", "constExpr": { "int64Value": "5" } }]
                }
              }
            }
          },
          {
            "name": "binary_same_args",
            "expression": "math.least(1, 1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "1" } },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_with_decimal",
            "expression": "math.least(1, 1.0) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 14,
                  "5": 19,
                  "6": 22
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_with_uint",
            "expression": "math.least(1, 1u) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 14,
                  "5": 18,
                  "6": 21
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_first_arg_least",
            "expression": "math.least(-3, 3)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "-3" } },
                    { "id": "4", "constExpr": { "int64Value": "3" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_second_arg_least",
            "expression": "math.least(5, -7)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "5" } },
                    { "id": "4", "constExpr": { "int64Value": "-7" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_first_arg_int_max",
            "expression": "math.least(9223372036854775807, 1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 32 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    {
                      "id": "3",
                      "constExpr": { "int64Value": "9223372036854775807" }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_second_arg_int_max",
            "expression": "math.least(1, 9223372036854775807)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "1" } },
                    {
                      "id": "4",
                      "constExpr": { "int64Value": "9223372036854775807" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_first_arg_int_min",
            "expression": "math.least(-9223372036854775808, 1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 33 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    {
                      "id": "3",
                      "constExpr": { "int64Value": "-9223372036854775808" }
                    },
                    { "id": "4", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_second_arg_int_min",
            "expression": "math.least(1, -9223372036854775808)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "1" } },
                    {
                      "id": "4",
                      "constExpr": { "int64Value": "-9223372036854775808" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_same_args",
            "expression": "math.least(1, 1, 1) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 14,
                  "5": 17,
                  "6": 20,
                  "7": 23
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_with_decimal",
            "expression": "math.least(1, 1.0, 1.0) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 14,
                  "5": 19,
                  "6": 24,
                  "7": 27
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "doubleValue": 1 } },
                          { "id": "5", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_with_uint",
            "expression": "math.least(1, 1u, 1u) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 14,
                  "5": 18,
                  "6": 22,
                  "7": 25
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "uint64Value": "1" } },
                          { "id": "5", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_first_arg_least",
            "expression": "math.least(0, 1, 3) == 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 14,
                  "5": 17,
                  "6": 20,
                  "7": 23
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "0" } },
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_third_arg_least",
            "expression": "math.least(1, 3, 0) == 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 14,
                  "5": 17,
                  "6": 20,
                  "7": 23
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "int64Value": "3" } },
                          { "id": "5", "constExpr": { "int64Value": "0" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_with_negatives",
            "expression": "math.least(-1, -2, -3) == -3",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 15,
                  "5": 19,
                  "6": 23,
                  "7": 26
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "-1" } },
                          { "id": "4", "constExpr": { "int64Value": "-2" } },
                          { "id": "5", "constExpr": { "int64Value": "-3" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "-3" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_int_max",
            "expression": "math.least(9223372036854775807, 1, 5) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [43],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 32,
                  "5": 35,
                  "6": 38,
                  "7": 41
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "int64Value": "9223372036854775807" }
                          },
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "5" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_int_min",
            "expression": "math.least(-9223372036854775808, -1, -5) == -9223372036854775808",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [65],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 33,
                  "5": 37,
                  "6": 41,
                  "7": 44
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": {
                              "int64Value": "-9223372036854775808"
                            }
                          },
                          { "id": "4", "constExpr": { "int64Value": "-1" } },
                          { "id": "5", "constExpr": { "int64Value": "-5" } }
                        ]
                      }
                    },
                    {
                      "id": "7",
                      "constExpr": { "int64Value": "-9223372036854775808" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "quaternary_mixed",
            "expression": "math.least(5.4, 10, 3u, -5.0, 9223372036854775807) == -5.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [59],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 16,
                  "5": 20,
                  "6": 24,
                  "7": 30,
                  "8": 51,
                  "9": 54
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 5.4 } },
                          { "id": "4", "constExpr": { "int64Value": "10" } },
                          { "id": "5", "constExpr": { "uint64Value": "3" } },
                          { "id": "6", "constExpr": { "doubleValue": -5 } },
                          {
                            "id": "7",
                            "constExpr": { "int64Value": "9223372036854775807" }
                          }
                        ]
                      }
                    },
                    { "id": "9", "constExpr": { "doubleValue": -5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "quaternary_mixed_array",
            "expression": "math.least([5.4, 10, 3u, -5.0, 3.5]) == -5.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 12,
                  "5": 17,
                  "6": 21,
                  "7": 25,
                  "8": 31,
                  "9": 37,
                  "10": 40
                }
              },
              "expr": {
                "id": "9",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "constExpr": { "doubleValue": 5.4 }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "10" }
                                },
                                {
                                  "id": "6",
                                  "constExpr": { "uint64Value": "3" }
                                },
                                {
                                  "id": "7",
                                  "constExpr": { "doubleValue": -5 }
                                },
                                {
                                  "id": "8",
                                  "constExpr": { "doubleValue": 3.5 }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    { "id": "10", "constExpr": { "doubleValue": -5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "quaternary_mixed_dyn_array",
            "expression": "math.least([dyn(5.4), dyn(10), dyn(3u), dyn(-5.0), dyn(3.5)]) == -5.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [70],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 15,
                  "5": 16,
                  "6": 25,
                  "7": 26,
                  "8": 34,
                  "9": 35,
                  "10": 43,
                  "11": 44,
                  "12": 54,
                  "13": 55,
                  "14": 62,
                  "15": 65
                }
              },
              "expr": {
                "id": "14",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "5",
                                        "constExpr": { "doubleValue": 5.4 }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "6",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "7",
                                        "constExpr": { "int64Value": "10" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "8",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "9",
                                        "constExpr": { "uint64Value": "3" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "10",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "11",
                                        "constExpr": { "doubleValue": -5 }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "12",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "13",
                                        "constExpr": { "doubleValue": 3.5 }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    { "id": "15", "constExpr": { "doubleValue": -5 } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "least_double_result",
        "tests": [
          {
            "name": "unary_negative",
            "expression": "math.least(-5.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 10, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": -5.5 } }]
                }
              }
            }
          },
          {
            "name": "unary_positive",
            "expression": "math.least(5.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 10, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": 5.5 } }]
                }
              }
            }
          },
          {
            "name": "binary_same_args",
            "expression": "math.least(1.5, 1.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    { "id": "3", "constExpr": { "doubleValue": 1.5 } },
                    { "id": "4", "constExpr": { "doubleValue": 1.5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_with_int",
            "expression": "math.least(1.0, 1) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 16,
                  "5": 19,
                  "6": 22
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 1 } },
                          { "id": "4", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_with_uint",
            "expression": "math.least(1, 1u) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 14,
                  "5": 18,
                  "6": 21
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_first_arg_least",
            "expression": "math.least(-3.5, 3.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    { "id": "3", "constExpr": { "doubleValue": -3.5 } },
                    { "id": "4", "constExpr": { "doubleValue": 3.5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_second_arg_least",
            "expression": "math.least(5.5, -7.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    { "id": "3", "constExpr": { "doubleValue": 5.5 } },
                    { "id": "4", "constExpr": { "doubleValue": -7.5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_first_arg_double_max",
            "expression": "math.least(1.797693e308, 1.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 25 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    { "id": "3", "constExpr": { "doubleValue": 1.797693e308 } },
                    { "id": "4", "constExpr": { "doubleValue": 1.5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_second_arg_double_max",
            "expression": "math.least(1.5, 1.797693e308)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    { "id": "3", "constExpr": { "doubleValue": 1.5 } },
                    { "id": "4", "constExpr": { "doubleValue": 1.797693e308 } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_first_arg_double_min",
            "expression": "math.least(-1.797693e308, 1.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 26 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    {
                      "id": "3",
                      "constExpr": { "doubleValue": -1.797693e308 }
                    },
                    { "id": "4", "constExpr": { "doubleValue": 1.5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_second_arg_double_min",
            "expression": "math.least(1.5, -1.797693e308)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    { "id": "3", "constExpr": { "doubleValue": 1.5 } },
                    { "id": "4", "constExpr": { "doubleValue": -1.797693e308 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_same_args",
            "expression": "math.least(1.5, 1.5, 1.5) == 1.5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 16,
                  "5": 21,
                  "6": 26,
                  "7": 29
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 1.5 } },
                          { "id": "4", "constExpr": { "doubleValue": 1.5 } },
                          { "id": "5", "constExpr": { "doubleValue": 1.5 } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "doubleValue": 1.5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_with_int",
            "expression": "math.least(1.0, 1, 1) == 1.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 16,
                  "5": 19,
                  "6": 22,
                  "7": 25
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 1 } },
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "doubleValue": 1 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_with_uint",
            "expression": "math.least(1.0, 1u, 1u) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 16,
                  "5": 20,
                  "6": 24,
                  "7": 27
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 1 } },
                          { "id": "4", "constExpr": { "uint64Value": "1" } },
                          { "id": "5", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_first_arg_least",
            "expression": "math.least(0.5, 1.5, 3.5) == 0.5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 16,
                  "5": 21,
                  "6": 26,
                  "7": 29
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 0.5 } },
                          { "id": "4", "constExpr": { "doubleValue": 1.5 } },
                          { "id": "5", "constExpr": { "doubleValue": 3.5 } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "doubleValue": 0.5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_third_arg_least",
            "expression": "math.least(1.5, 3.5, 0.5) == 0.5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 16,
                  "5": 21,
                  "6": 26,
                  "7": 29
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 1.5 } },
                          { "id": "4", "constExpr": { "doubleValue": 3.5 } },
                          { "id": "5", "constExpr": { "doubleValue": 0.5 } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "doubleValue": 0.5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_with_negatives",
            "expression": "math.least(-1.5, -2.5, -3.5) == -3.5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 17,
                  "5": 23,
                  "6": 29,
                  "7": 32
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": -1.5 } },
                          { "id": "4", "constExpr": { "doubleValue": -2.5 } },
                          { "id": "5", "constExpr": { "doubleValue": -3.5 } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "doubleValue": -3.5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_double_max",
            "expression": "math.least(1.797693e308, 1, 5) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 25,
                  "5": 28,
                  "6": 31,
                  "7": 34
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "doubleValue": 1.797693e308 }
                          },
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "5" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_double_min",
            "expression": "math.least(-1.797693e308, -1, -5) == -1.797693e308",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [51],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 26,
                  "5": 30,
                  "6": 34,
                  "7": 37
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "doubleValue": -1.797693e308 }
                          },
                          { "id": "4", "constExpr": { "int64Value": "-1" } },
                          { "id": "5", "constExpr": { "int64Value": "-5" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "doubleValue": -1.797693e308 } }
                  ]
                }
              }
            }
          },
          {
            "name": "quaternary_mixed",
            "expression": "math.least(5.4, 10, 3u, -5.0, 1.797693e308) == -5.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 16,
                  "5": 20,
                  "6": 24,
                  "7": 30,
                  "8": 44,
                  "9": 47
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 5.4 } },
                          { "id": "4", "constExpr": { "int64Value": "10" } },
                          { "id": "5", "constExpr": { "uint64Value": "3" } },
                          { "id": "6", "constExpr": { "doubleValue": -5 } },
                          {
                            "id": "7",
                            "constExpr": { "doubleValue": 1.797693e308 }
                          }
                        ]
                      }
                    },
                    { "id": "9", "constExpr": { "doubleValue": -5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "quaternary_mixed_array",
            "expression": "math.least([5.4, 10.5, 3u, -5.0, 3.5]) == -5.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 12,
                  "5": 17,
                  "6": 23,
                  "7": 27,
                  "8": 33,
                  "9": 39,
                  "10": 42
                }
              },
              "expr": {
                "id": "9",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "constExpr": { "doubleValue": 5.4 }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "doubleValue": 10.5 }
                                },
                                {
                                  "id": "6",
                                  "constExpr": { "uint64Value": "3" }
                                },
                                {
                                  "id": "7",
                                  "constExpr": { "doubleValue": -5 }
                                },
                                {
                                  "id": "8",
                                  "constExpr": { "doubleValue": 3.5 }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    { "id": "10", "constExpr": { "doubleValue": -5 } }
                  ]
                }
              }
            }
          },
          {
            "name": "quaternary_mixed_dyn_array",
            "expression": "math.least([dyn(5.4), dyn(10.5), dyn(3u), dyn(-5.0), dyn(3.5)]) == -5.0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [72],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 15,
                  "5": 16,
                  "6": 25,
                  "7": 26,
                  "8": 36,
                  "9": 37,
                  "10": 45,
                  "11": 46,
                  "12": 56,
                  "13": 57,
                  "14": 64,
                  "15": 67
                }
              },
              "expr": {
                "id": "14",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "5",
                                        "constExpr": { "doubleValue": 5.4 }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "6",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "7",
                                        "constExpr": { "doubleValue": 10.5 }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "8",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "9",
                                        "constExpr": { "uint64Value": "3" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "10",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "11",
                                        "constExpr": { "doubleValue": -5 }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "12",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "13",
                                        "constExpr": { "doubleValue": 3.5 }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    { "id": "15", "constExpr": { "doubleValue": -5 } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "least_uint_result",
        "tests": [
          {
            "name": "unary",
            "expression": "math.least(5u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 10, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [{ "id": "3", "constExpr": { "uint64Value": "5" } }]
                }
              }
            }
          },
          {
            "name": "binary_same_args",
            "expression": "math.least(1u, 1u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    { "id": "3", "constExpr": { "uint64Value": "1" } },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_with_decimal",
            "expression": "math.least(1u, 1.0) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 15,
                  "5": 20,
                  "6": 23
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "uint64Value": "1" } },
                          { "id": "4", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_with_int",
            "expression": "math.least(1u, 1) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 15,
                  "5": 18,
                  "6": 21
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "uint64Value": "1" } },
                          { "id": "4", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_first_arg_least",
            "expression": "math.least(1u, 3u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    { "id": "3", "constExpr": { "uint64Value": "1" } },
                    { "id": "4", "constExpr": { "uint64Value": "3" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_second_arg_least",
            "expression": "math.least(5u, 2u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    { "id": "3", "constExpr": { "uint64Value": "5" } },
                    { "id": "4", "constExpr": { "uint64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_first_arg_uint_max",
            "expression": "math.least(18446744073709551615u, 1u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 34 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    {
                      "id": "3",
                      "constExpr": { "uint64Value": "18446744073709551615" }
                    },
                    { "id": "4", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "binary_second_arg_uint_max",
            "expression": "math.least(1u, 18446744073709551615u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "least",
                  "args": [
                    { "id": "3", "constExpr": { "uint64Value": "1" } },
                    {
                      "id": "4",
                      "constExpr": { "uint64Value": "18446744073709551615" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_same_args",
            "expression": "math.least(1u, 1u, 1u) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 15,
                  "5": 19,
                  "6": 23,
                  "7": 26
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "uint64Value": "1" } },
                          { "id": "4", "constExpr": { "uint64Value": "1" } },
                          { "id": "5", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_with_decimal",
            "expression": "math.least(1u, 1.0, 1.0) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 15,
                  "5": 20,
                  "6": 25,
                  "7": 28
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "uint64Value": "1" } },
                          { "id": "4", "constExpr": { "doubleValue": 1 } },
                          { "id": "5", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_with_int",
            "expression": "math.least(1u, 1, 1) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 15,
                  "5": 18,
                  "6": 21,
                  "7": 24
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "uint64Value": "1" } },
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_first_arg_least",
            "expression": "math.least(1u, 10u, 3u) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 15,
                  "5": 20,
                  "6": 24,
                  "7": 27
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "uint64Value": "1" } },
                          { "id": "4", "constExpr": { "uint64Value": "10" } },
                          { "id": "5", "constExpr": { "uint64Value": "3" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_third_arg_least",
            "expression": "math.least(10u, 3u, 1u) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 16,
                  "5": 20,
                  "6": 24,
                  "7": 27
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "uint64Value": "10" } },
                          { "id": "4", "constExpr": { "uint64Value": "3" } },
                          { "id": "5", "constExpr": { "uint64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_uint_max",
            "expression": "math.least(18446744073709551615u, 1u, 5u) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [48],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 34,
                  "5": 38,
                  "6": 42,
                  "7": 45
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": {
                              "uint64Value": "18446744073709551615"
                            }
                          },
                          { "id": "4", "constExpr": { "uint64Value": "1" } },
                          { "id": "5", "constExpr": { "uint64Value": "5" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "quaternary_mixed",
            "expression": "math.least(5.4, 10, 3u, 1u, 18446744073709551615u) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [57],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 16,
                  "5": 20,
                  "6": 24,
                  "7": 28,
                  "8": 51,
                  "9": 54
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 5.4 } },
                          { "id": "4", "constExpr": { "int64Value": "10" } },
                          { "id": "5", "constExpr": { "uint64Value": "3" } },
                          { "id": "6", "constExpr": { "uint64Value": "1" } },
                          {
                            "id": "7",
                            "constExpr": {
                              "uint64Value": "18446744073709551615"
                            }
                          }
                        ]
                      }
                    },
                    { "id": "9", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "quaternary_mixed_array",
            "expression": "math.least([5.4, 10u, 3u, 1u, 3.5]) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 12,
                  "5": 17,
                  "6": 22,
                  "7": 26,
                  "8": 30,
                  "9": 36,
                  "10": 39
                }
              },
              "expr": {
                "id": "9",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "constExpr": { "doubleValue": 5.4 }
                                },
                                {
                                  "id": "5",
                                  "constExpr": { "uint64Value": "10" }
                                },
                                {
                                  "id": "6",
                                  "constExpr": { "uint64Value": "3" }
                                },
                                {
                                  "id": "7",
                                  "constExpr": { "uint64Value": "1" }
                                },
                                {
                                  "id": "8",
                                  "constExpr": { "doubleValue": 3.5 }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    { "id": "10", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "quaternary_mixed_dyn_array",
            "expression": "math.least([dyn(5.4), dyn(10u), dyn(3u), dyn(1u), dyn(3.5)]) == 1u",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [67],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 15,
                  "5": 16,
                  "6": 25,
                  "7": 26,
                  "8": 35,
                  "9": 36,
                  "10": 44,
                  "11": 45,
                  "12": 53,
                  "13": 54,
                  "14": 61,
                  "15": 64
                }
              },
              "expr": {
                "id": "14",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "math" }
                        },
                        "function": "least",
                        "args": [
                          {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "5",
                                        "constExpr": { "doubleValue": 5.4 }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "6",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "7",
                                        "constExpr": { "uint64Value": "10" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "8",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "9",
                                        "constExpr": { "uint64Value": "3" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "10",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "11",
                                        "constExpr": { "uint64Value": "1" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "12",
                                  "callExpr": {
                                    "function": "dyn",
                                    "args": [
                                      {
                                        "id": "13",
                                        "constExpr": { "doubleValue": 3.5 }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    { "id": "15", "constExpr": { "uint64Value": "1" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "ceil",
        "tests": [
          {
            "name": "negative",
            "expression": "math.ceil(-1.2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 9, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "ceil",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": -1.2 } }]
                }
              }
            }
          },
          {
            "name": "positive",
            "expression": "math.ceil(1.2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 9, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "ceil",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": 1.2 } }]
                }
              }
            }
          },
          {
            "name": "dyn_error",
            "expression": "math.ceil(dyn(1))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 9, "3": 13, "4": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "ceil",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "4", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "floor",
        "tests": [
          {
            "name": "negative",
            "expression": "math.floor(-1.2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 10, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "floor",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": -1.2 } }]
                }
              }
            }
          },
          {
            "name": "positive",
            "expression": "math.floor(1.2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 10, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "floor",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": 1.2 } }]
                }
              }
            }
          },
          {
            "name": "dyn_error",
            "expression": "math.floor(dyn(1))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 0, "2": 10, "3": 14, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "floor",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "4", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "round",
        "tests": [
          {
            "name": "negative_down",
            "expression": "math.round(-1.6)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 10, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "round",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": -1.6 } }]
                }
              }
            }
          },
          {
            "name": "negative_up",
            "expression": "math.round(-1.4)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 10, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "round",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": -1.4 } }]
                }
              }
            }
          },
          {
            "name": "negative_mid",
            "expression": "math.round(-1.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 10, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "round",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": -1.5 } }]
                }
              }
            }
          },
          {
            "name": "positive_down",
            "expression": "math.round(1.2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 10, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "round",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": 1.2 } }]
                }
              }
            }
          },
          {
            "name": "positive_up",
            "expression": "math.round(1.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 10, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "round",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": 1.5 } }]
                }
              }
            }
          },
          {
            "name": "nan",
            "expression": "math.isNaN(math.round(0.0/0.0))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 21,
                  "5": 22,
                  "6": 25,
                  "7": 26
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "isNaN",
                  "args": [
                    {
                      "id": "4",
                      "callExpr": {
                        "target": {
                          "id": "3",
                          "identExpr": { "name": "math" }
                        },
                        "function": "round",
                        "args": [
                          {
                            "id": "6",
                            "callExpr": {
                              "function": "_/_",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "doubleValue": 0 }
                                },
                                { "id": "7", "constExpr": { "doubleValue": 0 } }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyn_error",
            "expression": "math.round(dyn(1))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 0, "2": 10, "3": 14, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "round",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "4", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "trunc",
        "tests": [
          {
            "name": "negative",
            "expression": "math.trunc(-1.2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 10, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "trunc",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": -1.2 } }]
                }
              }
            }
          },
          {
            "name": "positive",
            "expression": "math.trunc(1.2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 10, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "trunc",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": 1.2 } }]
                }
              }
            }
          },
          {
            "name": "nan",
            "expression": "math.isNaN(math.trunc(0.0/0.0))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 21,
                  "5": 22,
                  "6": 25,
                  "7": 26
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "isNaN",
                  "args": [
                    {
                      "id": "4",
                      "callExpr": {
                        "target": {
                          "id": "3",
                          "identExpr": { "name": "math" }
                        },
                        "function": "trunc",
                        "args": [
                          {
                            "id": "6",
                            "callExpr": {
                              "function": "_/_",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "doubleValue": 0 }
                                },
                                { "id": "7", "constExpr": { "doubleValue": 0 } }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyn_error",
            "expression": "math.trunc(dyn(1))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 0, "2": 10, "3": 14, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "trunc",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "4", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "abs",
        "tests": [
          {
            "name": "uint",
            "expression": "math.abs(1u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 8, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "abs",
                  "args": [{ "id": "3", "constExpr": { "uint64Value": "1" } }]
                }
              }
            }
          },
          {
            "name": "positive_int",
            "expression": "math.abs(1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [12],
                "positions": { "1": 0, "2": 8, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "abs",
                  "args": [{ "id": "3", "constExpr": { "int64Value": "1" } }]
                }
              }
            }
          },
          {
            "name": "negative_int",
            "expression": "math.abs(-11)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 8, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "abs",
                  "args": [{ "id": "3", "constExpr": { "int64Value": "-11" } }]
                }
              }
            }
          },
          {
            "name": "positive_double",
            "expression": "math.abs(1.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 8, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "abs",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": 1.5 } }]
                }
              }
            }
          },
          {
            "name": "negative_double",
            "expression": "math.abs(-11.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 8, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "abs",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": -11.5 } }]
                }
              }
            }
          },
          {
            "name": "int_overflow",
            "expression": "math.abs(-9223372036854775808)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 0, "2": 8, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "abs",
                  "args": [
                    {
                      "id": "3",
                      "constExpr": { "int64Value": "-9223372036854775808" }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "sign",
        "tests": [
          {
            "name": "positive_uint",
            "expression": "math.sign(100u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 9, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "sign",
                  "args": [{ "id": "3", "constExpr": { "uint64Value": "100" } }]
                }
              }
            }
          },
          {
            "name": "zero_uint",
            "expression": "math.sign(0u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 9, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "sign",
                  "args": [{ "id": "3", "constExpr": { "uint64Value": "0" } }]
                }
              }
            }
          },
          {
            "name": "positive_int",
            "expression": "math.sign(100)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 9, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "sign",
                  "args": [{ "id": "3", "constExpr": { "int64Value": "100" } }]
                }
              }
            }
          },
          {
            "name": "negative_int",
            "expression": "math.sign(-11)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 9, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "sign",
                  "args": [{ "id": "3", "constExpr": { "int64Value": "-11" } }]
                }
              }
            }
          },
          {
            "name": "zero_int",
            "expression": "math.sign(0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 9, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "sign",
                  "args": [{ "id": "3", "constExpr": { "int64Value": "0" } }]
                }
              }
            }
          },
          {
            "name": "positive_double",
            "expression": "math.sign(100.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 9, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "sign",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": 100.5 } }]
                }
              }
            }
          },
          {
            "name": "negative_double",
            "expression": "math.sign(-32.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 9, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "sign",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": -32 } }]
                }
              }
            }
          },
          {
            "name": "zero_double",
            "expression": "math.sign(0.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 9, "3": 10 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "sign",
                  "args": [{ "id": "3", "constExpr": { "doubleValue": 0 } }]
                }
              }
            }
          },
          {
            "name": "dyn_error",
            "expression": "math.sign(dyn(true))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 0, "2": 9, "3": 13, "4": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "sign",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "4", "constExpr": { "boolValue": true } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "isNaN",
        "tests": [
          {
            "name": "true",
            "expression": "math.isNaN(0.0/0.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 14, "5": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "isNaN",
                  "args": [
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "_/_",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 0 } },
                          { "id": "5", "constExpr": { "doubleValue": 0 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "false",
            "expression": "!math.isNaN(1.0/0.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 11,
                  "4": 12,
                  "5": 15,
                  "6": 16
                }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "!_",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "target": {
                          "id": "2",
                          "identExpr": { "name": "math" }
                        },
                        "function": "isNaN",
                        "args": [
                          {
                            "id": "5",
                            "callExpr": {
                              "function": "_/_",
                              "args": [
                                {
                                  "id": "4",
                                  "constExpr": { "doubleValue": 1 }
                                },
                                { "id": "6", "constExpr": { "doubleValue": 0 } }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyn_error",
            "expression": "math.isNaN(dyn(true))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": { "1": 0, "2": 10, "3": 14, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "isNaN",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "4", "constExpr": { "boolValue": true } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "isInf",
        "tests": [
          {
            "name": "true",
            "expression": "math.isInf(1.0/0.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 14, "5": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "isInf",
                  "args": [
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "_/_",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 1 } },
                          { "id": "5", "constExpr": { "doubleValue": 0 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "false",
            "expression": "!math.isInf(0.0/0.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 11,
                  "4": 12,
                  "5": 15,
                  "6": 16
                }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "!_",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "target": {
                          "id": "2",
                          "identExpr": { "name": "math" }
                        },
                        "function": "isInf",
                        "args": [
                          {
                            "id": "5",
                            "callExpr": {
                              "function": "_/_",
                              "args": [
                                {
                                  "id": "4",
                                  "constExpr": { "doubleValue": 0 }
                                },
                                { "id": "6", "constExpr": { "doubleValue": 0 } }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyn_error",
            "expression": "math.isInf(dyn(true))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": { "1": 0, "2": 10, "3": 14, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "isInf",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "4", "constExpr": { "boolValue": true } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "isFinite",
        "tests": [
          {
            "name": "true",
            "expression": "math.isFinite(1.0/1.5)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 17, "5": 18 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "isFinite",
                  "args": [
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "_/_",
                        "args": [
                          { "id": "3", "constExpr": { "doubleValue": 1 } },
                          { "id": "5", "constExpr": { "doubleValue": 1.5 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "false_nan",
            "expression": "!math.isFinite(0.0/0.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 14,
                  "4": 15,
                  "5": 18,
                  "6": 19
                }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "!_",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "target": {
                          "id": "2",
                          "identExpr": { "name": "math" }
                        },
                        "function": "isFinite",
                        "args": [
                          {
                            "id": "5",
                            "callExpr": {
                              "function": "_/_",
                              "args": [
                                {
                                  "id": "4",
                                  "constExpr": { "doubleValue": 0 }
                                },
                                { "id": "6", "constExpr": { "doubleValue": 0 } }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "false_inf",
            "expression": "!math.isFinite(-1.0/0.0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 14,
                  "4": 15,
                  "5": 19,
                  "6": 20
                }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "!_",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "target": {
                          "id": "2",
                          "identExpr": { "name": "math" }
                        },
                        "function": "isFinite",
                        "args": [
                          {
                            "id": "5",
                            "callExpr": {
                              "function": "_/_",
                              "args": [
                                {
                                  "id": "4",
                                  "constExpr": { "doubleValue": -1 }
                                },
                                { "id": "6", "constExpr": { "doubleValue": 0 } }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyn_error",
            "expression": "math.isFinite(dyn(true))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": { "1": 0, "2": 13, "3": 17, "4": 18 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "isFinite",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "4", "constExpr": { "boolValue": true } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "bit_and",
        "tests": [
          {
            "name": "int_int_non_intersect",
            "expression": "math.bitAnd(1, 2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitAnd",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "1" } },
                    { "id": "4", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "int_int_intersect",
            "expression": "math.bitAnd(1, 3)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitAnd",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "1" } },
                    { "id": "4", "constExpr": { "int64Value": "3" } }
                  ]
                }
              }
            }
          },
          {
            "name": "int_int_intersect_neg",
            "expression": "math.bitAnd(1, -1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitAnd",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "1" } },
                    { "id": "4", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "uint_uint_non_intersect",
            "expression": "math.bitAnd(1u, 2u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitAnd",
                  "args": [
                    { "id": "3", "constExpr": { "uint64Value": "1" } },
                    { "id": "4", "constExpr": { "uint64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "uint_uint_intersect",
            "expression": "math.bitAnd(1u, 3u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitAnd",
                  "args": [
                    { "id": "3", "constExpr": { "uint64Value": "1" } },
                    { "id": "4", "constExpr": { "uint64Value": "3" } }
                  ]
                }
              }
            }
          },
          {
            "name": "int_dyn_error",
            "expression": "math.bitAnd(2u, dyn(''))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 19, "5": 20 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitAnd",
                  "args": [
                    { "id": "3", "constExpr": { "uint64Value": "2" } },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "5", "constExpr": { "stringValue": "" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "bit_or",
        "tests": [
          {
            "name": "int_int_positive",
            "expression": "math.bitOr(1, 2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitOr",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "1" } },
                    { "id": "4", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "int_int_positive_negative",
            "expression": "math.bitOr(4, -2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitOr",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "4" } },
                    { "id": "4", "constExpr": { "int64Value": "-2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "uint_uint",
            "expression": "math.bitOr(1u, 4u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitOr",
                  "args": [
                    { "id": "3", "constExpr": { "uint64Value": "1" } },
                    { "id": "4", "constExpr": { "uint64Value": "4" } }
                  ]
                }
              }
            }
          },
          {
            "name": "dyn_int_error",
            "expression": "math.bitOr(dyn(1.2), 1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": { "1": 0, "2": 10, "3": 14, "4": 15, "5": 21 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitOr",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "4", "constExpr": { "doubleValue": 1.2 } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "bit_xor",
        "tests": [
          {
            "name": "int_int_positive",
            "expression": "math.bitXor(1, 3)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitXor",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "1" } },
                    { "id": "4", "constExpr": { "int64Value": "3" } }
                  ]
                }
              }
            }
          },
          {
            "name": "int_int_positive_negative",
            "expression": "math.bitXor(4, -2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitXor",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "4" } },
                    { "id": "4", "constExpr": { "int64Value": "-2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "uint_uint",
            "expression": "math.bitXor(1u, 3u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitXor",
                  "args": [
                    { "id": "3", "constExpr": { "uint64Value": "1" } },
                    { "id": "4", "constExpr": { "uint64Value": "3" } }
                  ]
                }
              }
            }
          },
          {
            "name": "dyn_dyn_error",
            "expression": "math.bitXor(dyn([]), dyn([1]))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": {
                  "1": 0,
                  "2": 11,
                  "3": 15,
                  "4": 16,
                  "5": 24,
                  "6": 25,
                  "7": 26
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitXor",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "dyn",
                        "args": [{ "id": "4", "listExpr": {} }]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "6",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "7",
                                  "constExpr": { "int64Value": "1" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "bit_not",
        "tests": [
          {
            "name": "int_positive",
            "expression": "math.bitNot(1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 11, "3": 12 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitNot",
                  "args": [{ "id": "3", "constExpr": { "int64Value": "1" } }]
                }
              }
            }
          },
          {
            "name": "int_negative",
            "expression": "math.bitNot(-1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 11, "3": 12 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitNot",
                  "args": [{ "id": "3", "constExpr": { "int64Value": "-1" } }]
                }
              }
            }
          },
          {
            "name": "int_zero",
            "expression": "math.bitNot(0)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 11, "3": 12 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitNot",
                  "args": [{ "id": "3", "constExpr": { "int64Value": "0" } }]
                }
              }
            }
          },
          {
            "name": "uint_positive",
            "expression": "math.bitNot(1u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 11, "3": 12 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitNot",
                  "args": [{ "id": "3", "constExpr": { "uint64Value": "1" } }]
                }
              }
            }
          },
          {
            "name": "uint_zero",
            "expression": "math.bitNot(0u)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 11, "3": 12 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitNot",
                  "args": [{ "id": "3", "constExpr": { "uint64Value": "0" } }]
                }
              }
            }
          },
          {
            "name": "dyn_error",
            "expression": "math.bitNot(dyn(''))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 0, "2": 11, "3": 15, "4": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitNot",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "4", "constExpr": { "stringValue": "" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "bit_shift_left",
        "tests": [
          {
            "name": "int",
            "expression": "math.bitShiftLeft(1, 2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": { "1": 0, "2": 17, "3": 18, "4": 21 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitShiftLeft",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "1" } },
                    { "id": "4", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "int_large_shift",
            "expression": "math.bitShiftLeft(1, 200)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 0, "2": 17, "3": 18, "4": 21 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitShiftLeft",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "1" } },
                    { "id": "4", "constExpr": { "int64Value": "200" } }
                  ]
                }
              }
            }
          },
          {
            "name": "int_negative_large_shift",
            "expression": "math.bitShiftLeft(-1, 200)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 0, "2": 17, "3": 18, "4": 22 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitShiftLeft",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "-1" } },
                    { "id": "4", "constExpr": { "int64Value": "200" } }
                  ]
                }
              }
            }
          },
          {
            "name": "uint",
            "expression": "math.bitShiftLeft(1u, 2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": { "1": 0, "2": 17, "3": 18, "4": 22 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitShiftLeft",
                  "args": [
                    { "id": "3", "constExpr": { "uint64Value": "1" } },
                    { "id": "4", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "uint_large_shift",
            "expression": "math.bitShiftLeft(1u, 200)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 0, "2": 17, "3": 18, "4": 22 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitShiftLeft",
                  "args": [
                    { "id": "3", "constExpr": { "uint64Value": "1" } },
                    { "id": "4", "constExpr": { "int64Value": "200" } }
                  ]
                }
              }
            }
          },
          {
            "name": "bad_shift",
            "expression": "math.bitShiftLeft(1u, -1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 0, "2": 17, "3": 18, "4": 22 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitShiftLeft",
                  "args": [
                    { "id": "3", "constExpr": { "uint64Value": "1" } },
                    { "id": "4", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "dyn_int_error",
            "expression": "math.bitShiftLeft(dyn(4.3), 1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 0, "2": 17, "3": 21, "4": 22, "5": 28 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitShiftLeft",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "4", "constExpr": { "doubleValue": 4.3 } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "bit_shift_right",
        "tests": [
          {
            "name": "int",
            "expression": "math.bitShiftRight(1024, 2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 0, "2": 18, "3": 19, "4": 25 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitShiftRight",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "1024" } },
                    { "id": "4", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "int_large_shift",
            "expression": "math.bitShiftRight(1024, 64)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": { "1": 0, "2": 18, "3": 19, "4": 25 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitShiftRight",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "1024" } },
                    { "id": "4", "constExpr": { "int64Value": "64" } }
                  ]
                }
              }
            }
          },
          {
            "name": "int_negative",
            "expression": "math.bitShiftRight(-1024, 3)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": { "1": 0, "2": 18, "3": 19, "4": 26 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitShiftRight",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "-1024" } },
                    { "id": "4", "constExpr": { "int64Value": "3" } }
                  ]
                }
              }
            }
          },
          {
            "name": "int_negative_large_shift",
            "expression": "math.bitShiftRight(-1024, 64)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 0, "2": 18, "3": 19, "4": 26 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitShiftRight",
                  "args": [
                    { "id": "3", "constExpr": { "int64Value": "-1024" } },
                    { "id": "4", "constExpr": { "int64Value": "64" } }
                  ]
                }
              }
            }
          },
          {
            "name": "uint",
            "expression": "math.bitShiftRight(1024u, 2)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": { "1": 0, "2": 18, "3": 19, "4": 26 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitShiftRight",
                  "args": [
                    { "id": "3", "constExpr": { "uint64Value": "1024" } },
                    { "id": "4", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "uint_large_shift",
            "expression": "math.bitShiftRight(1024u, 200)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 0, "2": 18, "3": 19, "4": 26 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitShiftRight",
                  "args": [
                    { "id": "3", "constExpr": { "uint64Value": "1024" } },
                    { "id": "4", "constExpr": { "int64Value": "200" } }
                  ]
                }
              }
            }
          },
          {
            "name": "bad_shift",
            "expression": "math.bitShiftRight(1u, -1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 0, "2": 18, "3": 19, "4": 23 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitShiftRight",
                  "args": [
                    { "id": "3", "constExpr": { "uint64Value": "1" } },
                    { "id": "4", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "dyn_int_error",
            "expression": "math.bitShiftRight(dyn(b'123'), 1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": { "1": 0, "2": 18, "3": 22, "4": 23, "5": 32 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "math" } },
                  "function": "bitShiftRight",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          { "id": "4", "constExpr": { "bytesValue": "MTIz" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "namespace",
    "sections": [
      {
        "name": "qualified",
        "tests": [
          {
            "name": "self_eval_qualified_lookup",
            "expression": "x.y",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [4],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": { "id": "1", "identExpr": { "name": "x" } },
                  "field": "y"
                }
              }
            }
          }
        ]
      },
      {
        "name": "namespace",
        "tests": [
          {
            "name": "self_eval_container_lookup",
            "expression": "y",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "y" } }
            }
          },
          {
            "name": "self_eval_container_lookup_unchecked",
            "expression": "y",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [2],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "identExpr": { "name": "y" } }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "optionals",
    "sections": [
      {
        "name": "optionals",
        "tests": [
          {
            "name": "null",
            "expression": "optional.of(null).hasValue()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 26 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "target": {
                    "id": "2",
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "identExpr": { "name": "optional" }
                      },
                      "function": "of",
                      "args": [
                        { "id": "3", "constExpr": { "nullValue": null } }
                      ]
                    }
                  },
                  "function": "hasValue"
                }
              }
            }
          },
          {
            "name": "null_non_zero_value",
            "expression": "optional.ofNonZeroValue(null).hasValue()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 0, "2": 23, "3": 24, "4": 38 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "target": {
                    "id": "2",
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "identExpr": { "name": "optional" }
                      },
                      "function": "ofNonZeroValue",
                      "args": [
                        { "id": "3", "constExpr": { "nullValue": null } }
                      ]
                    }
                  },
                  "function": "hasValue"
                }
              }
            }
          },
          {
            "name": "none_or_none_or_value",
            "expression": "optional.none().or(optional.none()).orValue(42)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [48],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 18,
                  "4": 19,
                  "5": 32,
                  "6": 43,
                  "7": 44
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "target": {
                    "id": "3",
                    "callExpr": {
                      "target": {
                        "id": "2",
                        "callExpr": {
                          "target": {
                            "id": "1",
                            "identExpr": { "name": "optional" }
                          },
                          "function": "none"
                        }
                      },
                      "function": "or",
                      "args": [
                        {
                          "id": "5",
                          "callExpr": {
                            "target": {
                              "id": "4",
                              "identExpr": { "name": "optional" }
                            },
                            "function": "none"
                          }
                        }
                      ]
                    }
                  },
                  "function": "orValue",
                  "args": [{ "id": "7", "constExpr": { "int64Value": "42" } }]
                }
              }
            }
          },
          {
            "name": "none_optMap_hasValue",
            "expression": "optional.none().optMap(y, y + 1).hasValue()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 22,
                  "4": 23,
                  "5": 26,
                  "6": 28,
                  "7": 30,
                  "8": 41
                }
              },
              "expr": {
                "id": "8",
                "callExpr": {
                  "target": {
                    "id": "3",
                    "callExpr": {
                      "target": {
                        "id": "2",
                        "callExpr": {
                          "target": {
                            "id": "1",
                            "identExpr": { "name": "optional" }
                          },
                          "function": "none"
                        }
                      },
                      "function": "optMap",
                      "args": [
                        { "id": "4", "identExpr": { "name": "y" } },
                        {
                          "id": "6",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              { "id": "5", "identExpr": { "name": "y" } },
                              { "id": "7", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "function": "hasValue"
                }
              }
            }
          },
          {
            "name": "optional_of_optMap_value",
            "expression": "optional.of(42).optMap(y, y + 1).value()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": {
                  "1": 0,
                  "2": 11,
                  "3": 12,
                  "4": 22,
                  "5": 23,
                  "6": 26,
                  "7": 28,
                  "8": 30,
                  "9": 38
                }
              },
              "expr": {
                "id": "9",
                "callExpr": {
                  "target": {
                    "id": "4",
                    "callExpr": {
                      "target": {
                        "id": "2",
                        "callExpr": {
                          "target": {
                            "id": "1",
                            "identExpr": { "name": "optional" }
                          },
                          "function": "of",
                          "args": [
                            { "id": "3", "constExpr": { "int64Value": "42" } }
                          ]
                        }
                      },
                      "function": "optMap",
                      "args": [
                        { "id": "5", "identExpr": { "name": "y" } },
                        {
                          "id": "7",
                          "callExpr": {
                            "function": "_+_",
                            "args": [
                              { "id": "6", "identExpr": { "name": "y" } },
                              { "id": "8", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "function": "value"
                }
              }
            }
          },
          {
            "name": "optional_ofNonZeroValue_or_optional_value",
            "expression": "optional.ofNonZeroValue(42).or(optional.of(20)).value() == 42",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [62],
                "positions": {
                  "1": 0,
                  "2": 23,
                  "3": 24,
                  "4": 30,
                  "5": 31,
                  "6": 42,
                  "7": 43,
                  "8": 53,
                  "9": 56,
                  "10": 59
                }
              },
              "expr": {
                "id": "9",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "8",
                      "callExpr": {
                        "target": {
                          "id": "4",
                          "callExpr": {
                            "target": {
                              "id": "2",
                              "callExpr": {
                                "target": {
                                  "id": "1",
                                  "identExpr": { "name": "optional" }
                                },
                                "function": "ofNonZeroValue",
                                "args": [
                                  {
                                    "id": "3",
                                    "constExpr": { "int64Value": "42" }
                                  }
                                ]
                              }
                            },
                            "function": "or",
                            "args": [
                              {
                                "id": "6",
                                "callExpr": {
                                  "target": {
                                    "id": "5",
                                    "identExpr": { "name": "optional" }
                                  },
                                  "function": "of",
                                  "args": [
                                    {
                                      "id": "7",
                                      "constExpr": { "int64Value": "20" }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "function": "value"
                      }
                    },
                    { "id": "10", "constExpr": { "int64Value": "42" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ternary_optional_hasValue",
            "expression": "(has({}.x) ? optional.of({}.x) : optional.none()).hasValue()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [61],
                "positions": {
                  "2": 5,
                  "3": 7,
                  "4": 4,
                  "5": 11,
                  "6": 13,
                  "7": 24,
                  "8": 25,
                  "9": 27,
                  "10": 33,
                  "11": 46,
                  "12": 58
                },
                "macroCalls": {
                  "4": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "3",
                          "selectExpr": {
                            "operand": { "id": "2", "structExpr": {} },
                            "field": "x"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "12",
                "callExpr": {
                  "target": {
                    "id": "5",
                    "callExpr": {
                      "function": "_?_:_",
                      "args": [
                        {
                          "id": "4",
                          "selectExpr": {
                            "operand": { "id": "2", "structExpr": {} },
                            "field": "x",
                            "testOnly": true
                          }
                        },
                        {
                          "id": "7",
                          "callExpr": {
                            "target": {
                              "id": "6",
                              "identExpr": { "name": "optional" }
                            },
                            "function": "of",
                            "args": [
                              {
                                "id": "9",
                                "selectExpr": {
                                  "operand": { "id": "8", "structExpr": {} },
                                  "field": "x"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "id": "11",
                          "callExpr": {
                            "target": {
                              "id": "10",
                              "identExpr": { "name": "optional" }
                            },
                            "function": "none"
                          }
                        }
                      ]
                    }
                  },
                  "function": "hasValue"
                }
              }
            }
          },
          {
            "name": "type",
            "expression": "type(optional.none()) == optional_type",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": { "1": 4, "2": 5, "3": 18, "4": 22, "5": 25 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "type",
                        "args": [
                          {
                            "id": "3",
                            "callExpr": {
                              "target": {
                                "id": "2",
                                "identExpr": { "name": "optional" }
                              },
                              "function": "none"
                            }
                          }
                        ]
                      }
                    },
                    { "id": "5", "identExpr": { "name": "optional_type" } }
                  ]
                }
              }
            }
          },
          {
            "name": "optional_chaining_1",
            "expression": "optional.ofNonZeroValue('').or(optional.of({'c': {'dashed-index': 'goodbye'}}.c['dashed-index'])).orValue('default value')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [123],
                "positions": {
                  "1": 0,
                  "2": 23,
                  "3": 24,
                  "4": 30,
                  "5": 31,
                  "6": 42,
                  "7": 43,
                  "8": 47,
                  "9": 44,
                  "10": 49,
                  "11": 64,
                  "12": 50,
                  "13": 66,
                  "14": 77,
                  "15": 79,
                  "16": 80,
                  "17": 105,
                  "18": 106
                }
              },
              "expr": {
                "id": "17",
                "callExpr": {
                  "target": {
                    "id": "4",
                    "callExpr": {
                      "target": {
                        "id": "2",
                        "callExpr": {
                          "target": {
                            "id": "1",
                            "identExpr": { "name": "optional" }
                          },
                          "function": "ofNonZeroValue",
                          "args": [
                            { "id": "3", "constExpr": { "stringValue": "" } }
                          ]
                        }
                      },
                      "function": "or",
                      "args": [
                        {
                          "id": "6",
                          "callExpr": {
                            "target": {
                              "id": "5",
                              "identExpr": { "name": "optional" }
                            },
                            "function": "of",
                            "args": [
                              {
                                "id": "15",
                                "callExpr": {
                                  "function": "_[_]",
                                  "args": [
                                    {
                                      "id": "14",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "7",
                                          "structExpr": {
                                            "entries": [
                                              {
                                                "id": "8",
                                                "mapKey": {
                                                  "id": "9",
                                                  "constExpr": {
                                                    "stringValue": "c"
                                                  }
                                                },
                                                "value": {
                                                  "id": "10",
                                                  "structExpr": {
                                                    "entries": [
                                                      {
                                                        "id": "11",
                                                        "mapKey": {
                                                          "id": "12",
                                                          "constExpr": {
                                                            "stringValue": "dashed-index"
                                                          }
                                                        },
                                                        "value": {
                                                          "id": "13",
                                                          "constExpr": {
                                                            "stringValue": "goodbye"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        "field": "c"
                                      }
                                    },
                                    {
                                      "id": "16",
                                      "constExpr": {
                                        "stringValue": "dashed-index"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "function": "orValue",
                  "args": [
                    {
                      "id": "18",
                      "constExpr": { "stringValue": "default value" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "optional_chaining_4",
            "expression": "optional.of({'c': {'index': 'goodbye'}}).c.index.orValue('default value')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [74],
                "positions": {
                  "1": 0,
                  "2": 11,
                  "3": 12,
                  "4": 16,
                  "5": 13,
                  "6": 18,
                  "7": 26,
                  "8": 19,
                  "9": 28,
                  "10": 40,
                  "11": 42,
                  "12": 56,
                  "13": 57
                }
              },
              "expr": {
                "id": "12",
                "callExpr": {
                  "target": {
                    "id": "11",
                    "selectExpr": {
                      "operand": {
                        "id": "10",
                        "selectExpr": {
                          "operand": {
                            "id": "2",
                            "callExpr": {
                              "target": {
                                "id": "1",
                                "identExpr": { "name": "optional" }
                              },
                              "function": "of",
                              "args": [
                                {
                                  "id": "3",
                                  "structExpr": {
                                    "entries": [
                                      {
                                        "id": "4",
                                        "mapKey": {
                                          "id": "5",
                                          "constExpr": { "stringValue": "c" }
                                        },
                                        "value": {
                                          "id": "6",
                                          "structExpr": {
                                            "entries": [
                                              {
                                                "id": "7",
                                                "mapKey": {
                                                  "id": "8",
                                                  "constExpr": {
                                                    "stringValue": "index"
                                                  }
                                                },
                                                "value": {
                                                  "id": "9",
                                                  "constExpr": {
                                                    "stringValue": "goodbye"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          "field": "c"
                        }
                      },
                      "field": "index"
                    }
                  },
                  "function": "orValue",
                  "args": [
                    {
                      "id": "13",
                      "constExpr": { "stringValue": "default value" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "optional_chaining_5",
            "expression": "optional.of({'c': {}}).c.missing.or(optional.none()[0]).orValue('default value')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [81],
                "positions": {
                  "1": 0,
                  "2": 11,
                  "3": 12,
                  "4": 16,
                  "5": 13,
                  "6": 18,
                  "7": 22,
                  "8": 24,
                  "9": 35,
                  "10": 36,
                  "11": 49,
                  "12": 51,
                  "13": 52,
                  "14": 63,
                  "15": 64
                }
              },
              "expr": {
                "id": "14",
                "callExpr": {
                  "target": {
                    "id": "9",
                    "callExpr": {
                      "target": {
                        "id": "8",
                        "selectExpr": {
                          "operand": {
                            "id": "7",
                            "selectExpr": {
                              "operand": {
                                "id": "2",
                                "callExpr": {
                                  "target": {
                                    "id": "1",
                                    "identExpr": { "name": "optional" }
                                  },
                                  "function": "of",
                                  "args": [
                                    {
                                      "id": "3",
                                      "structExpr": {
                                        "entries": [
                                          {
                                            "id": "4",
                                            "mapKey": {
                                              "id": "5",
                                              "constExpr": {
                                                "stringValue": "c"
                                              }
                                            },
                                            "value": {
                                              "id": "6",
                                              "structExpr": {}
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "field": "c"
                            }
                          },
                          "field": "missing"
                        }
                      },
                      "function": "or",
                      "args": [
                        {
                          "id": "12",
                          "callExpr": {
                            "function": "_[_]",
                            "args": [
                              {
                                "id": "11",
                                "callExpr": {
                                  "target": {
                                    "id": "10",
                                    "identExpr": { "name": "optional" }
                                  },
                                  "function": "none"
                                }
                              },
                              { "id": "13", "constExpr": { "int64Value": "0" } }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "function": "orValue",
                  "args": [
                    {
                      "id": "15",
                      "constExpr": { "stringValue": "default value" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "optional_chaining_6",
            "expression": "optional.of({'c': {}}).c.missing.or(optional.of(['list-value'])[0]).orValue('default value')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [93],
                "positions": {
                  "1": 0,
                  "2": 11,
                  "3": 12,
                  "4": 16,
                  "5": 13,
                  "6": 18,
                  "7": 22,
                  "8": 24,
                  "9": 35,
                  "10": 36,
                  "11": 47,
                  "12": 48,
                  "13": 49,
                  "14": 63,
                  "15": 64,
                  "16": 75,
                  "17": 76
                }
              },
              "expr": {
                "id": "16",
                "callExpr": {
                  "target": {
                    "id": "9",
                    "callExpr": {
                      "target": {
                        "id": "8",
                        "selectExpr": {
                          "operand": {
                            "id": "7",
                            "selectExpr": {
                              "operand": {
                                "id": "2",
                                "callExpr": {
                                  "target": {
                                    "id": "1",
                                    "identExpr": { "name": "optional" }
                                  },
                                  "function": "of",
                                  "args": [
                                    {
                                      "id": "3",
                                      "structExpr": {
                                        "entries": [
                                          {
                                            "id": "4",
                                            "mapKey": {
                                              "id": "5",
                                              "constExpr": {
                                                "stringValue": "c"
                                              }
                                            },
                                            "value": {
                                              "id": "6",
                                              "structExpr": {}
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "field": "c"
                            }
                          },
                          "field": "missing"
                        }
                      },
                      "function": "or",
                      "args": [
                        {
                          "id": "14",
                          "callExpr": {
                            "function": "_[_]",
                            "args": [
                              {
                                "id": "11",
                                "callExpr": {
                                  "target": {
                                    "id": "10",
                                    "identExpr": { "name": "optional" }
                                  },
                                  "function": "of",
                                  "args": [
                                    {
                                      "id": "12",
                                      "listExpr": {
                                        "elements": [
                                          {
                                            "id": "13",
                                            "constExpr": {
                                              "stringValue": "list-value"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              { "id": "15", "constExpr": { "int64Value": "0" } }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "function": "orValue",
                  "args": [
                    {
                      "id": "17",
                      "constExpr": { "stringValue": "default value" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "optional_chaining_7",
            "expression": "optional.of({'c': {'index': 'goodbye'}}).c['index'].orValue('default value')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [77],
                "positions": {
                  "1": 0,
                  "2": 11,
                  "3": 12,
                  "4": 16,
                  "5": 13,
                  "6": 18,
                  "7": 26,
                  "8": 19,
                  "9": 28,
                  "10": 40,
                  "11": 42,
                  "12": 43,
                  "13": 59,
                  "14": 60
                }
              },
              "expr": {
                "id": "13",
                "callExpr": {
                  "target": {
                    "id": "11",
                    "callExpr": {
                      "function": "_[_]",
                      "args": [
                        {
                          "id": "10",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "callExpr": {
                                "target": {
                                  "id": "1",
                                  "identExpr": { "name": "optional" }
                                },
                                "function": "of",
                                "args": [
                                  {
                                    "id": "3",
                                    "structExpr": {
                                      "entries": [
                                        {
                                          "id": "4",
                                          "mapKey": {
                                            "id": "5",
                                            "constExpr": { "stringValue": "c" }
                                          },
                                          "value": {
                                            "id": "6",
                                            "structExpr": {
                                              "entries": [
                                                {
                                                  "id": "7",
                                                  "mapKey": {
                                                    "id": "8",
                                                    "constExpr": {
                                                      "stringValue": "index"
                                                    }
                                                  },
                                                  "value": {
                                                    "id": "9",
                                                    "constExpr": {
                                                      "stringValue": "goodbye"
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "c"
                          }
                        },
                        { "id": "12", "constExpr": { "stringValue": "index" } }
                      ]
                    }
                  },
                  "function": "orValue",
                  "args": [
                    {
                      "id": "14",
                      "constExpr": { "stringValue": "default value" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "optional_chaining_8",
            "expression": "optional.of({'c': {}}).c['missing'].orValue('default value')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [61],
                "positions": {
                  "1": 0,
                  "2": 11,
                  "3": 12,
                  "4": 16,
                  "5": 13,
                  "6": 18,
                  "7": 22,
                  "8": 24,
                  "9": 25,
                  "10": 43,
                  "11": 44
                }
              },
              "expr": {
                "id": "10",
                "callExpr": {
                  "target": {
                    "id": "8",
                    "callExpr": {
                      "function": "_[_]",
                      "args": [
                        {
                          "id": "7",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "callExpr": {
                                "target": {
                                  "id": "1",
                                  "identExpr": { "name": "optional" }
                                },
                                "function": "of",
                                "args": [
                                  {
                                    "id": "3",
                                    "structExpr": {
                                      "entries": [
                                        {
                                          "id": "4",
                                          "mapKey": {
                                            "id": "5",
                                            "constExpr": { "stringValue": "c" }
                                          },
                                          "value": {
                                            "id": "6",
                                            "structExpr": {}
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "c"
                          }
                        },
                        { "id": "9", "constExpr": { "stringValue": "missing" } }
                      ]
                    }
                  },
                  "function": "orValue",
                  "args": [
                    {
                      "id": "11",
                      "constExpr": { "stringValue": "default value" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "optional_chaining_9",
            "expression": "has(optional.of({'c': {'entry': 'hello world'}}).c) \u0026\u0026 !has(optional.of({'c': {'entry': 'hello world'}}).c.missing)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [116],
                "positions": {
                  "2": 4,
                  "3": 15,
                  "4": 16,
                  "5": 20,
                  "6": 17,
                  "7": 22,
                  "8": 30,
                  "9": 23,
                  "10": 32,
                  "11": 48,
                  "12": 3,
                  "13": 55,
                  "15": 60,
                  "16": 71,
                  "17": 72,
                  "18": 76,
                  "19": 73,
                  "20": 78,
                  "21": 86,
                  "22": 79,
                  "23": 88,
                  "24": 104,
                  "25": 106,
                  "26": 59,
                  "27": 52
                },
                "macroCalls": {
                  "12": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "11",
                          "selectExpr": {
                            "operand": {
                              "id": "3",
                              "callExpr": {
                                "target": {
                                  "id": "2",
                                  "identExpr": { "name": "optional" }
                                },
                                "function": "of",
                                "args": [
                                  {
                                    "id": "4",
                                    "structExpr": {
                                      "entries": [
                                        {
                                          "id": "5",
                                          "mapKey": {
                                            "id": "6",
                                            "constExpr": { "stringValue": "c" }
                                          },
                                          "value": {
                                            "id": "7",
                                            "structExpr": {
                                              "entries": [
                                                {
                                                  "id": "8",
                                                  "mapKey": {
                                                    "id": "9",
                                                    "constExpr": {
                                                      "stringValue": "entry"
                                                    }
                                                  },
                                                  "value": {
                                                    "id": "10",
                                                    "constExpr": {
                                                      "stringValue": "hello world"
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "c"
                          }
                        }
                      ]
                    }
                  },
                  "26": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "25",
                          "selectExpr": {
                            "operand": {
                              "id": "24",
                              "selectExpr": {
                                "operand": {
                                  "id": "16",
                                  "callExpr": {
                                    "target": {
                                      "id": "15",
                                      "identExpr": { "name": "optional" }
                                    },
                                    "function": "of",
                                    "args": [
                                      {
                                        "id": "17",
                                        "structExpr": {
                                          "entries": [
                                            {
                                              "id": "18",
                                              "mapKey": {
                                                "id": "19",
                                                "constExpr": {
                                                  "stringValue": "c"
                                                }
                                              },
                                              "value": {
                                                "id": "20",
                                                "structExpr": {
                                                  "entries": [
                                                    {
                                                      "id": "21",
                                                      "mapKey": {
                                                        "id": "22",
                                                        "constExpr": {
                                                          "stringValue": "entry"
                                                        }
                                                      },
                                                      "value": {
                                                        "id": "23",
                                                        "constExpr": {
                                                          "stringValue": "hello world"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                "field": "c"
                              }
                            },
                            "field": "missing"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "27",
                "callExpr": {
                  "function": "_\u0026\u0026_",
                  "args": [
                    {
                      "id": "12",
                      "selectExpr": {
                        "operand": {
                          "id": "3",
                          "callExpr": {
                            "target": {
                              "id": "2",
                              "identExpr": { "name": "optional" }
                            },
                            "function": "of",
                            "args": [
                              {
                                "id": "4",
                                "structExpr": {
                                  "entries": [
                                    {
                                      "id": "5",
                                      "mapKey": {
                                        "id": "6",
                                        "constExpr": { "stringValue": "c" }
                                      },
                                      "value": {
                                        "id": "7",
                                        "structExpr": {
                                          "entries": [
                                            {
                                              "id": "8",
                                              "mapKey": {
                                                "id": "9",
                                                "constExpr": {
                                                  "stringValue": "entry"
                                                }
                                              },
                                              "value": {
                                                "id": "10",
                                                "constExpr": {
                                                  "stringValue": "hello world"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "field": "c",
                        "testOnly": true
                      }
                    },
                    {
                      "id": "13",
                      "callExpr": {
                        "function": "!_",
                        "args": [
                          {
                            "id": "26",
                            "selectExpr": {
                              "operand": {
                                "id": "24",
                                "selectExpr": {
                                  "operand": {
                                    "id": "16",
                                    "callExpr": {
                                      "target": {
                                        "id": "15",
                                        "identExpr": { "name": "optional" }
                                      },
                                      "function": "of",
                                      "args": [
                                        {
                                          "id": "17",
                                          "structExpr": {
                                            "entries": [
                                              {
                                                "id": "18",
                                                "mapKey": {
                                                  "id": "19",
                                                  "constExpr": {
                                                    "stringValue": "c"
                                                  }
                                                },
                                                "value": {
                                                  "id": "20",
                                                  "structExpr": {
                                                    "entries": [
                                                      {
                                                        "id": "21",
                                                        "mapKey": {
                                                          "id": "22",
                                                          "constExpr": {
                                                            "stringValue": "entry"
                                                          }
                                                        },
                                                        "value": {
                                                          "id": "23",
                                                          "constExpr": {
                                                            "stringValue": "hello world"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "field": "c"
                                }
                              },
                              "field": "missing",
                              "testOnly": true
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "optional_chaining_10",
            "expression": "optional.ofNonZeroValue({'c': {'dashed-index': 'goodbye'}}.a.z).orValue({'c': {'dashed-index': 'goodbye'}}.c['dashed-index'])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [126],
                "positions": {
                  "1": 0,
                  "2": 23,
                  "3": 24,
                  "4": 28,
                  "5": 25,
                  "6": 30,
                  "7": 45,
                  "8": 31,
                  "9": 47,
                  "10": 58,
                  "11": 60,
                  "12": 71,
                  "13": 72,
                  "14": 76,
                  "15": 73,
                  "16": 78,
                  "17": 93,
                  "18": 79,
                  "19": 95,
                  "20": 106,
                  "21": 108,
                  "22": 109
                }
              },
              "expr": {
                "id": "12",
                "callExpr": {
                  "target": {
                    "id": "2",
                    "callExpr": {
                      "target": {
                        "id": "1",
                        "identExpr": { "name": "optional" }
                      },
                      "function": "ofNonZeroValue",
                      "args": [
                        {
                          "id": "11",
                          "selectExpr": {
                            "operand": {
                              "id": "10",
                              "selectExpr": {
                                "operand": {
                                  "id": "3",
                                  "structExpr": {
                                    "entries": [
                                      {
                                        "id": "4",
                                        "mapKey": {
                                          "id": "5",
                                          "constExpr": { "stringValue": "c" }
                                        },
                                        "value": {
                                          "id": "6",
                                          "structExpr": {
                                            "entries": [
                                              {
                                                "id": "7",
                                                "mapKey": {
                                                  "id": "8",
                                                  "constExpr": {
                                                    "stringValue": "dashed-index"
                                                  }
                                                },
                                                "value": {
                                                  "id": "9",
                                                  "constExpr": {
                                                    "stringValue": "goodbye"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "field": "a"
                              }
                            },
                            "field": "z"
                          }
                        }
                      ]
                    }
                  },
                  "function": "orValue",
                  "args": [
                    {
                      "id": "21",
                      "callExpr": {
                        "function": "_[_]",
                        "args": [
                          {
                            "id": "20",
                            "selectExpr": {
                              "operand": {
                                "id": "13",
                                "structExpr": {
                                  "entries": [
                                    {
                                      "id": "14",
                                      "mapKey": {
                                        "id": "15",
                                        "constExpr": { "stringValue": "c" }
                                      },
                                      "value": {
                                        "id": "16",
                                        "structExpr": {
                                          "entries": [
                                            {
                                              "id": "17",
                                              "mapKey": {
                                                "id": "18",
                                                "constExpr": {
                                                  "stringValue": "dashed-index"
                                                }
                                              },
                                              "value": {
                                                "id": "19",
                                                "constExpr": {
                                                  "stringValue": "goodbye"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "field": "c"
                            }
                          },
                          {
                            "id": "22",
                            "constExpr": { "stringValue": "dashed-index" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "optional_eq_none_none",
            "expression": "optional.none() == optional.none()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": { "1": 0, "2": 13, "3": 16, "4": 19, "5": 32 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "optional" }
                        },
                        "function": "none"
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "target": {
                          "id": "4",
                          "identExpr": { "name": "optional" }
                        },
                        "function": "none"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "optional_eq_none_int",
            "expression": "optional.none() == optional.of(1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 16,
                  "4": 19,
                  "5": 30,
                  "6": 31
                }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "optional" }
                        },
                        "function": "none"
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "target": {
                          "id": "4",
                          "identExpr": { "name": "optional" }
                        },
                        "function": "of",
                        "args": [
                          { "id": "6", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "optional_eq_int_none",
            "expression": "optional.of(1) == optional.none()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": {
                  "1": 0,
                  "2": 11,
                  "3": 12,
                  "4": 15,
                  "5": 18,
                  "6": 31
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "optional" }
                        },
                        "function": "of",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "callExpr": {
                        "target": {
                          "id": "5",
                          "identExpr": { "name": "optional" }
                        },
                        "function": "none"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "optional_eq_int_int",
            "expression": "optional.of(1) == optional.of(1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": {
                  "1": 0,
                  "2": 11,
                  "3": 12,
                  "4": 15,
                  "5": 18,
                  "6": 29,
                  "7": 30
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "optional" }
                        },
                        "function": "of",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "callExpr": {
                        "target": {
                          "id": "5",
                          "identExpr": { "name": "optional" }
                        },
                        "function": "of",
                        "args": [
                          { "id": "7", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "optional_ne_none_none",
            "expression": "optional.none() != optional.none()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": { "1": 0, "2": 13, "3": 16, "4": 19, "5": 32 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "optional" }
                        },
                        "function": "none"
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "target": {
                          "id": "4",
                          "identExpr": { "name": "optional" }
                        },
                        "function": "none"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "optional_ne_none_int",
            "expression": "optional.none() != optional.of(1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": {
                  "1": 0,
                  "2": 13,
                  "3": 16,
                  "4": 19,
                  "5": 30,
                  "6": 31
                }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "optional" }
                        },
                        "function": "none"
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "target": {
                          "id": "4",
                          "identExpr": { "name": "optional" }
                        },
                        "function": "of",
                        "args": [
                          { "id": "6", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "optional_ne_int_none",
            "expression": "optional.of(1) != optional.none()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": {
                  "1": 0,
                  "2": 11,
                  "3": 12,
                  "4": 15,
                  "5": 18,
                  "6": 31
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "optional" }
                        },
                        "function": "of",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "callExpr": {
                        "target": {
                          "id": "5",
                          "identExpr": { "name": "optional" }
                        },
                        "function": "none"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "optional_ne_int_int",
            "expression": "optional.of(1) != optional.of(1)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": {
                  "1": 0,
                  "2": 11,
                  "3": 12,
                  "4": 15,
                  "5": 18,
                  "6": 29,
                  "7": 30
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "optional" }
                        },
                        "function": "of",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "callExpr": {
                        "target": {
                          "id": "5",
                          "identExpr": { "name": "optional" }
                        },
                        "function": "of",
                        "args": [
                          { "id": "7", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "parse",
    "sections": [
      {
        "name": "nest",
        "tests": [
          {
            "name": "list_index",
            "expression": "a[a[a[a[a[a[a[a[a[a[a[a[0]]]]]]]]]]]]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 2,
                  "4": 3,
                  "5": 4,
                  "6": 5,
                  "7": 6,
                  "8": 7,
                  "9": 8,
                  "10": 9,
                  "11": 10,
                  "12": 11,
                  "13": 12,
                  "14": 13,
                  "15": 14,
                  "16": 15,
                  "17": 16,
                  "18": 17,
                  "19": 18,
                  "20": 19,
                  "21": 20,
                  "22": 21,
                  "23": 22,
                  "24": 23,
                  "25": 24
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    { "id": "1", "identExpr": { "name": "a" } },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "_[_]",
                        "args": [
                          { "id": "3", "identExpr": { "name": "a" } },
                          {
                            "id": "6",
                            "callExpr": {
                              "function": "_[_]",
                              "args": [
                                { "id": "5", "identExpr": { "name": "a" } },
                                {
                                  "id": "8",
                                  "callExpr": {
                                    "function": "_[_]",
                                    "args": [
                                      {
                                        "id": "7",
                                        "identExpr": { "name": "a" }
                                      },
                                      {
                                        "id": "10",
                                        "callExpr": {
                                          "function": "_[_]",
                                          "args": [
                                            {
                                              "id": "9",
                                              "identExpr": { "name": "a" }
                                            },
                                            {
                                              "id": "12",
                                              "callExpr": {
                                                "function": "_[_]",
                                                "args": [
                                                  {
                                                    "id": "11",
                                                    "identExpr": { "name": "a" }
                                                  },
                                                  {
                                                    "id": "14",
                                                    "callExpr": {
                                                      "function": "_[_]",
                                                      "args": [
                                                        {
                                                          "id": "13",
                                                          "identExpr": {
                                                            "name": "a"
                                                          }
                                                        },
                                                        {
                                                          "id": "16",
                                                          "callExpr": {
                                                            "function": "_[_]",
                                                            "args": [
                                                              {
                                                                "id": "15",
                                                                "identExpr": {
                                                                  "name": "a"
                                                                }
                                                              },
                                                              {
                                                                "id": "18",
                                                                "callExpr": {
                                                                  "function": "_[_]",
                                                                  "args": [
                                                                    {
                                                                      "id": "17",
                                                                      "identExpr": {
                                                                        "name": "a"
                                                                      }
                                                                    },
                                                                    {
                                                                      "id": "20",
                                                                      "callExpr": {
                                                                        "function": "_[_]",
                                                                        "args": [
                                                                          {
                                                                            "id": "19",
                                                                            "identExpr": {
                                                                              "name": "a"
                                                                            }
                                                                          },
                                                                          {
                                                                            "id": "22",
                                                                            "callExpr": {
                                                                              "function": "_[_]",
                                                                              "args": [
                                                                                {
                                                                                  "id": "21",
                                                                                  "identExpr": {
                                                                                    "name": "a"
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "id": "24",
                                                                                  "callExpr": {
                                                                                    "function": "_[_]",
                                                                                    "args": [
                                                                                      {
                                                                                        "id": "23",
                                                                                        "identExpr": {
                                                                                          "name": "a"
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "id": "25",
                                                                                        "constExpr": {
                                                                                          "int64Value": "0"
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "message_literal",
            "expression": "NestedTestAllTypes{child: NestedTestAllTypes{child: NestedTestAllTypes{child: NestedTestAllTypes{child: NestedTestAllTypes{child: NestedTestAllTypes{child: NestedTestAllTypes{child: NestedTestAllTypes{child: NestedTestAllTypes{child: NestedTestAllTypes{child: NestedTestAllTypes{payload: TestAllTypes{single_int64: 137}}}}}}}}}}}}.payload.single_int64",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [352],
                "positions": {
                  "1": 18,
                  "2": 24,
                  "3": 44,
                  "4": 50,
                  "5": 70,
                  "6": 76,
                  "7": 96,
                  "8": 102,
                  "9": 122,
                  "10": 128,
                  "11": 148,
                  "12": 154,
                  "13": 174,
                  "14": 180,
                  "15": 200,
                  "16": 206,
                  "17": 226,
                  "18": 232,
                  "19": 252,
                  "20": 258,
                  "21": 278,
                  "22": 286,
                  "23": 300,
                  "24": 313,
                  "25": 315,
                  "26": 330,
                  "27": 338
                }
              },
              "expr": {
                "id": "27",
                "selectExpr": {
                  "operand": {
                    "id": "26",
                    "selectExpr": {
                      "operand": {
                        "id": "1",
                        "structExpr": {
                          "messageName": "NestedTestAllTypes",
                          "entries": [
                            {
                              "id": "2",
                              "fieldKey": "child",
                              "value": {
                                "id": "3",
                                "structExpr": {
                                  "messageName": "NestedTestAllTypes",
                                  "entries": [
                                    {
                                      "id": "4",
                                      "fieldKey": "child",
                                      "value": {
                                        "id": "5",
                                        "structExpr": {
                                          "messageName": "NestedTestAllTypes",
                                          "entries": [
                                            {
                                              "id": "6",
                                              "fieldKey": "child",
                                              "value": {
                                                "id": "7",
                                                "structExpr": {
                                                  "messageName": "NestedTestAllTypes",
                                                  "entries": [
                                                    {
                                                      "id": "8",
                                                      "fieldKey": "child",
                                                      "value": {
                                                        "id": "9",
                                                        "structExpr": {
                                                          "messageName": "NestedTestAllTypes",
                                                          "entries": [
                                                            {
                                                              "id": "10",
                                                              "fieldKey": "child",
                                                              "value": {
                                                                "id": "11",
                                                                "structExpr": {
                                                                  "messageName": "NestedTestAllTypes",
                                                                  "entries": [
                                                                    {
                                                                      "id": "12",
                                                                      "fieldKey": "child",
                                                                      "value": {
                                                                        "id": "13",
                                                                        "structExpr": {
                                                                          "messageName": "NestedTestAllTypes",
                                                                          "entries": [
                                                                            {
                                                                              "id": "14",
                                                                              "fieldKey": "child",
                                                                              "value": {
                                                                                "id": "15",
                                                                                "structExpr": {
                                                                                  "messageName": "NestedTestAllTypes",
                                                                                  "entries": [
                                                                                    {
                                                                                      "id": "16",
                                                                                      "fieldKey": "child",
                                                                                      "value": {
                                                                                        "id": "17",
                                                                                        "structExpr": {
                                                                                          "messageName": "NestedTestAllTypes",
                                                                                          "entries": [
                                                                                            {
                                                                                              "id": "18",
                                                                                              "fieldKey": "child",
                                                                                              "value": {
                                                                                                "id": "19",
                                                                                                "structExpr": {
                                                                                                  "messageName": "NestedTestAllTypes",
                                                                                                  "entries": [
                                                                                                    {
                                                                                                      "id": "20",
                                                                                                      "fieldKey": "child",
                                                                                                      "value": {
                                                                                                        "id": "21",
                                                                                                        "structExpr": {
                                                                                                          "messageName": "NestedTestAllTypes",
                                                                                                          "entries": [
                                                                                                            {
                                                                                                              "id": "22",
                                                                                                              "fieldKey": "payload",
                                                                                                              "value": {
                                                                                                                "id": "23",
                                                                                                                "structExpr": {
                                                                                                                  "messageName": "TestAllTypes",
                                                                                                                  "entries": [
                                                                                                                    {
                                                                                                                      "id": "24",
                                                                                                                      "fieldKey": "single_int64",
                                                                                                                      "value": {
                                                                                                                        "id": "25",
                                                                                                                        "constExpr": {
                                                                                                                          "int64Value": "137"
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  ]
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          ]
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      },
                      "field": "payload"
                    }
                  },
                  "field": "single_int64"
                }
              }
            }
          },
          {
            "name": "funcall",
            "expression": "int(uint(int(uint(int(uint(int(uint(int(uint(int(uint(7))))))))))))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [68],
                "positions": {
                  "1": 3,
                  "2": 8,
                  "3": 12,
                  "4": 17,
                  "5": 21,
                  "6": 26,
                  "7": 30,
                  "8": 35,
                  "9": 39,
                  "10": 44,
                  "11": 48,
                  "12": 53,
                  "13": 54
                }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "uint",
                        "args": [
                          {
                            "id": "3",
                            "callExpr": {
                              "function": "int",
                              "args": [
                                {
                                  "id": "4",
                                  "callExpr": {
                                    "function": "uint",
                                    "args": [
                                      {
                                        "id": "5",
                                        "callExpr": {
                                          "function": "int",
                                          "args": [
                                            {
                                              "id": "6",
                                              "callExpr": {
                                                "function": "uint",
                                                "args": [
                                                  {
                                                    "id": "7",
                                                    "callExpr": {
                                                      "function": "int",
                                                      "args": [
                                                        {
                                                          "id": "8",
                                                          "callExpr": {
                                                            "function": "uint",
                                                            "args": [
                                                              {
                                                                "id": "9",
                                                                "callExpr": {
                                                                  "function": "int",
                                                                  "args": [
                                                                    {
                                                                      "id": "10",
                                                                      "callExpr": {
                                                                        "function": "uint",
                                                                        "args": [
                                                                          {
                                                                            "id": "11",
                                                                            "callExpr": {
                                                                              "function": "int",
                                                                              "args": [
                                                                                {
                                                                                  "id": "12",
                                                                                  "callExpr": {
                                                                                    "function": "uint",
                                                                                    "args": [
                                                                                      {
                                                                                        "id": "13",
                                                                                        "constExpr": {
                                                                                          "int64Value": "7"
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "list_literal",
            "expression": "size([[[[[[[[[[[[0]]]]]]]]]]]])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 4,
                  "2": 5,
                  "3": 6,
                  "4": 7,
                  "5": 8,
                  "6": 9,
                  "7": 10,
                  "8": 11,
                  "9": 12,
                  "10": 13,
                  "11": 14,
                  "12": 15,
                  "13": 16,
                  "14": 17
                }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "size",
                  "args": [
                    {
                      "id": "2",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "3",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "4",
                                  "listExpr": {
                                    "elements": [
                                      {
                                        "id": "5",
                                        "listExpr": {
                                          "elements": [
                                            {
                                              "id": "6",
                                              "listExpr": {
                                                "elements": [
                                                  {
                                                    "id": "7",
                                                    "listExpr": {
                                                      "elements": [
                                                        {
                                                          "id": "8",
                                                          "listExpr": {
                                                            "elements": [
                                                              {
                                                                "id": "9",
                                                                "listExpr": {
                                                                  "elements": [
                                                                    {
                                                                      "id": "10",
                                                                      "listExpr": {
                                                                        "elements": [
                                                                          {
                                                                            "id": "11",
                                                                            "listExpr": {
                                                                              "elements": [
                                                                                {
                                                                                  "id": "12",
                                                                                  "listExpr": {
                                                                                    "elements": [
                                                                                      {
                                                                                        "id": "13",
                                                                                        "listExpr": {
                                                                                          "elements": [
                                                                                            {
                                                                                              "id": "14",
                                                                                              "constExpr": {
                                                                                                "int64Value": "0"
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "map_literal",
            "expression": "size({0: {0: {0: {0: {0: {0: {0: {0: {0: {0: {0: {0: 'foo'}}}}}}}}}}}})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [72],
                "positions": {
                  "1": 4,
                  "2": 5,
                  "3": 7,
                  "4": 6,
                  "5": 9,
                  "6": 11,
                  "7": 10,
                  "8": 13,
                  "9": 15,
                  "10": 14,
                  "11": 17,
                  "12": 19,
                  "13": 18,
                  "14": 21,
                  "15": 23,
                  "16": 22,
                  "17": 25,
                  "18": 27,
                  "19": 26,
                  "20": 29,
                  "21": 31,
                  "22": 30,
                  "23": 33,
                  "24": 35,
                  "25": 34,
                  "26": 37,
                  "27": 39,
                  "28": 38,
                  "29": 41,
                  "30": 43,
                  "31": 42,
                  "32": 45,
                  "33": 47,
                  "34": 46,
                  "35": 49,
                  "36": 51,
                  "37": 50,
                  "38": 53
                }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "size",
                  "args": [
                    {
                      "id": "2",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "3",
                            "mapKey": {
                              "id": "4",
                              "constExpr": { "int64Value": "0" }
                            },
                            "value": {
                              "id": "5",
                              "structExpr": {
                                "entries": [
                                  {
                                    "id": "6",
                                    "mapKey": {
                                      "id": "7",
                                      "constExpr": { "int64Value": "0" }
                                    },
                                    "value": {
                                      "id": "8",
                                      "structExpr": {
                                        "entries": [
                                          {
                                            "id": "9",
                                            "mapKey": {
                                              "id": "10",
                                              "constExpr": { "int64Value": "0" }
                                            },
                                            "value": {
                                              "id": "11",
                                              "structExpr": {
                                                "entries": [
                                                  {
                                                    "id": "12",
                                                    "mapKey": {
                                                      "id": "13",
                                                      "constExpr": {
                                                        "int64Value": "0"
                                                      }
                                                    },
                                                    "value": {
                                                      "id": "14",
                                                      "structExpr": {
                                                        "entries": [
                                                          {
                                                            "id": "15",
                                                            "mapKey": {
                                                              "id": "16",
                                                              "constExpr": {
                                                                "int64Value": "0"
                                                              }
                                                            },
                                                            "value": {
                                                              "id": "17",
                                                              "structExpr": {
                                                                "entries": [
                                                                  {
                                                                    "id": "18",
                                                                    "mapKey": {
                                                                      "id": "19",
                                                                      "constExpr": {
                                                                        "int64Value": "0"
                                                                      }
                                                                    },
                                                                    "value": {
                                                                      "id": "20",
                                                                      "structExpr": {
                                                                        "entries": [
                                                                          {
                                                                            "id": "21",
                                                                            "mapKey": {
                                                                              "id": "22",
                                                                              "constExpr": {
                                                                                "int64Value": "0"
                                                                              }
                                                                            },
                                                                            "value": {
                                                                              "id": "23",
                                                                              "structExpr": {
                                                                                "entries": [
                                                                                  {
                                                                                    "id": "24",
                                                                                    "mapKey": {
                                                                                      "id": "25",
                                                                                      "constExpr": {
                                                                                        "int64Value": "0"
                                                                                      }
                                                                                    },
                                                                                    "value": {
                                                                                      "id": "26",
                                                                                      "structExpr": {
                                                                                        "entries": [
                                                                                          {
                                                                                            "id": "27",
                                                                                            "mapKey": {
                                                                                              "id": "28",
                                                                                              "constExpr": {
                                                                                                "int64Value": "0"
                                                                                              }
                                                                                            },
                                                                                            "value": {
                                                                                              "id": "29",
                                                                                              "structExpr": {
                                                                                                "entries": [
                                                                                                  {
                                                                                                    "id": "30",
                                                                                                    "mapKey": {
                                                                                                      "id": "31",
                                                                                                      "constExpr": {
                                                                                                        "int64Value": "0"
                                                                                                      }
                                                                                                    },
                                                                                                    "value": {
                                                                                                      "id": "32",
                                                                                                      "structExpr": {
                                                                                                        "entries": [
                                                                                                          {
                                                                                                            "id": "33",
                                                                                                            "mapKey": {
                                                                                                              "id": "34",
                                                                                                              "constExpr": {
                                                                                                                "int64Value": "0"
                                                                                                              }
                                                                                                            },
                                                                                                            "value": {
                                                                                                              "id": "35",
                                                                                                              "structExpr": {
                                                                                                                "entries": [
                                                                                                                  {
                                                                                                                    "id": "36",
                                                                                                                    "mapKey": {
                                                                                                                      "id": "37",
                                                                                                                      "constExpr": {
                                                                                                                        "int64Value": "0"
                                                                                                                      }
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                      "id": "38",
                                                                                                                      "constExpr": {
                                                                                                                        "stringValue": "foo"
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                ]
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        ]
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "repeat",
        "tests": [
          {
            "name": "conditional",
            "expression": "true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : true ? true : false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [342],
                "positions": {
                  "1": 0,
                  "2": 5,
                  "3": 7,
                  "4": 14,
                  "5": 19,
                  "6": 21,
                  "7": 28,
                  "8": 33,
                  "9": 35,
                  "10": 42,
                  "11": 47,
                  "12": 49,
                  "13": 56,
                  "14": 61,
                  "15": 63,
                  "16": 70,
                  "17": 75,
                  "18": 77,
                  "19": 84,
                  "20": 89,
                  "21": 91,
                  "22": 98,
                  "23": 103,
                  "24": 105,
                  "25": 112,
                  "26": 117,
                  "27": 119,
                  "28": 126,
                  "29": 131,
                  "30": 133,
                  "31": 140,
                  "32": 145,
                  "33": 147,
                  "34": 154,
                  "35": 159,
                  "36": 161,
                  "37": 168,
                  "38": 173,
                  "39": 175,
                  "40": 182,
                  "41": 187,
                  "42": 189,
                  "43": 196,
                  "44": 201,
                  "45": 203,
                  "46": 210,
                  "47": 215,
                  "48": 217,
                  "49": 224,
                  "50": 229,
                  "51": 231,
                  "52": 238,
                  "53": 243,
                  "54": 245,
                  "55": 252,
                  "56": 257,
                  "57": 259,
                  "58": 266,
                  "59": 271,
                  "60": 273,
                  "61": 280,
                  "62": 285,
                  "63": 287,
                  "64": 294,
                  "65": 299,
                  "66": 301,
                  "67": 308,
                  "68": 313,
                  "69": 315,
                  "70": 322,
                  "71": 327,
                  "72": 329,
                  "73": 336
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_?_:_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    { "id": "3", "constExpr": { "boolValue": true } },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "_?_:_",
                        "args": [
                          { "id": "4", "constExpr": { "boolValue": true } },
                          { "id": "6", "constExpr": { "boolValue": true } },
                          {
                            "id": "8",
                            "callExpr": {
                              "function": "_?_:_",
                              "args": [
                                {
                                  "id": "7",
                                  "constExpr": { "boolValue": true }
                                },
                                {
                                  "id": "9",
                                  "constExpr": { "boolValue": true }
                                },
                                {
                                  "id": "11",
                                  "callExpr": {
                                    "function": "_?_:_",
                                    "args": [
                                      {
                                        "id": "10",
                                        "constExpr": { "boolValue": true }
                                      },
                                      {
                                        "id": "12",
                                        "constExpr": { "boolValue": true }
                                      },
                                      {
                                        "id": "14",
                                        "callExpr": {
                                          "function": "_?_:_",
                                          "args": [
                                            {
                                              "id": "13",
                                              "constExpr": { "boolValue": true }
                                            },
                                            {
                                              "id": "15",
                                              "constExpr": { "boolValue": true }
                                            },
                                            {
                                              "id": "17",
                                              "callExpr": {
                                                "function": "_?_:_",
                                                "args": [
                                                  {
                                                    "id": "16",
                                                    "constExpr": {
                                                      "boolValue": true
                                                    }
                                                  },
                                                  {
                                                    "id": "18",
                                                    "constExpr": {
                                                      "boolValue": true
                                                    }
                                                  },
                                                  {
                                                    "id": "20",
                                                    "callExpr": {
                                                      "function": "_?_:_",
                                                      "args": [
                                                        {
                                                          "id": "19",
                                                          "constExpr": {
                                                            "boolValue": true
                                                          }
                                                        },
                                                        {
                                                          "id": "21",
                                                          "constExpr": {
                                                            "boolValue": true
                                                          }
                                                        },
                                                        {
                                                          "id": "23",
                                                          "callExpr": {
                                                            "function": "_?_:_",
                                                            "args": [
                                                              {
                                                                "id": "22",
                                                                "constExpr": {
                                                                  "boolValue": true
                                                                }
                                                              },
                                                              {
                                                                "id": "24",
                                                                "constExpr": {
                                                                  "boolValue": true
                                                                }
                                                              },
                                                              {
                                                                "id": "26",
                                                                "callExpr": {
                                                                  "function": "_?_:_",
                                                                  "args": [
                                                                    {
                                                                      "id": "25",
                                                                      "constExpr": {
                                                                        "boolValue": true
                                                                      }
                                                                    },
                                                                    {
                                                                      "id": "27",
                                                                      "constExpr": {
                                                                        "boolValue": true
                                                                      }
                                                                    },
                                                                    {
                                                                      "id": "29",
                                                                      "callExpr": {
                                                                        "function": "_?_:_",
                                                                        "args": [
                                                                          {
                                                                            "id": "28",
                                                                            "constExpr": {
                                                                              "boolValue": true
                                                                            }
                                                                          },
                                                                          {
                                                                            "id": "30",
                                                                            "constExpr": {
                                                                              "boolValue": true
                                                                            }
                                                                          },
                                                                          {
                                                                            "id": "32",
                                                                            "callExpr": {
                                                                              "function": "_?_:_",
                                                                              "args": [
                                                                                {
                                                                                  "id": "31",
                                                                                  "constExpr": {
                                                                                    "boolValue": true
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "id": "33",
                                                                                  "constExpr": {
                                                                                    "boolValue": true
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "id": "35",
                                                                                  "callExpr": {
                                                                                    "function": "_?_:_",
                                                                                    "args": [
                                                                                      {
                                                                                        "id": "34",
                                                                                        "constExpr": {
                                                                                          "boolValue": true
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "id": "36",
                                                                                        "constExpr": {
                                                                                          "boolValue": true
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "id": "38",
                                                                                        "callExpr": {
                                                                                          "function": "_?_:_",
                                                                                          "args": [
                                                                                            {
                                                                                              "id": "37",
                                                                                              "constExpr": {
                                                                                                "boolValue": true
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "id": "39",
                                                                                              "constExpr": {
                                                                                                "boolValue": true
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "id": "41",
                                                                                              "callExpr": {
                                                                                                "function": "_?_:_",
                                                                                                "args": [
                                                                                                  {
                                                                                                    "id": "40",
                                                                                                    "constExpr": {
                                                                                                      "boolValue": true
                                                                                                    }
                                                                                                  },
                                                                                                  {
                                                                                                    "id": "42",
                                                                                                    "constExpr": {
                                                                                                      "boolValue": true
                                                                                                    }
                                                                                                  },
                                                                                                  {
                                                                                                    "id": "44",
                                                                                                    "callExpr": {
                                                                                                      "function": "_?_:_",
                                                                                                      "args": [
                                                                                                        {
                                                                                                          "id": "43",
                                                                                                          "constExpr": {
                                                                                                            "boolValue": true
                                                                                                          }
                                                                                                        },
                                                                                                        {
                                                                                                          "id": "45",
                                                                                                          "constExpr": {
                                                                                                            "boolValue": true
                                                                                                          }
                                                                                                        },
                                                                                                        {
                                                                                                          "id": "47",
                                                                                                          "callExpr": {
                                                                                                            "function": "_?_:_",
                                                                                                            "args": [
                                                                                                              {
                                                                                                                "id": "46",
                                                                                                                "constExpr": {
                                                                                                                  "boolValue": true
                                                                                                                }
                                                                                                              },
                                                                                                              {
                                                                                                                "id": "48",
                                                                                                                "constExpr": {
                                                                                                                  "boolValue": true
                                                                                                                }
                                                                                                              },
                                                                                                              {
                                                                                                                "id": "50",
                                                                                                                "callExpr": {
                                                                                                                  "function": "_?_:_",
                                                                                                                  "args": [
                                                                                                                    {
                                                                                                                      "id": "49",
                                                                                                                      "constExpr": {
                                                                                                                        "boolValue": true
                                                                                                                      }
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "id": "51",
                                                                                                                      "constExpr": {
                                                                                                                        "boolValue": true
                                                                                                                      }
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "id": "53",
                                                                                                                      "callExpr": {
                                                                                                                        "function": "_?_:_",
                                                                                                                        "args": [
                                                                                                                          {
                                                                                                                            "id": "52",
                                                                                                                            "constExpr": {
                                                                                                                              "boolValue": true
                                                                                                                            }
                                                                                                                          },
                                                                                                                          {
                                                                                                                            "id": "54",
                                                                                                                            "constExpr": {
                                                                                                                              "boolValue": true
                                                                                                                            }
                                                                                                                          },
                                                                                                                          {
                                                                                                                            "id": "56",
                                                                                                                            "callExpr": {
                                                                                                                              "function": "_?_:_",
                                                                                                                              "args": [
                                                                                                                                {
                                                                                                                                  "id": "55",
                                                                                                                                  "constExpr": {
                                                                                                                                    "boolValue": true
                                                                                                                                  }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "id": "57",
                                                                                                                                  "constExpr": {
                                                                                                                                    "boolValue": true
                                                                                                                                  }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "id": "59",
                                                                                                                                  "callExpr": {
                                                                                                                                    "function": "_?_:_",
                                                                                                                                    "args": [
                                                                                                                                      {
                                                                                                                                        "id": "58",
                                                                                                                                        "constExpr": {
                                                                                                                                          "boolValue": true
                                                                                                                                        }
                                                                                                                                      },
                                                                                                                                      {
                                                                                                                                        "id": "60",
                                                                                                                                        "constExpr": {
                                                                                                                                          "boolValue": true
                                                                                                                                        }
                                                                                                                                      },
                                                                                                                                      {
                                                                                                                                        "id": "62",
                                                                                                                                        "callExpr": {
                                                                                                                                          "function": "_?_:_",
                                                                                                                                          "args": [
                                                                                                                                            {
                                                                                                                                              "id": "61",
                                                                                                                                              "constExpr": {
                                                                                                                                                "boolValue": true
                                                                                                                                              }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                              "id": "63",
                                                                                                                                              "constExpr": {
                                                                                                                                                "boolValue": true
                                                                                                                                              }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                              "id": "65",
                                                                                                                                              "callExpr": {
                                                                                                                                                "function": "_?_:_",
                                                                                                                                                "args": [
                                                                                                                                                  {
                                                                                                                                                    "id": "64",
                                                                                                                                                    "constExpr": {
                                                                                                                                                      "boolValue": true
                                                                                                                                                    }
                                                                                                                                                  },
                                                                                                                                                  {
                                                                                                                                                    "id": "66",
                                                                                                                                                    "constExpr": {
                                                                                                                                                      "boolValue": true
                                                                                                                                                    }
                                                                                                                                                  },
                                                                                                                                                  {
                                                                                                                                                    "id": "68",
                                                                                                                                                    "callExpr": {
                                                                                                                                                      "function": "_?_:_",
                                                                                                                                                      "args": [
                                                                                                                                                        {
                                                                                                                                                          "id": "67",
                                                                                                                                                          "constExpr": {
                                                                                                                                                            "boolValue": true
                                                                                                                                                          }
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                          "id": "69",
                                                                                                                                                          "constExpr": {
                                                                                                                                                            "boolValue": true
                                                                                                                                                          }
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                          "id": "71",
                                                                                                                                                          "callExpr": {
                                                                                                                                                            "function": "_?_:_",
                                                                                                                                                            "args": [
                                                                                                                                                              {
                                                                                                                                                                "id": "70",
                                                                                                                                                                "constExpr": {
                                                                                                                                                                  "boolValue": true
                                                                                                                                                                }
                                                                                                                                                              },
                                                                                                                                                              {
                                                                                                                                                                "id": "72",
                                                                                                                                                                "constExpr": {
                                                                                                                                                                  "boolValue": true
                                                                                                                                                                }
                                                                                                                                                              },
                                                                                                                                                              {
                                                                                                                                                                "id": "73",
                                                                                                                                                                "constExpr": {
                                                                                                                                                                  "boolValue": false
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            ]
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      ]
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                ]
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          ]
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    ]
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              ]
                                                                                                                            }
                                                                                                                          }
                                                                                                                        ]
                                                                                                                      }
                                                                                                                    }
                                                                                                                  ]
                                                                                                                }
                                                                                                              }
                                                                                                            ]
                                                                                                          }
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "or",
            "expression": "false || false || false || false || false || false || false || false || false || false || false || false || false || false || false || false || false || false || false || false || false || false || false || false || false || false || false || false || false || false || false || false || true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [293],
                "positions": {
                  "1": 0,
                  "2": 9,
                  "3": 6,
                  "4": 18,
                  "5": 15,
                  "6": 27,
                  "7": 24,
                  "8": 36,
                  "9": 33,
                  "10": 45,
                  "11": 42,
                  "12": 54,
                  "13": 51,
                  "14": 63,
                  "15": 60,
                  "16": 72,
                  "17": 69,
                  "18": 81,
                  "19": 78,
                  "20": 90,
                  "21": 87,
                  "22": 99,
                  "23": 96,
                  "24": 108,
                  "25": 105,
                  "26": 117,
                  "27": 114,
                  "28": 126,
                  "29": 123,
                  "30": 135,
                  "31": 132,
                  "32": 144,
                  "33": 141,
                  "34": 153,
                  "35": 150,
                  "36": 162,
                  "37": 159,
                  "38": 171,
                  "39": 168,
                  "40": 180,
                  "41": 177,
                  "42": 189,
                  "43": 186,
                  "44": 198,
                  "45": 195,
                  "46": 207,
                  "47": 204,
                  "48": 216,
                  "49": 213,
                  "50": 225,
                  "51": 222,
                  "52": 234,
                  "53": 231,
                  "54": 243,
                  "55": 240,
                  "56": 252,
                  "57": 249,
                  "58": 261,
                  "59": 258,
                  "60": 270,
                  "61": 267,
                  "62": 279,
                  "63": 276,
                  "64": 288,
                  "65": 285
                }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_||_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": false } },
                    { "id": "2", "constExpr": { "boolValue": false } },
                    { "id": "4", "constExpr": { "boolValue": false } },
                    { "id": "6", "constExpr": { "boolValue": false } },
                    { "id": "8", "constExpr": { "boolValue": false } },
                    { "id": "10", "constExpr": { "boolValue": false } },
                    { "id": "12", "constExpr": { "boolValue": false } },
                    { "id": "14", "constExpr": { "boolValue": false } },
                    { "id": "16", "constExpr": { "boolValue": false } },
                    { "id": "18", "constExpr": { "boolValue": false } },
                    { "id": "20", "constExpr": { "boolValue": false } },
                    { "id": "22", "constExpr": { "boolValue": false } },
                    { "id": "24", "constExpr": { "boolValue": false } },
                    { "id": "26", "constExpr": { "boolValue": false } },
                    { "id": "28", "constExpr": { "boolValue": false } },
                    { "id": "30", "constExpr": { "boolValue": false } },
                    { "id": "32", "constExpr": { "boolValue": false } },
                    { "id": "34", "constExpr": { "boolValue": false } },
                    { "id": "36", "constExpr": { "boolValue": false } },
                    { "id": "38", "constExpr": { "boolValue": false } },
                    { "id": "40", "constExpr": { "boolValue": false } },
                    { "id": "42", "constExpr": { "boolValue": false } },
                    { "id": "44", "constExpr": { "boolValue": false } },
                    { "id": "46", "constExpr": { "boolValue": false } },
                    { "id": "48", "constExpr": { "boolValue": false } },
                    { "id": "50", "constExpr": { "boolValue": false } },
                    { "id": "52", "constExpr": { "boolValue": false } },
                    { "id": "54", "constExpr": { "boolValue": false } },
                    { "id": "56", "constExpr": { "boolValue": false } },
                    { "id": "58", "constExpr": { "boolValue": false } },
                    { "id": "60", "constExpr": { "boolValue": false } },
                    { "id": "62", "constExpr": { "boolValue": false } },
                    { "id": "64", "constExpr": { "boolValue": true } }
                  ]
                }
              }
            }
          },
          {
            "name": "and",
            "expression": "true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 true \u0026\u0026 false",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [262],
                "positions": {
                  "1": 0,
                  "2": 8,
                  "3": 5,
                  "4": 16,
                  "5": 13,
                  "6": 24,
                  "7": 21,
                  "8": 32,
                  "9": 29,
                  "10": 40,
                  "11": 37,
                  "12": 48,
                  "13": 45,
                  "14": 56,
                  "15": 53,
                  "16": 64,
                  "17": 61,
                  "18": 72,
                  "19": 69,
                  "20": 80,
                  "21": 77,
                  "22": 88,
                  "23": 85,
                  "24": 96,
                  "25": 93,
                  "26": 104,
                  "27": 101,
                  "28": 112,
                  "29": 109,
                  "30": 120,
                  "31": 117,
                  "32": 128,
                  "33": 125,
                  "34": 136,
                  "35": 133,
                  "36": 144,
                  "37": 141,
                  "38": 152,
                  "39": 149,
                  "40": 160,
                  "41": 157,
                  "42": 168,
                  "43": 165,
                  "44": 176,
                  "45": 173,
                  "46": 184,
                  "47": 181,
                  "48": 192,
                  "49": 189,
                  "50": 200,
                  "51": 197,
                  "52": 208,
                  "53": 205,
                  "54": 216,
                  "55": 213,
                  "56": 224,
                  "57": 221,
                  "58": 232,
                  "59": 229,
                  "60": 240,
                  "61": 237,
                  "62": 248,
                  "63": 245,
                  "64": 256,
                  "65": 253
                }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u0026\u0026_",
                  "args": [
                    { "id": "1", "constExpr": { "boolValue": true } },
                    { "id": "2", "constExpr": { "boolValue": true } },
                    { "id": "4", "constExpr": { "boolValue": true } },
                    { "id": "6", "constExpr": { "boolValue": true } },
                    { "id": "8", "constExpr": { "boolValue": true } },
                    { "id": "10", "constExpr": { "boolValue": true } },
                    { "id": "12", "constExpr": { "boolValue": true } },
                    { "id": "14", "constExpr": { "boolValue": true } },
                    { "id": "16", "constExpr": { "boolValue": true } },
                    { "id": "18", "constExpr": { "boolValue": true } },
                    { "id": "20", "constExpr": { "boolValue": true } },
                    { "id": "22", "constExpr": { "boolValue": true } },
                    { "id": "24", "constExpr": { "boolValue": true } },
                    { "id": "26", "constExpr": { "boolValue": true } },
                    { "id": "28", "constExpr": { "boolValue": true } },
                    { "id": "30", "constExpr": { "boolValue": true } },
                    { "id": "32", "constExpr": { "boolValue": true } },
                    { "id": "34", "constExpr": { "boolValue": true } },
                    { "id": "36", "constExpr": { "boolValue": true } },
                    { "id": "38", "constExpr": { "boolValue": true } },
                    { "id": "40", "constExpr": { "boolValue": true } },
                    { "id": "42", "constExpr": { "boolValue": true } },
                    { "id": "44", "constExpr": { "boolValue": true } },
                    { "id": "46", "constExpr": { "boolValue": true } },
                    { "id": "48", "constExpr": { "boolValue": true } },
                    { "id": "50", "constExpr": { "boolValue": true } },
                    { "id": "52", "constExpr": { "boolValue": true } },
                    { "id": "54", "constExpr": { "boolValue": true } },
                    { "id": "56", "constExpr": { "boolValue": true } },
                    { "id": "58", "constExpr": { "boolValue": true } },
                    { "id": "60", "constExpr": { "boolValue": true } },
                    { "id": "62", "constExpr": { "boolValue": true } },
                    { "id": "64", "constExpr": { "boolValue": false } }
                  ]
                }
              }
            }
          },
          {
            "name": "add_sub",
            "expression": "3 - 3 + 3 - 3 + 3 - 3 + 3 - 3 + 3 - 3 + 3 - 3 + 3 - 3 + 3 - 3 + 3 - 3 + 3 - 3 + 3 - 3 + 3 - 3 + 3",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [98],
                "positions": {
                  "1": 0,
                  "2": 2,
                  "3": 4,
                  "4": 6,
                  "5": 8,
                  "6": 10,
                  "7": 12,
                  "8": 14,
                  "9": 16,
                  "10": 18,
                  "11": 20,
                  "12": 22,
                  "13": 24,
                  "14": 26,
                  "15": 28,
                  "16": 30,
                  "17": 32,
                  "18": 34,
                  "19": 36,
                  "20": 38,
                  "21": 40,
                  "22": 42,
                  "23": 44,
                  "24": 46,
                  "25": 48,
                  "26": 50,
                  "27": 52,
                  "28": 54,
                  "29": 56,
                  "30": 58,
                  "31": 60,
                  "32": 62,
                  "33": 64,
                  "34": 66,
                  "35": 68,
                  "36": 70,
                  "37": 72,
                  "38": 74,
                  "39": 76,
                  "40": 78,
                  "41": 80,
                  "42": 82,
                  "43": 84,
                  "44": 86,
                  "45": 88,
                  "46": 90,
                  "47": 92,
                  "48": 94,
                  "49": 96
                }
              },
              "expr": {
                "id": "48",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    {
                      "id": "46",
                      "callExpr": {
                        "function": "_-_",
                        "args": [
                          {
                            "id": "44",
                            "callExpr": {
                              "function": "_+_",
                              "args": [
                                {
                                  "id": "42",
                                  "callExpr": {
                                    "function": "_-_",
                                    "args": [
                                      {
                                        "id": "40",
                                        "callExpr": {
                                          "function": "_+_",
                                          "args": [
                                            {
                                              "id": "38",
                                              "callExpr": {
                                                "function": "_-_",
                                                "args": [
                                                  {
                                                    "id": "36",
                                                    "callExpr": {
                                                      "function": "_+_",
                                                      "args": [
                                                        {
                                                          "id": "34",
                                                          "callExpr": {
                                                            "function": "_-_",
                                                            "args": [
                                                              {
                                                                "id": "32",
                                                                "callExpr": {
                                                                  "function": "_+_",
                                                                  "args": [
                                                                    {
                                                                      "id": "30",
                                                                      "callExpr": {
                                                                        "function": "_-_",
                                                                        "args": [
                                                                          {
                                                                            "id": "28",
                                                                            "callExpr": {
                                                                              "function": "_+_",
                                                                              "args": [
                                                                                {
                                                                                  "id": "26",
                                                                                  "callExpr": {
                                                                                    "function": "_-_",
                                                                                    "args": [
                                                                                      {
                                                                                        "id": "24",
                                                                                        "callExpr": {
                                                                                          "function": "_+_",
                                                                                          "args": [
                                                                                            {
                                                                                              "id": "22",
                                                                                              "callExpr": {
                                                                                                "function": "_-_",
                                                                                                "args": [
                                                                                                  {
                                                                                                    "id": "20",
                                                                                                    "callExpr": {
                                                                                                      "function": "_+_",
                                                                                                      "args": [
                                                                                                        {
                                                                                                          "id": "18",
                                                                                                          "callExpr": {
                                                                                                            "function": "_-_",
                                                                                                            "args": [
                                                                                                              {
                                                                                                                "id": "16",
                                                                                                                "callExpr": {
                                                                                                                  "function": "_+_",
                                                                                                                  "args": [
                                                                                                                    {
                                                                                                                      "id": "14",
                                                                                                                      "callExpr": {
                                                                                                                        "function": "_-_",
                                                                                                                        "args": [
                                                                                                                          {
                                                                                                                            "id": "12",
                                                                                                                            "callExpr": {
                                                                                                                              "function": "_+_",
                                                                                                                              "args": [
                                                                                                                                {
                                                                                                                                  "id": "10",
                                                                                                                                  "callExpr": {
                                                                                                                                    "function": "_-_",
                                                                                                                                    "args": [
                                                                                                                                      {
                                                                                                                                        "id": "8",
                                                                                                                                        "callExpr": {
                                                                                                                                          "function": "_+_",
                                                                                                                                          "args": [
                                                                                                                                            {
                                                                                                                                              "id": "6",
                                                                                                                                              "callExpr": {
                                                                                                                                                "function": "_-_",
                                                                                                                                                "args": [
                                                                                                                                                  {
                                                                                                                                                    "id": "4",
                                                                                                                                                    "callExpr": {
                                                                                                                                                      "function": "_+_",
                                                                                                                                                      "args": [
                                                                                                                                                        {
                                                                                                                                                          "id": "2",
                                                                                                                                                          "callExpr": {
                                                                                                                                                            "function": "_-_",
                                                                                                                                                            "args": [
                                                                                                                                                              {
                                                                                                                                                                "id": "1",
                                                                                                                                                                "constExpr": {
                                                                                                                                                                  "int64Value": "3"
                                                                                                                                                                }
                                                                                                                                                              },
                                                                                                                                                              {
                                                                                                                                                                "id": "3",
                                                                                                                                                                "constExpr": {
                                                                                                                                                                  "int64Value": "3"
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            ]
                                                                                                                                                          }
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                          "id": "5",
                                                                                                                                                          "constExpr": {
                                                                                                                                                            "int64Value": "3"
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      ]
                                                                                                                                                    }
                                                                                                                                                  },
                                                                                                                                                  {
                                                                                                                                                    "id": "7",
                                                                                                                                                    "constExpr": {
                                                                                                                                                      "int64Value": "3"
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                ]
                                                                                                                                              }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                              "id": "9",
                                                                                                                                              "constExpr": {
                                                                                                                                                "int64Value": "3"
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          ]
                                                                                                                                        }
                                                                                                                                      },
                                                                                                                                      {
                                                                                                                                        "id": "11",
                                                                                                                                        "constExpr": {
                                                                                                                                          "int64Value": "3"
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    ]
                                                                                                                                  }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "id": "13",
                                                                                                                                  "constExpr": {
                                                                                                                                    "int64Value": "3"
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              ]
                                                                                                                            }
                                                                                                                          },
                                                                                                                          {
                                                                                                                            "id": "15",
                                                                                                                            "constExpr": {
                                                                                                                              "int64Value": "3"
                                                                                                                            }
                                                                                                                          }
                                                                                                                        ]
                                                                                                                      }
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "id": "17",
                                                                                                                      "constExpr": {
                                                                                                                        "int64Value": "3"
                                                                                                                      }
                                                                                                                    }
                                                                                                                  ]
                                                                                                                }
                                                                                                              },
                                                                                                              {
                                                                                                                "id": "19",
                                                                                                                "constExpr": {
                                                                                                                  "int64Value": "3"
                                                                                                                }
                                                                                                              }
                                                                                                            ]
                                                                                                          }
                                                                                                        },
                                                                                                        {
                                                                                                          "id": "21",
                                                                                                          "constExpr": {
                                                                                                            "int64Value": "3"
                                                                                                          }
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  },
                                                                                                  {
                                                                                                    "id": "23",
                                                                                                    "constExpr": {
                                                                                                      "int64Value": "3"
                                                                                                    }
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "id": "25",
                                                                                              "constExpr": {
                                                                                                "int64Value": "3"
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "id": "27",
                                                                                        "constExpr": {
                                                                                          "int64Value": "3"
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "id": "29",
                                                                                  "constExpr": {
                                                                                    "int64Value": "3"
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          },
                                                                          {
                                                                            "id": "31",
                                                                            "constExpr": {
                                                                              "int64Value": "3"
                                                                            }
                                                                          }
                                                                        ]
                                                                      }
                                                                    },
                                                                    {
                                                                      "id": "33",
                                                                      "constExpr": {
                                                                        "int64Value": "3"
                                                                      }
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              {
                                                                "id": "35",
                                                                "constExpr": {
                                                                  "int64Value": "3"
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "id": "37",
                                                          "constExpr": {
                                                            "int64Value": "3"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "id": "39",
                                                    "constExpr": {
                                                      "int64Value": "3"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "id": "41",
                                              "constExpr": { "int64Value": "3" }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "id": "43",
                                        "constExpr": { "int64Value": "3" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "45",
                                  "constExpr": { "int64Value": "3" }
                                }
                              ]
                            }
                          },
                          { "id": "47", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    { "id": "49", "constExpr": { "int64Value": "3" } }
                  ]
                }
              }
            }
          },
          {
            "name": "mul_div",
            "expression": "4 * 4 / 4 * 4 / 4 * 4 / 4 * 4 / 4 * 4 / 4 * 4 / 4 * 4 / 4 * 4 / 4 * 4 / 4 * 4 / 4 * 4 / 4 * 4 / 4",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [98],
                "positions": {
                  "1": 0,
                  "2": 2,
                  "3": 4,
                  "4": 6,
                  "5": 8,
                  "6": 10,
                  "7": 12,
                  "8": 14,
                  "9": 16,
                  "10": 18,
                  "11": 20,
                  "12": 22,
                  "13": 24,
                  "14": 26,
                  "15": 28,
                  "16": 30,
                  "17": 32,
                  "18": 34,
                  "19": 36,
                  "20": 38,
                  "21": 40,
                  "22": 42,
                  "23": 44,
                  "24": 46,
                  "25": 48,
                  "26": 50,
                  "27": 52,
                  "28": 54,
                  "29": 56,
                  "30": 58,
                  "31": 60,
                  "32": 62,
                  "33": 64,
                  "34": 66,
                  "35": 68,
                  "36": 70,
                  "37": 72,
                  "38": 74,
                  "39": 76,
                  "40": 78,
                  "41": 80,
                  "42": 82,
                  "43": 84,
                  "44": 86,
                  "45": 88,
                  "46": 90,
                  "47": 92,
                  "48": 94,
                  "49": 96
                }
              },
              "expr": {
                "id": "48",
                "callExpr": {
                  "function": "_/_",
                  "args": [
                    {
                      "id": "46",
                      "callExpr": {
                        "function": "_*_",
                        "args": [
                          {
                            "id": "44",
                            "callExpr": {
                              "function": "_/_",
                              "args": [
                                {
                                  "id": "42",
                                  "callExpr": {
                                    "function": "_*_",
                                    "args": [
                                      {
                                        "id": "40",
                                        "callExpr": {
                                          "function": "_/_",
                                          "args": [
                                            {
                                              "id": "38",
                                              "callExpr": {
                                                "function": "_*_",
                                                "args": [
                                                  {
                                                    "id": "36",
                                                    "callExpr": {
                                                      "function": "_/_",
                                                      "args": [
                                                        {
                                                          "id": "34",
                                                          "callExpr": {
                                                            "function": "_*_",
                                                            "args": [
                                                              {
                                                                "id": "32",
                                                                "callExpr": {
                                                                  "function": "_/_",
                                                                  "args": [
                                                                    {
                                                                      "id": "30",
                                                                      "callExpr": {
                                                                        "function": "_*_",
                                                                        "args": [
                                                                          {
                                                                            "id": "28",
                                                                            "callExpr": {
                                                                              "function": "_/_",
                                                                              "args": [
                                                                                {
                                                                                  "id": "26",
                                                                                  "callExpr": {
                                                                                    "function": "_*_",
                                                                                    "args": [
                                                                                      {
                                                                                        "id": "24",
                                                                                        "callExpr": {
                                                                                          "function": "_/_",
                                                                                          "args": [
                                                                                            {
                                                                                              "id": "22",
                                                                                              "callExpr": {
                                                                                                "function": "_*_",
                                                                                                "args": [
                                                                                                  {
                                                                                                    "id": "20",
                                                                                                    "callExpr": {
                                                                                                      "function": "_/_",
                                                                                                      "args": [
                                                                                                        {
                                                                                                          "id": "18",
                                                                                                          "callExpr": {
                                                                                                            "function": "_*_",
                                                                                                            "args": [
                                                                                                              {
                                                                                                                "id": "16",
                                                                                                                "callExpr": {
                                                                                                                  "function": "_/_",
                                                                                                                  "args": [
                                                                                                                    {
                                                                                                                      "id": "14",
                                                                                                                      "callExpr": {
                                                                                                                        "function": "_*_",
                                                                                                                        "args": [
                                                                                                                          {
                                                                                                                            "id": "12",
                                                                                                                            "callExpr": {
                                                                                                                              "function": "_/_",
                                                                                                                              "args": [
                                                                                                                                {
                                                                                                                                  "id": "10",
                                                                                                                                  "callExpr": {
                                                                                                                                    "function": "_*_",
                                                                                                                                    "args": [
                                                                                                                                      {
                                                                                                                                        "id": "8",
                                                                                                                                        "callExpr": {
                                                                                                                                          "function": "_/_",
                                                                                                                                          "args": [
                                                                                                                                            {
                                                                                                                                              "id": "6",
                                                                                                                                              "callExpr": {
                                                                                                                                                "function": "_*_",
                                                                                                                                                "args": [
                                                                                                                                                  {
                                                                                                                                                    "id": "4",
                                                                                                                                                    "callExpr": {
                                                                                                                                                      "function": "_/_",
                                                                                                                                                      "args": [
                                                                                                                                                        {
                                                                                                                                                          "id": "2",
                                                                                                                                                          "callExpr": {
                                                                                                                                                            "function": "_*_",
                                                                                                                                                            "args": [
                                                                                                                                                              {
                                                                                                                                                                "id": "1",
                                                                                                                                                                "constExpr": {
                                                                                                                                                                  "int64Value": "4"
                                                                                                                                                                }
                                                                                                                                                              },
                                                                                                                                                              {
                                                                                                                                                                "id": "3",
                                                                                                                                                                "constExpr": {
                                                                                                                                                                  "int64Value": "4"
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            ]
                                                                                                                                                          }
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                          "id": "5",
                                                                                                                                                          "constExpr": {
                                                                                                                                                            "int64Value": "4"
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      ]
                                                                                                                                                    }
                                                                                                                                                  },
                                                                                                                                                  {
                                                                                                                                                    "id": "7",
                                                                                                                                                    "constExpr": {
                                                                                                                                                      "int64Value": "4"
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                ]
                                                                                                                                              }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                              "id": "9",
                                                                                                                                              "constExpr": {
                                                                                                                                                "int64Value": "4"
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          ]
                                                                                                                                        }
                                                                                                                                      },
                                                                                                                                      {
                                                                                                                                        "id": "11",
                                                                                                                                        "constExpr": {
                                                                                                                                          "int64Value": "4"
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    ]
                                                                                                                                  }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "id": "13",
                                                                                                                                  "constExpr": {
                                                                                                                                    "int64Value": "4"
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              ]
                                                                                                                            }
                                                                                                                          },
                                                                                                                          {
                                                                                                                            "id": "15",
                                                                                                                            "constExpr": {
                                                                                                                              "int64Value": "4"
                                                                                                                            }
                                                                                                                          }
                                                                                                                        ]
                                                                                                                      }
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "id": "17",
                                                                                                                      "constExpr": {
                                                                                                                        "int64Value": "4"
                                                                                                                      }
                                                                                                                    }
                                                                                                                  ]
                                                                                                                }
                                                                                                              },
                                                                                                              {
                                                                                                                "id": "19",
                                                                                                                "constExpr": {
                                                                                                                  "int64Value": "4"
                                                                                                                }
                                                                                                              }
                                                                                                            ]
                                                                                                          }
                                                                                                        },
                                                                                                        {
                                                                                                          "id": "21",
                                                                                                          "constExpr": {
                                                                                                            "int64Value": "4"
                                                                                                          }
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  },
                                                                                                  {
                                                                                                    "id": "23",
                                                                                                    "constExpr": {
                                                                                                      "int64Value": "4"
                                                                                                    }
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "id": "25",
                                                                                              "constExpr": {
                                                                                                "int64Value": "4"
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "id": "27",
                                                                                        "constExpr": {
                                                                                          "int64Value": "4"
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "id": "29",
                                                                                  "constExpr": {
                                                                                    "int64Value": "4"
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          },
                                                                          {
                                                                            "id": "31",
                                                                            "constExpr": {
                                                                              "int64Value": "4"
                                                                            }
                                                                          }
                                                                        ]
                                                                      }
                                                                    },
                                                                    {
                                                                      "id": "33",
                                                                      "constExpr": {
                                                                        "int64Value": "4"
                                                                      }
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              {
                                                                "id": "35",
                                                                "constExpr": {
                                                                  "int64Value": "4"
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "id": "37",
                                                          "constExpr": {
                                                            "int64Value": "4"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "id": "39",
                                                    "constExpr": {
                                                      "int64Value": "4"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "id": "41",
                                              "constExpr": { "int64Value": "4" }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "id": "43",
                                        "constExpr": { "int64Value": "4" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "45",
                                  "constExpr": { "int64Value": "4" }
                                }
                              ]
                            }
                          },
                          { "id": "47", "constExpr": { "int64Value": "4" } }
                        ]
                      }
                    },
                    { "id": "49", "constExpr": { "int64Value": "4" } }
                  ]
                }
              }
            }
          },
          {
            "name": "not",
            "expression": "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!true",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 32 }
              },
              "expr": { "id": "1", "constExpr": { "boolValue": true } }
            }
          },
          {
            "name": "unary_neg",
            "expression": "--------------------------------19",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": { "1": 32 }
              },
              "expr": { "id": "1", "constExpr": { "int64Value": "19" } }
            }
          },
          {
            "name": "select",
            "expression": "NestedTestAllTypes{}.child.child.child.child.child.child.child.child.child.child.payload.single_int32",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [102],
                "positions": {
                  "1": 18,
                  "2": 20,
                  "3": 26,
                  "4": 32,
                  "5": 38,
                  "6": 44,
                  "7": 50,
                  "8": 56,
                  "9": 62,
                  "10": 68,
                  "11": 74,
                  "12": 80,
                  "13": 88
                }
              },
              "expr": {
                "id": "13",
                "selectExpr": {
                  "operand": {
                    "id": "12",
                    "selectExpr": {
                      "operand": {
                        "id": "11",
                        "selectExpr": {
                          "operand": {
                            "id": "10",
                            "selectExpr": {
                              "operand": {
                                "id": "9",
                                "selectExpr": {
                                  "operand": {
                                    "id": "8",
                                    "selectExpr": {
                                      "operand": {
                                        "id": "7",
                                        "selectExpr": {
                                          "operand": {
                                            "id": "6",
                                            "selectExpr": {
                                              "operand": {
                                                "id": "5",
                                                "selectExpr": {
                                                  "operand": {
                                                    "id": "4",
                                                    "selectExpr": {
                                                      "operand": {
                                                        "id": "3",
                                                        "selectExpr": {
                                                          "operand": {
                                                            "id": "2",
                                                            "selectExpr": {
                                                              "operand": {
                                                                "id": "1",
                                                                "structExpr": {
                                                                  "messageName": "NestedTestAllTypes"
                                                                }
                                                              },
                                                              "field": "child"
                                                            }
                                                          },
                                                          "field": "child"
                                                        }
                                                      },
                                                      "field": "child"
                                                    }
                                                  },
                                                  "field": "child"
                                                }
                                              },
                                              "field": "child"
                                            }
                                          },
                                          "field": "child"
                                        }
                                      },
                                      "field": "child"
                                    }
                                  },
                                  "field": "child"
                                }
                              },
                              "field": "child"
                            }
                          },
                          "field": "child"
                        }
                      },
                      "field": "payload"
                    }
                  },
                  "field": "single_int32"
                }
              }
            }
          },
          {
            "name": "index",
            "expression": "[[[[[[[[[[[['foo']]]]]]]]]]]][0][0][0][0][0][0][0][0][0][0][0][0]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [66],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 2,
                  "4": 3,
                  "5": 4,
                  "6": 5,
                  "7": 6,
                  "8": 7,
                  "9": 8,
                  "10": 9,
                  "11": 10,
                  "12": 11,
                  "13": 12,
                  "14": 29,
                  "15": 30,
                  "16": 32,
                  "17": 33,
                  "18": 35,
                  "19": 36,
                  "20": 38,
                  "21": 39,
                  "22": 41,
                  "23": 42,
                  "24": 44,
                  "25": 45,
                  "26": 47,
                  "27": 48,
                  "28": 50,
                  "29": 51,
                  "30": 53,
                  "31": 54,
                  "32": 56,
                  "33": 57,
                  "34": 59,
                  "35": 60,
                  "36": 62,
                  "37": 63
                }
              },
              "expr": {
                "id": "36",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "34",
                      "callExpr": {
                        "function": "_[_]",
                        "args": [
                          {
                            "id": "32",
                            "callExpr": {
                              "function": "_[_]",
                              "args": [
                                {
                                  "id": "30",
                                  "callExpr": {
                                    "function": "_[_]",
                                    "args": [
                                      {
                                        "id": "28",
                                        "callExpr": {
                                          "function": "_[_]",
                                          "args": [
                                            {
                                              "id": "26",
                                              "callExpr": {
                                                "function": "_[_]",
                                                "args": [
                                                  {
                                                    "id": "24",
                                                    "callExpr": {
                                                      "function": "_[_]",
                                                      "args": [
                                                        {
                                                          "id": "22",
                                                          "callExpr": {
                                                            "function": "_[_]",
                                                            "args": [
                                                              {
                                                                "id": "20",
                                                                "callExpr": {
                                                                  "function": "_[_]",
                                                                  "args": [
                                                                    {
                                                                      "id": "18",
                                                                      "callExpr": {
                                                                        "function": "_[_]",
                                                                        "args": [
                                                                          {
                                                                            "id": "16",
                                                                            "callExpr": {
                                                                              "function": "_[_]",
                                                                              "args": [
                                                                                {
                                                                                  "id": "14",
                                                                                  "callExpr": {
                                                                                    "function": "_[_]",
                                                                                    "args": [
                                                                                      {
                                                                                        "id": "1",
                                                                                        "listExpr": {
                                                                                          "elements": [
                                                                                            {
                                                                                              "id": "2",
                                                                                              "listExpr": {
                                                                                                "elements": [
                                                                                                  {
                                                                                                    "id": "3",
                                                                                                    "listExpr": {
                                                                                                      "elements": [
                                                                                                        {
                                                                                                          "id": "4",
                                                                                                          "listExpr": {
                                                                                                            "elements": [
                                                                                                              {
                                                                                                                "id": "5",
                                                                                                                "listExpr": {
                                                                                                                  "elements": [
                                                                                                                    {
                                                                                                                      "id": "6",
                                                                                                                      "listExpr": {
                                                                                                                        "elements": [
                                                                                                                          {
                                                                                                                            "id": "7",
                                                                                                                            "listExpr": {
                                                                                                                              "elements": [
                                                                                                                                {
                                                                                                                                  "id": "8",
                                                                                                                                  "listExpr": {
                                                                                                                                    "elements": [
                                                                                                                                      {
                                                                                                                                        "id": "9",
                                                                                                                                        "listExpr": {
                                                                                                                                          "elements": [
                                                                                                                                            {
                                                                                                                                              "id": "10",
                                                                                                                                              "listExpr": {
                                                                                                                                                "elements": [
                                                                                                                                                  {
                                                                                                                                                    "id": "11",
                                                                                                                                                    "listExpr": {
                                                                                                                                                      "elements": [
                                                                                                                                                        {
                                                                                                                                                          "id": "12",
                                                                                                                                                          "listExpr": {
                                                                                                                                                            "elements": [
                                                                                                                                                              {
                                                                                                                                                                "id": "13",
                                                                                                                                                                "constExpr": {
                                                                                                                                                                  "stringValue": "foo"
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            ]
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      ]
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                ]
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          ]
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    ]
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              ]
                                                                                                                            }
                                                                                                                          }
                                                                                                                        ]
                                                                                                                      }
                                                                                                                    }
                                                                                                                  ]
                                                                                                                }
                                                                                                              }
                                                                                                            ]
                                                                                                          }
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "id": "15",
                                                                                        "constExpr": {
                                                                                          "int64Value": "0"
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "id": "17",
                                                                                  "constExpr": {
                                                                                    "int64Value": "0"
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          },
                                                                          {
                                                                            "id": "19",
                                                                            "constExpr": {
                                                                              "int64Value": "0"
                                                                            }
                                                                          }
                                                                        ]
                                                                      }
                                                                    },
                                                                    {
                                                                      "id": "21",
                                                                      "constExpr": {
                                                                        "int64Value": "0"
                                                                      }
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              {
                                                                "id": "23",
                                                                "constExpr": {
                                                                  "int64Value": "0"
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "id": "25",
                                                          "constExpr": {
                                                            "int64Value": "0"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "id": "27",
                                                    "constExpr": {
                                                      "int64Value": "0"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "id": "29",
                                              "constExpr": { "int64Value": "0" }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "id": "31",
                                        "constExpr": { "int64Value": "0" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "33",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          { "id": "35", "constExpr": { "int64Value": "0" } }
                        ]
                      }
                    },
                    { "id": "37", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "list_literal",
            "expression": "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31][17]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [123],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 4,
                  "4": 7,
                  "5": 10,
                  "6": 13,
                  "7": 16,
                  "8": 19,
                  "9": 22,
                  "10": 25,
                  "11": 28,
                  "12": 31,
                  "13": 35,
                  "14": 39,
                  "15": 43,
                  "16": 47,
                  "17": 51,
                  "18": 55,
                  "19": 59,
                  "20": 63,
                  "21": 67,
                  "22": 71,
                  "23": 75,
                  "24": 79,
                  "25": 83,
                  "26": 87,
                  "27": 91,
                  "28": 95,
                  "29": 99,
                  "30": 103,
                  "31": 107,
                  "32": 111,
                  "33": 115,
                  "34": 118,
                  "35": 119
                }
              },
              "expr": {
                "id": "34",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "listExpr": {
                        "elements": [
                          { "id": "2", "constExpr": { "int64Value": "0" } },
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "int64Value": "2" } },
                          { "id": "5", "constExpr": { "int64Value": "3" } },
                          { "id": "6", "constExpr": { "int64Value": "4" } },
                          { "id": "7", "constExpr": { "int64Value": "5" } },
                          { "id": "8", "constExpr": { "int64Value": "6" } },
                          { "id": "9", "constExpr": { "int64Value": "7" } },
                          { "id": "10", "constExpr": { "int64Value": "8" } },
                          { "id": "11", "constExpr": { "int64Value": "9" } },
                          { "id": "12", "constExpr": { "int64Value": "10" } },
                          { "id": "13", "constExpr": { "int64Value": "11" } },
                          { "id": "14", "constExpr": { "int64Value": "12" } },
                          { "id": "15", "constExpr": { "int64Value": "13" } },
                          { "id": "16", "constExpr": { "int64Value": "14" } },
                          { "id": "17", "constExpr": { "int64Value": "15" } },
                          { "id": "18", "constExpr": { "int64Value": "16" } },
                          { "id": "19", "constExpr": { "int64Value": "17" } },
                          { "id": "20", "constExpr": { "int64Value": "18" } },
                          { "id": "21", "constExpr": { "int64Value": "19" } },
                          { "id": "22", "constExpr": { "int64Value": "20" } },
                          { "id": "23", "constExpr": { "int64Value": "21" } },
                          { "id": "24", "constExpr": { "int64Value": "22" } },
                          { "id": "25", "constExpr": { "int64Value": "23" } },
                          { "id": "26", "constExpr": { "int64Value": "24" } },
                          { "id": "27", "constExpr": { "int64Value": "25" } },
                          { "id": "28", "constExpr": { "int64Value": "26" } },
                          { "id": "29", "constExpr": { "int64Value": "27" } },
                          { "id": "30", "constExpr": { "int64Value": "28" } },
                          { "id": "31", "constExpr": { "int64Value": "29" } },
                          { "id": "32", "constExpr": { "int64Value": "30" } },
                          { "id": "33", "constExpr": { "int64Value": "31" } }
                        ]
                      }
                    },
                    { "id": "35", "constExpr": { "int64Value": "17" } }
                  ]
                }
              }
            }
          },
          {
            "name": "map_literal",
            "expression": "{0: 'zero', 1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven', 8: 'eight', 9: 'nine', 10: 'ten', 11: 'eleven', 12: 'twelve', 13: 'thirteen', 14: 'fourteen', 15: 'fifteen', 16: 'sixteen', 17: 'seventeen', 18: 'eighteen', 19: 'nineteen', 20: 'twenty', 21: 'twenty-one', 22: 'twenty-two', 23: 'twenty-three', 24: 'twenty-four', 25: 'twenty-five', 26: 'twenty-six', 27: 'twenty-seven', 28: 'twenty-eight', 29: 'twenty-nine', 30: 'thirty', 31: 'thirty-one'}[17]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [482],
                "positions": {
                  "1": 0,
                  "2": 2,
                  "3": 1,
                  "4": 4,
                  "5": 13,
                  "6": 12,
                  "7": 15,
                  "8": 23,
                  "9": 22,
                  "10": 25,
                  "11": 33,
                  "12": 32,
                  "13": 35,
                  "14": 45,
                  "15": 44,
                  "16": 47,
                  "17": 56,
                  "18": 55,
                  "19": 58,
                  "20": 67,
                  "21": 66,
                  "22": 69,
                  "23": 77,
                  "24": 76,
                  "25": 79,
                  "26": 89,
                  "27": 88,
                  "28": 91,
                  "29": 101,
                  "30": 100,
                  "31": 103,
                  "32": 113,
                  "33": 111,
                  "34": 115,
                  "35": 124,
                  "36": 122,
                  "37": 126,
                  "38": 138,
                  "39": 136,
                  "40": 140,
                  "41": 152,
                  "42": 150,
                  "43": 154,
                  "44": 168,
                  "45": 166,
                  "46": 170,
                  "47": 184,
                  "48": 182,
                  "49": 186,
                  "50": 199,
                  "51": 197,
                  "52": 201,
                  "53": 214,
                  "54": 212,
                  "55": 216,
                  "56": 231,
                  "57": 229,
                  "58": 233,
                  "59": 247,
                  "60": 245,
                  "61": 249,
                  "62": 263,
                  "63": 261,
                  "64": 265,
                  "65": 277,
                  "66": 275,
                  "67": 279,
                  "68": 295,
                  "69": 293,
                  "70": 297,
                  "71": 313,
                  "72": 311,
                  "73": 315,
                  "74": 333,
                  "75": 331,
                  "76": 335,
                  "77": 352,
                  "78": 350,
                  "79": 354,
                  "80": 371,
                  "81": 369,
                  "82": 373,
                  "83": 389,
                  "84": 387,
                  "85": 391,
                  "86": 409,
                  "87": 407,
                  "88": 411,
                  "89": 429,
                  "90": 427,
                  "91": 431,
                  "92": 448,
                  "93": 446,
                  "94": 450,
                  "95": 462,
                  "96": 460,
                  "97": 464,
                  "98": 477,
                  "99": 478
                }
              },
              "expr": {
                "id": "98",
                "callExpr": {
                  "function": "_[_]",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "entries": [
                          {
                            "id": "2",
                            "mapKey": {
                              "id": "3",
                              "constExpr": { "int64Value": "0" }
                            },
                            "value": {
                              "id": "4",
                              "constExpr": { "stringValue": "zero" }
                            }
                          },
                          {
                            "id": "5",
                            "mapKey": {
                              "id": "6",
                              "constExpr": { "int64Value": "1" }
                            },
                            "value": {
                              "id": "7",
                              "constExpr": { "stringValue": "one" }
                            }
                          },
                          {
                            "id": "8",
                            "mapKey": {
                              "id": "9",
                              "constExpr": { "int64Value": "2" }
                            },
                            "value": {
                              "id": "10",
                              "constExpr": { "stringValue": "two" }
                            }
                          },
                          {
                            "id": "11",
                            "mapKey": {
                              "id": "12",
                              "constExpr": { "int64Value": "3" }
                            },
                            "value": {
                              "id": "13",
                              "constExpr": { "stringValue": "three" }
                            }
                          },
                          {
                            "id": "14",
                            "mapKey": {
                              "id": "15",
                              "constExpr": { "int64Value": "4" }
                            },
                            "value": {
                              "id": "16",
                              "constExpr": { "stringValue": "four" }
                            }
                          },
                          {
                            "id": "17",
                            "mapKey": {
                              "id": "18",
                              "constExpr": { "int64Value": "5" }
                            },
                            "value": {
                              "id": "19",
                              "constExpr": { "stringValue": "five" }
                            }
                          },
                          {
                            "id": "20",
                            "mapKey": {
                              "id": "21",
                              "constExpr": { "int64Value": "6" }
                            },
                            "value": {
                              "id": "22",
                              "constExpr": { "stringValue": "six" }
                            }
                          },
                          {
                            "id": "23",
                            "mapKey": {
                              "id": "24",
                              "constExpr": { "int64Value": "7" }
                            },
                            "value": {
                              "id": "25",
                              "constExpr": { "stringValue": "seven" }
                            }
                          },
                          {
                            "id": "26",
                            "mapKey": {
                              "id": "27",
                              "constExpr": { "int64Value": "8" }
                            },
                            "value": {
                              "id": "28",
                              "constExpr": { "stringValue": "eight" }
                            }
                          },
                          {
                            "id": "29",
                            "mapKey": {
                              "id": "30",
                              "constExpr": { "int64Value": "9" }
                            },
                            "value": {
                              "id": "31",
                              "constExpr": { "stringValue": "nine" }
                            }
                          },
                          {
                            "id": "32",
                            "mapKey": {
                              "id": "33",
                              "constExpr": { "int64Value": "10" }
                            },
                            "value": {
                              "id": "34",
                              "constExpr": { "stringValue": "ten" }
                            }
                          },
                          {
                            "id": "35",
                            "mapKey": {
                              "id": "36",
                              "constExpr": { "int64Value": "11" }
                            },
                            "value": {
                              "id": "37",
                              "constExpr": { "stringValue": "eleven" }
                            }
                          },
                          {
                            "id": "38",
                            "mapKey": {
                              "id": "39",
                              "constExpr": { "int64Value": "12" }
                            },
                            "value": {
                              "id": "40",
                              "constExpr": { "stringValue": "twelve" }
                            }
                          },
                          {
                            "id": "41",
                            "mapKey": {
                              "id": "42",
                              "constExpr": { "int64Value": "13" }
                            },
                            "value": {
                              "id": "43",
                              "constExpr": { "stringValue": "thirteen" }
                            }
                          },
                          {
                            "id": "44",
                            "mapKey": {
                              "id": "45",
                              "constExpr": { "int64Value": "14" }
                            },
                            "value": {
                              "id": "46",
                              "constExpr": { "stringValue": "fourteen" }
                            }
                          },
                          {
                            "id": "47",
                            "mapKey": {
                              "id": "48",
                              "constExpr": { "int64Value": "15" }
                            },
                            "value": {
                              "id": "49",
                              "constExpr": { "stringValue": "fifteen" }
                            }
                          },
                          {
                            "id": "50",
                            "mapKey": {
                              "id": "51",
                              "constExpr": { "int64Value": "16" }
                            },
                            "value": {
                              "id": "52",
                              "constExpr": { "stringValue": "sixteen" }
                            }
                          },
                          {
                            "id": "53",
                            "mapKey": {
                              "id": "54",
                              "constExpr": { "int64Value": "17" }
                            },
                            "value": {
                              "id": "55",
                              "constExpr": { "stringValue": "seventeen" }
                            }
                          },
                          {
                            "id": "56",
                            "mapKey": {
                              "id": "57",
                              "constExpr": { "int64Value": "18" }
                            },
                            "value": {
                              "id": "58",
                              "constExpr": { "stringValue": "eighteen" }
                            }
                          },
                          {
                            "id": "59",
                            "mapKey": {
                              "id": "60",
                              "constExpr": { "int64Value": "19" }
                            },
                            "value": {
                              "id": "61",
                              "constExpr": { "stringValue": "nineteen" }
                            }
                          },
                          {
                            "id": "62",
                            "mapKey": {
                              "id": "63",
                              "constExpr": { "int64Value": "20" }
                            },
                            "value": {
                              "id": "64",
                              "constExpr": { "stringValue": "twenty" }
                            }
                          },
                          {
                            "id": "65",
                            "mapKey": {
                              "id": "66",
                              "constExpr": { "int64Value": "21" }
                            },
                            "value": {
                              "id": "67",
                              "constExpr": { "stringValue": "twenty-one" }
                            }
                          },
                          {
                            "id": "68",
                            "mapKey": {
                              "id": "69",
                              "constExpr": { "int64Value": "22" }
                            },
                            "value": {
                              "id": "70",
                              "constExpr": { "stringValue": "twenty-two" }
                            }
                          },
                          {
                            "id": "71",
                            "mapKey": {
                              "id": "72",
                              "constExpr": { "int64Value": "23" }
                            },
                            "value": {
                              "id": "73",
                              "constExpr": { "stringValue": "twenty-three" }
                            }
                          },
                          {
                            "id": "74",
                            "mapKey": {
                              "id": "75",
                              "constExpr": { "int64Value": "24" }
                            },
                            "value": {
                              "id": "76",
                              "constExpr": { "stringValue": "twenty-four" }
                            }
                          },
                          {
                            "id": "77",
                            "mapKey": {
                              "id": "78",
                              "constExpr": { "int64Value": "25" }
                            },
                            "value": {
                              "id": "79",
                              "constExpr": { "stringValue": "twenty-five" }
                            }
                          },
                          {
                            "id": "80",
                            "mapKey": {
                              "id": "81",
                              "constExpr": { "int64Value": "26" }
                            },
                            "value": {
                              "id": "82",
                              "constExpr": { "stringValue": "twenty-six" }
                            }
                          },
                          {
                            "id": "83",
                            "mapKey": {
                              "id": "84",
                              "constExpr": { "int64Value": "27" }
                            },
                            "value": {
                              "id": "85",
                              "constExpr": { "stringValue": "twenty-seven" }
                            }
                          },
                          {
                            "id": "86",
                            "mapKey": {
                              "id": "87",
                              "constExpr": { "int64Value": "28" }
                            },
                            "value": {
                              "id": "88",
                              "constExpr": { "stringValue": "twenty-eight" }
                            }
                          },
                          {
                            "id": "89",
                            "mapKey": {
                              "id": "90",
                              "constExpr": { "int64Value": "29" }
                            },
                            "value": {
                              "id": "91",
                              "constExpr": { "stringValue": "twenty-nine" }
                            }
                          },
                          {
                            "id": "92",
                            "mapKey": {
                              "id": "93",
                              "constExpr": { "int64Value": "30" }
                            },
                            "value": {
                              "id": "94",
                              "constExpr": { "stringValue": "thirty" }
                            }
                          },
                          {
                            "id": "95",
                            "mapKey": {
                              "id": "96",
                              "constExpr": { "int64Value": "31" }
                            },
                            "value": {
                              "id": "97",
                              "constExpr": { "stringValue": "thirty-one" }
                            }
                          }
                        ]
                      }
                    },
                    { "id": "99", "constExpr": { "int64Value": "17" } }
                  ]
                }
              }
            }
          },
          {
            "name": "message_literal",
            "expression": "TestAllTypes{single_int32: 5, single_int64: 10, single_uint32: 15u, single_uint64: 20u, single_sint32: 25, single_sint64: 30, single_fixed32: 35u, single_fixed64: 40u, single_float: 45.0, single_double: 50.0, single_bool: true, single_string: 'sixty', single_bytes: b'sixty-five', single_value: 70.0, single_int64_wrapper: 75, single_int32_wrapper: 80, single_double_wrapper: 85.0, single_float_wrapper: 90.0, single_uint64_wrapper: 95u, single_uint32_wrapper: 100u, single_string_wrapper: 'one hundred five', single_bool_wrapper: true, repeated_int32: [115], repeated_int64: [120], repeated_uint32: [125u], repeated_uint64: [130u], repeated_sint32: [135], repeated_sint64: [140], repeated_fixed32: [145u], repeated_fixed64: [150u], repeated_sfixed32: [155], repeated_float: [160.0]}.single_sint64",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [798],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 27,
                  "4": 42,
                  "5": 44,
                  "6": 61,
                  "7": 63,
                  "8": 81,
                  "9": 83,
                  "10": 101,
                  "11": 103,
                  "12": 120,
                  "13": 122,
                  "14": 140,
                  "15": 142,
                  "16": 161,
                  "17": 163,
                  "18": 180,
                  "19": 182,
                  "20": 201,
                  "21": 203,
                  "22": 220,
                  "23": 222,
                  "24": 241,
                  "25": 243,
                  "26": 264,
                  "27": 266,
                  "28": 293,
                  "29": 295,
                  "30": 321,
                  "31": 323,
                  "32": 347,
                  "33": 349,
                  "34": 374,
                  "35": 376,
                  "36": 402,
                  "37": 404,
                  "38": 431,
                  "39": 433,
                  "40": 459,
                  "41": 461,
                  "42": 488,
                  "43": 490,
                  "44": 529,
                  "45": 531,
                  "46": 551,
                  "47": 553,
                  "48": 554,
                  "49": 574,
                  "50": 576,
                  "51": 577,
                  "52": 598,
                  "53": 600,
                  "54": 601,
                  "55": 623,
                  "56": 625,
                  "57": 626,
                  "58": 648,
                  "59": 650,
                  "60": 651,
                  "61": 672,
                  "62": 674,
                  "63": 675,
                  "64": 697,
                  "65": 699,
                  "66": 700,
                  "67": 723,
                  "68": 725,
                  "69": 726,
                  "70": 750,
                  "71": 752,
                  "72": 753,
                  "73": 773,
                  "74": 775,
                  "75": 776,
                  "76": 783
                }
              },
              "expr": {
                "id": "76",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_int32",
                          "value": {
                            "id": "3",
                            "constExpr": { "int64Value": "5" }
                          }
                        },
                        {
                          "id": "4",
                          "fieldKey": "single_int64",
                          "value": {
                            "id": "5",
                            "constExpr": { "int64Value": "10" }
                          }
                        },
                        {
                          "id": "6",
                          "fieldKey": "single_uint32",
                          "value": {
                            "id": "7",
                            "constExpr": { "uint64Value": "15" }
                          }
                        },
                        {
                          "id": "8",
                          "fieldKey": "single_uint64",
                          "value": {
                            "id": "9",
                            "constExpr": { "uint64Value": "20" }
                          }
                        },
                        {
                          "id": "10",
                          "fieldKey": "single_sint32",
                          "value": {
                            "id": "11",
                            "constExpr": { "int64Value": "25" }
                          }
                        },
                        {
                          "id": "12",
                          "fieldKey": "single_sint64",
                          "value": {
                            "id": "13",
                            "constExpr": { "int64Value": "30" }
                          }
                        },
                        {
                          "id": "14",
                          "fieldKey": "single_fixed32",
                          "value": {
                            "id": "15",
                            "constExpr": { "uint64Value": "35" }
                          }
                        },
                        {
                          "id": "16",
                          "fieldKey": "single_fixed64",
                          "value": {
                            "id": "17",
                            "constExpr": { "uint64Value": "40" }
                          }
                        },
                        {
                          "id": "18",
                          "fieldKey": "single_float",
                          "value": {
                            "id": "19",
                            "constExpr": { "doubleValue": 45 }
                          }
                        },
                        {
                          "id": "20",
                          "fieldKey": "single_double",
                          "value": {
                            "id": "21",
                            "constExpr": { "doubleValue": 50 }
                          }
                        },
                        {
                          "id": "22",
                          "fieldKey": "single_bool",
                          "value": {
                            "id": "23",
                            "constExpr": { "boolValue": true }
                          }
                        },
                        {
                          "id": "24",
                          "fieldKey": "single_string",
                          "value": {
                            "id": "25",
                            "constExpr": { "stringValue": "sixty" }
                          }
                        },
                        {
                          "id": "26",
                          "fieldKey": "single_bytes",
                          "value": {
                            "id": "27",
                            "constExpr": { "bytesValue": "c2l4dHktZml2ZQ==" }
                          }
                        },
                        {
                          "id": "28",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "29",
                            "constExpr": { "doubleValue": 70 }
                          }
                        },
                        {
                          "id": "30",
                          "fieldKey": "single_int64_wrapper",
                          "value": {
                            "id": "31",
                            "constExpr": { "int64Value": "75" }
                          }
                        },
                        {
                          "id": "32",
                          "fieldKey": "single_int32_wrapper",
                          "value": {
                            "id": "33",
                            "constExpr": { "int64Value": "80" }
                          }
                        },
                        {
                          "id": "34",
                          "fieldKey": "single_double_wrapper",
                          "value": {
                            "id": "35",
                            "constExpr": { "doubleValue": 85 }
                          }
                        },
                        {
                          "id": "36",
                          "fieldKey": "single_float_wrapper",
                          "value": {
                            "id": "37",
                            "constExpr": { "doubleValue": 90 }
                          }
                        },
                        {
                          "id": "38",
                          "fieldKey": "single_uint64_wrapper",
                          "value": {
                            "id": "39",
                            "constExpr": { "uint64Value": "95" }
                          }
                        },
                        {
                          "id": "40",
                          "fieldKey": "single_uint32_wrapper",
                          "value": {
                            "id": "41",
                            "constExpr": { "uint64Value": "100" }
                          }
                        },
                        {
                          "id": "42",
                          "fieldKey": "single_string_wrapper",
                          "value": {
                            "id": "43",
                            "constExpr": { "stringValue": "one hundred five" }
                          }
                        },
                        {
                          "id": "44",
                          "fieldKey": "single_bool_wrapper",
                          "value": {
                            "id": "45",
                            "constExpr": { "boolValue": true }
                          }
                        },
                        {
                          "id": "46",
                          "fieldKey": "repeated_int32",
                          "value": {
                            "id": "47",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "48",
                                  "constExpr": { "int64Value": "115" }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": "49",
                          "fieldKey": "repeated_int64",
                          "value": {
                            "id": "50",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "51",
                                  "constExpr": { "int64Value": "120" }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": "52",
                          "fieldKey": "repeated_uint32",
                          "value": {
                            "id": "53",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "54",
                                  "constExpr": { "uint64Value": "125" }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": "55",
                          "fieldKey": "repeated_uint64",
                          "value": {
                            "id": "56",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "57",
                                  "constExpr": { "uint64Value": "130" }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": "58",
                          "fieldKey": "repeated_sint32",
                          "value": {
                            "id": "59",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "60",
                                  "constExpr": { "int64Value": "135" }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": "61",
                          "fieldKey": "repeated_sint64",
                          "value": {
                            "id": "62",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "63",
                                  "constExpr": { "int64Value": "140" }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": "64",
                          "fieldKey": "repeated_fixed32",
                          "value": {
                            "id": "65",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "66",
                                  "constExpr": { "uint64Value": "145" }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": "67",
                          "fieldKey": "repeated_fixed64",
                          "value": {
                            "id": "68",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "69",
                                  "constExpr": { "uint64Value": "150" }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": "70",
                          "fieldKey": "repeated_sfixed32",
                          "value": {
                            "id": "71",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "72",
                                  "constExpr": { "int64Value": "155" }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": "73",
                          "fieldKey": "repeated_float",
                          "value": {
                            "id": "74",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "75",
                                  "constExpr": { "doubleValue": 160 }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_sint64"
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "plumbing",
    "sections": [
      {
        "name": "min",
        "tests": [
          {
            "name": "min_program",
            "expression": "17",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [3],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "int64Value": "17" } }
            }
          }
        ]
      },
      {
        "name": "eval_results",
        "tests": [
          {
            "name": "error_result",
            "expression": "1 / 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [6],
                "positions": { "1": 0, "2": 2, "3": 4 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_/_",
                  "args": [
                    { "id": "1", "constExpr": { "int64Value": "1" } },
                    { "id": "3", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "eval_map_results",
            "expression": "{\"k1\":\"v1\",\"k\":\"v\"}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": {
                  "1": 0,
                  "2": 5,
                  "3": 1,
                  "4": 6,
                  "5": 14,
                  "6": 11,
                  "7": 15
                }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "entries": [
                    {
                      "id": "2",
                      "mapKey": {
                        "id": "3",
                        "constExpr": { "stringValue": "k1" }
                      },
                      "value": {
                        "id": "4",
                        "constExpr": { "stringValue": "v1" }
                      }
                    },
                    {
                      "id": "5",
                      "mapKey": {
                        "id": "6",
                        "constExpr": { "stringValue": "k" }
                      },
                      "value": {
                        "id": "7",
                        "constExpr": { "stringValue": "v" }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "check_inputs",
        "tests": [
          {
            "name": "skip_check",
            "expression": "[17, 'pancakes']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 1, "3": 5 }
              },
              "expr": {
                "id": "1",
                "listExpr": {
                  "elements": [
                    { "id": "2", "constExpr": { "int64Value": "17" } },
                    { "id": "3", "constExpr": { "stringValue": "pancakes" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "eval_inputs",
        "tests": [
          {
            "name": "one_ignored_value_arg",
            "expression": "'foo'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [6],
                "positions": { "1": 0 }
              },
              "expr": { "id": "1", "constExpr": { "stringValue": "foo" } }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "proto2",
    "sections": [
      {
        "name": "literal_singular",
        "tests": [
          {
            "name": "int64_nocontainer",
            "expression": "google.api.expr.test.v1.proto2.TestAllTypes{single_int64: 17}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [62],
                "positions": { "1": 43, "2": 56, "3": 58 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.api.expr.test.v1.proto2.TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int64",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "17" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int32",
            "expression": "TestAllTypes{single_int32: -34}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int32",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-34" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int32_eq_uint",
            "expression": "Int32Value{value: 34} == dyn(UInt64Value{value: 34u})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [54],
                "positions": {
                  "1": 10,
                  "2": 16,
                  "3": 18,
                  "4": 22,
                  "5": 28,
                  "6": 40,
                  "7": 46,
                  "8": 48
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "Int32Value",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "int64Value": "34" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "6",
                            "structExpr": {
                              "messageName": "UInt64Value",
                              "entries": [
                                {
                                  "id": "7",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "8",
                                    "constExpr": { "uint64Value": "34" }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_int32_eq_uint",
            "expression": "Int32Value{value: 34} == dyn(UInt64Value{value: 18446744073709551615u})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [72],
                "positions": {
                  "1": 10,
                  "2": 16,
                  "3": 18,
                  "4": 22,
                  "5": 28,
                  "6": 40,
                  "7": 46,
                  "8": 48
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "Int32Value",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "int64Value": "34" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "6",
                            "structExpr": {
                              "messageName": "UInt64Value",
                              "entries": [
                                {
                                  "id": "7",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "8",
                                    "constExpr": {
                                      "uint64Value": "18446744073709551615"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int32_eq_double",
            "expression": "Int32Value{value: 34} == dyn(DoubleValue{value: 34.0})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [55],
                "positions": {
                  "1": 10,
                  "2": 16,
                  "3": 18,
                  "4": 22,
                  "5": 28,
                  "6": 40,
                  "7": 46,
                  "8": 48
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "Int32Value",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "int64Value": "34" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "6",
                            "structExpr": {
                              "messageName": "DoubleValue",
                              "entries": [
                                {
                                  "id": "7",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "8",
                                    "constExpr": { "doubleValue": 34 }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_int32_eq_double",
            "expression": "Int32Value{value: 34} == dyn(DoubleValue{value: -9223372036854775809.0})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [73],
                "positions": {
                  "1": 10,
                  "2": 16,
                  "3": 18,
                  "4": 22,
                  "5": 28,
                  "6": 40,
                  "7": 46,
                  "8": 48
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "Int32Value",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "int64Value": "34" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "6",
                            "structExpr": {
                              "messageName": "DoubleValue",
                              "entries": [
                                {
                                  "id": "7",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "8",
                                    "constExpr": {
                                      "doubleValue": -9223372036854776000
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int64",
            "expression": "TestAllTypes{single_int64: 17}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int64",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "17" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint32",
            "expression": "TestAllTypes{single_uint32: 1u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 12, "2": 26, "3": 28 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint32",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "1" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint32_eq_int",
            "expression": "UInt32Value{value: 34u} == dyn(Int64Value{value: 34})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [54],
                "positions": {
                  "1": 11,
                  "2": 17,
                  "3": 19,
                  "4": 24,
                  "5": 30,
                  "6": 41,
                  "7": 47,
                  "8": 49
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "UInt32Value",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "uint64Value": "34" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "6",
                            "structExpr": {
                              "messageName": "Int64Value",
                              "entries": [
                                {
                                  "id": "7",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "8",
                                    "constExpr": { "int64Value": "34" }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_uint32_eq_int",
            "expression": "UInt32Value{value: 34u} == dyn(Int64Value{value: -1})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [54],
                "positions": {
                  "1": 11,
                  "2": 17,
                  "3": 19,
                  "4": 24,
                  "5": 30,
                  "6": 41,
                  "7": 47,
                  "8": 49
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "UInt32Value",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "uint64Value": "34" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "6",
                            "structExpr": {
                              "messageName": "Int64Value",
                              "entries": [
                                {
                                  "id": "7",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "8",
                                    "constExpr": { "int64Value": "-1" }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint32_eq_double",
            "expression": "UInt32Value{value: 34u} == dyn(DoubleValue{value: 34.0})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [57],
                "positions": {
                  "1": 11,
                  "2": 17,
                  "3": 19,
                  "4": 24,
                  "5": 30,
                  "6": 42,
                  "7": 48,
                  "8": 50
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "UInt32Value",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "uint64Value": "34" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "6",
                            "structExpr": {
                              "messageName": "DoubleValue",
                              "entries": [
                                {
                                  "id": "7",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "8",
                                    "constExpr": { "doubleValue": 34 }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_uint32_eq_double",
            "expression": "UInt32Value{value: 34u} == dyn(DoubleValue{value: 18446744073709551616.0})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [75],
                "positions": {
                  "1": 11,
                  "2": 17,
                  "3": 19,
                  "4": 24,
                  "5": 30,
                  "6": 42,
                  "7": 48,
                  "8": 50
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "UInt32Value",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "uint64Value": "34" }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "6",
                            "structExpr": {
                              "messageName": "DoubleValue",
                              "entries": [
                                {
                                  "id": "7",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "8",
                                    "constExpr": {
                                      "doubleValue": 18446744073709552000
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint64",
            "expression": "TestAllTypes{single_uint64: 9999u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": { "1": 12, "2": 26, "3": 28 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint64",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "9999" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "sint32",
            "expression": "TestAllTypes{single_sint32: -3}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 12, "2": 26, "3": 28 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_sint32",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-3" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "sint64",
            "expression": "TestAllTypes{single_sint64: 255}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 12, "2": 26, "3": 28 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_sint64",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "255" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "fixed32",
            "expression": "TestAllTypes{single_fixed32: 43u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 12, "2": 27, "3": 29 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_fixed32",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "43" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "fixed64",
            "expression": "TestAllTypes{single_fixed64: 1880u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 12, "2": 27, "3": 29 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_fixed64",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "1880" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "sfixed32",
            "expression": "TestAllTypes{single_sfixed32: -404}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 12, "2": 28, "3": 30 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_sfixed32",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-404" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "sfixed64",
            "expression": "TestAllTypes{single_sfixed64: -1}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 12, "2": 28, "3": 30 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_sfixed64",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-1" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "float",
            "expression": "TestAllTypes{single_float: 3.1416}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_float",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": 3.1416 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "float_eq_int",
            "expression": "FloatValue{value: 3.0} == dyn(Int64Value{value: 3})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": {
                  "1": 10,
                  "2": 16,
                  "3": 18,
                  "4": 23,
                  "5": 29,
                  "6": 40,
                  "7": 46,
                  "8": 48
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "FloatValue",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "doubleValue": 3 }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "6",
                            "structExpr": {
                              "messageName": "Int64Value",
                              "entries": [
                                {
                                  "id": "7",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "8",
                                    "constExpr": { "int64Value": "3" }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_float_eq_int",
            "expression": "FloatValue{value: -1.14} == dyn(Int64Value{value: -1})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [55],
                "positions": {
                  "1": 10,
                  "2": 16,
                  "3": 18,
                  "4": 25,
                  "5": 31,
                  "6": 42,
                  "7": 48,
                  "8": 50
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "FloatValue",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "doubleValue": -1.14 }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "6",
                            "structExpr": {
                              "messageName": "Int64Value",
                              "entries": [
                                {
                                  "id": "7",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "8",
                                    "constExpr": { "int64Value": "-1" }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "float_eq_uint",
            "expression": "FloatValue{value: 34.0} == dyn(UInt64Value{value: 34u})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [56],
                "positions": {
                  "1": 10,
                  "2": 16,
                  "3": 18,
                  "4": 24,
                  "5": 30,
                  "6": 42,
                  "7": 48,
                  "8": 50
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "FloatValue",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "doubleValue": 34 }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "6",
                            "structExpr": {
                              "messageName": "UInt64Value",
                              "entries": [
                                {
                                  "id": "7",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "8",
                                    "constExpr": { "uint64Value": "34" }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "not_float_eq_uint",
            "expression": "FloatValue{value: -1.0} == dyn(UInt64Value{value: 18446744073709551615u})",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [74],
                "positions": {
                  "1": 10,
                  "2": 16,
                  "3": 18,
                  "4": 24,
                  "5": 30,
                  "6": 42,
                  "7": 48,
                  "8": 50
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "FloatValue",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "value",
                            "value": {
                              "id": "3",
                              "constExpr": { "doubleValue": -1 }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "callExpr": {
                        "function": "dyn",
                        "args": [
                          {
                            "id": "6",
                            "structExpr": {
                              "messageName": "UInt64Value",
                              "entries": [
                                {
                                  "id": "7",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "8",
                                    "constExpr": {
                                      "uint64Value": "18446744073709551615"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "double",
            "expression": "TestAllTypes{single_double: 6.022e23}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "1": 12, "2": 26, "3": 28 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_double",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": 6.022e23 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "bool",
            "expression": "TestAllTypes{single_bool: true}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 12, "2": 24, "3": 26 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_bool",
                      "value": { "id": "3", "constExpr": { "boolValue": true } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "string",
            "expression": "TestAllTypes{single_string: 'foo'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": { "1": 12, "2": 26, "3": 28 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_string",
                      "value": {
                        "id": "3",
                        "constExpr": { "stringValue": "foo" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "bytes",
            "expression": "TestAllTypes{single_bytes: b'\\377'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_bytes",
                      "value": {
                        "id": "3",
                        "constExpr": { "bytesValue": "/w==" }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "literal_wellknown",
        "tests": [
          {
            "name": "any",
            "expression": "TestAllTypes{single_any: TestAllTypes{single_int32: 1}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [56],
                "positions": { "1": 12, "2": 23, "3": 37, "4": 50, "5": 52 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_any",
                      "value": {
                        "id": "3",
                        "structExpr": {
                          "messageName": "TestAllTypes",
                          "entries": [
                            {
                              "id": "4",
                              "fieldKey": "single_int32",
                              "value": {
                                "id": "5",
                                "constExpr": { "int64Value": "1" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "duration",
            "expression": "TestAllTypes{single_duration: duration('123s')}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [48],
                "positions": { "1": 12, "2": 28, "3": 38, "4": 39 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_duration",
                      "value": {
                        "id": "3",
                        "callExpr": {
                          "function": "duration",
                          "args": [
                            {
                              "id": "4",
                              "constExpr": { "stringValue": "123s" }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "timestamp",
            "expression": "TestAllTypes{single_timestamp: timestamp('2009-02-13T23:31:30Z')}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [66],
                "positions": { "1": 12, "2": 29, "3": 40, "4": 41 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_timestamp",
                      "value": {
                        "id": "3",
                        "callExpr": {
                          "function": "timestamp",
                          "args": [
                            {
                              "id": "4",
                              "constExpr": {
                                "stringValue": "2009-02-13T23:31:30Z"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "struct",
            "expression": "TestAllTypes{single_struct: {'one': 1, 'two': 2}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": {
                  "1": 12,
                  "2": 26,
                  "3": 28,
                  "4": 34,
                  "5": 29,
                  "6": 36,
                  "7": 44,
                  "8": 39,
                  "9": 46
                }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_struct",
                      "value": {
                        "id": "3",
                        "structExpr": {
                          "entries": [
                            {
                              "id": "4",
                              "mapKey": {
                                "id": "5",
                                "constExpr": { "stringValue": "one" }
                              },
                              "value": {
                                "id": "6",
                                "constExpr": { "int64Value": "1" }
                              }
                            },
                            {
                              "id": "7",
                              "mapKey": {
                                "id": "8",
                                "constExpr": { "stringValue": "two" }
                              },
                              "value": {
                                "id": "9",
                                "constExpr": { "int64Value": "2" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "value",
            "expression": "TestAllTypes{single_value: 'foo'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": {
                        "id": "3",
                        "constExpr": { "stringValue": "foo" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int64_wrapper",
            "expression": "TestAllTypes{single_int64_wrapper: -321}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int64_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-321" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int32_wrapper",
            "expression": "TestAllTypes{single_int32_wrapper: -456}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-456" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "double_wrapper",
            "expression": "TestAllTypes{single_double_wrapper: 2.71828}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_double_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": 2.71828 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "float_wrapper",
            "expression": "TestAllTypes{single_float_wrapper: 2.99792e8}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_float_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": 299792000 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint64_wrapper",
            "expression": "TestAllTypes{single_uint64_wrapper: 8675309u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint64_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "8675309" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint32_wrapper",
            "expression": "TestAllTypes{single_uint32_wrapper: 987u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "987" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "string_wrapper",
            "expression": "TestAllTypes{single_string_wrapper: 'hubba'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_string_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "stringValue": "hubba" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "bool_wrapper",
            "expression": "TestAllTypes{single_bool_wrapper: true}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 32, "3": 34 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_bool_wrapper",
                      "value": { "id": "3", "constExpr": { "boolValue": true } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "bytes_wrapper",
            "expression": "TestAllTypes{single_bytes_wrapper: b'\\301\\103'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [48],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_bytes_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "bytesValue": "wUM=" }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "singular_bind",
        "tests": [
          {
            "name": "int32",
            "expression": "x.single_int32",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": { "id": "1", "identExpr": { "name": "x" } },
                  "field": "single_int32"
                }
              }
            }
          },
          {
            "name": "int64",
            "expression": "x.single_int64",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": { "id": "1", "identExpr": { "name": "x" } },
                  "field": "single_int64"
                }
              }
            }
          }
        ]
      },
      {
        "name": "empty_field",
        "tests": [
          {
            "name": "scalar_with_default",
            "expression": "TestAllTypes{}.single_int32",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_int32"
                }
              }
            }
          },
          {
            "name": "scalar_no_default",
            "expression": "TestAllTypes{}.single_fixed32",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_fixed32"
                }
              }
            }
          },
          {
            "name": "nested_message",
            "expression": "TestAllTypes{}.single_nested_message",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_nested_message"
                }
              }
            }
          },
          {
            "name": "nested_message_subfield",
            "expression": "TestAllTypes{}.single_nested_message.bb",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 14, "3": 36 }
              },
              "expr": {
                "id": "3",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "selectExpr": {
                      "operand": {
                        "id": "1",
                        "structExpr": { "messageName": "TestAllTypes" }
                      },
                      "field": "single_nested_message"
                    }
                  },
                  "field": "bb"
                }
              }
            }
          },
          {
            "name": "wkt",
            "expression": "TestAllTypes{}.single_int64_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_int64_wrapper"
                }
              }
            }
          },
          {
            "name": "repeated_scalar",
            "expression": "TestAllTypes{}.repeated_int64",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "repeated_int64"
                }
              }
            }
          },
          {
            "name": "repeated_nested",
            "expression": "TestAllTypes{}.repeated_nested_message",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "repeated_nested_message"
                }
              }
            }
          },
          {
            "name": "map",
            "expression": "TestAllTypes{}.map_string_string",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "map_string_string"
                }
              }
            }
          }
        ]
      },
      {
        "name": "has",
        "tests": [
          {
            "name": "undefined",
            "expression": "has(TestAllTypes{}.no_such_field)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "2": 16, "3": 18, "4": 3 },
                "macroCalls": {
                  "4": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": { "messageName": "TestAllTypes" }
                            },
                            "field": "no_such_field"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "no_such_field",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "repeated_none_implicit",
            "expression": "has(TestAllTypes{}.repeated_int32)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": { "2": 16, "3": 18, "4": 3 },
                "macroCalls": {
                  "4": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": { "messageName": "TestAllTypes" }
                            },
                            "field": "repeated_int32"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "repeated_int32",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "repeated_none_explicit",
            "expression": "has(TestAllTypes{repeated_int32: []}.repeated_int32)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [53],
                "positions": { "2": 16, "3": 31, "4": 33, "5": 36, "6": 3 },
                "macroCalls": {
                  "6": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "5",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "repeated_int32",
                                    "value": { "id": "4", "listExpr": {} }
                                  }
                                ]
                              }
                            },
                            "field": "repeated_int32"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "repeated_int32",
                          "value": { "id": "4", "listExpr": {} }
                        }
                      ]
                    }
                  },
                  "field": "repeated_int32",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "repeated_one",
            "expression": "has(TestAllTypes{repeated_int32: [1]}.repeated_int32)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [54],
                "positions": {
                  "2": 16,
                  "3": 31,
                  "4": 33,
                  "5": 34,
                  "6": 37,
                  "7": 3
                },
                "macroCalls": {
                  "7": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "6",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "repeated_int32",
                                    "value": {
                                      "id": "4",
                                      "listExpr": {
                                        "elements": [
                                          {
                                            "id": "5",
                                            "constExpr": { "int64Value": "1" }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "repeated_int32"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "7",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "repeated_int32",
                          "value": {
                            "id": "4",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "1" }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "repeated_int32",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "repeated_many",
            "expression": "has(TestAllTypes{repeated_int32: [1, 2, 3]}.repeated_int32)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [60],
                "positions": {
                  "2": 16,
                  "3": 31,
                  "4": 33,
                  "5": 34,
                  "6": 37,
                  "7": 40,
                  "8": 43,
                  "9": 3
                },
                "macroCalls": {
                  "9": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "8",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "repeated_int32",
                                    "value": {
                                      "id": "4",
                                      "listExpr": {
                                        "elements": [
                                          {
                                            "id": "5",
                                            "constExpr": { "int64Value": "1" }
                                          },
                                          {
                                            "id": "6",
                                            "constExpr": { "int64Value": "2" }
                                          },
                                          {
                                            "id": "7",
                                            "constExpr": { "int64Value": "3" }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "repeated_int32"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "9",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "repeated_int32",
                          "value": {
                            "id": "4",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "6",
                                  "constExpr": { "int64Value": "2" }
                                },
                                {
                                  "id": "7",
                                  "constExpr": { "int64Value": "3" }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "repeated_int32",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "map_none_implicit",
            "expression": "has(TestAllTypes{}.map_string_string)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "2": 16, "3": 18, "4": 3 },
                "macroCalls": {
                  "4": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": { "messageName": "TestAllTypes" }
                            },
                            "field": "map_string_string"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "map_string_string",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "map_none_explicit",
            "expression": "has(TestAllTypes{map_string_string: {}}.map_string_string)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [59],
                "positions": { "2": 16, "3": 34, "4": 36, "5": 39, "6": 3 },
                "macroCalls": {
                  "6": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "5",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "map_string_string",
                                    "value": { "id": "4", "structExpr": {} }
                                  }
                                ]
                              }
                            },
                            "field": "map_string_string"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "map_string_string",
                          "value": { "id": "4", "structExpr": {} }
                        }
                      ]
                    }
                  },
                  "field": "map_string_string",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "map_one_default",
            "expression": "has(TestAllTypes{map_string_string: {'MT': ''}}.map_string_string)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [67],
                "positions": {
                  "2": 16,
                  "3": 34,
                  "4": 36,
                  "5": 41,
                  "6": 37,
                  "7": 43,
                  "8": 47,
                  "9": 3
                },
                "macroCalls": {
                  "9": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "8",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "map_string_string",
                                    "value": {
                                      "id": "4",
                                      "structExpr": {
                                        "entries": [
                                          {
                                            "id": "5",
                                            "mapKey": {
                                              "id": "6",
                                              "constExpr": {
                                                "stringValue": "MT"
                                              }
                                            },
                                            "value": {
                                              "id": "7",
                                              "constExpr": { "stringValue": "" }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "map_string_string"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "9",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "map_string_string",
                          "value": {
                            "id": "4",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "5",
                                  "mapKey": {
                                    "id": "6",
                                    "constExpr": { "stringValue": "MT" }
                                  },
                                  "value": {
                                    "id": "7",
                                    "constExpr": { "stringValue": "" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "map_string_string",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "map_one",
            "expression": "has(TestAllTypes{map_string_string: {'one': 'uno'}}.map_string_string)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [71],
                "positions": {
                  "2": 16,
                  "3": 34,
                  "4": 36,
                  "5": 42,
                  "6": 37,
                  "7": 44,
                  "8": 51,
                  "9": 3
                },
                "macroCalls": {
                  "9": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "8",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "map_string_string",
                                    "value": {
                                      "id": "4",
                                      "structExpr": {
                                        "entries": [
                                          {
                                            "id": "5",
                                            "mapKey": {
                                              "id": "6",
                                              "constExpr": {
                                                "stringValue": "one"
                                              }
                                            },
                                            "value": {
                                              "id": "7",
                                              "constExpr": {
                                                "stringValue": "uno"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "map_string_string"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "9",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "map_string_string",
                          "value": {
                            "id": "4",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "5",
                                  "mapKey": {
                                    "id": "6",
                                    "constExpr": { "stringValue": "one" }
                                  },
                                  "value": {
                                    "id": "7",
                                    "constExpr": { "stringValue": "uno" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "map_string_string",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "map_many",
            "expression": "has(TestAllTypes{map_string_string: {'one': 'uno', 'two': 'dos'}}.map_string_string)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [85],
                "positions": {
                  "2": 16,
                  "3": 34,
                  "4": 36,
                  "5": 42,
                  "6": 37,
                  "7": 44,
                  "8": 56,
                  "9": 51,
                  "10": 58,
                  "11": 65,
                  "12": 3
                },
                "macroCalls": {
                  "12": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "11",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "map_string_string",
                                    "value": {
                                      "id": "4",
                                      "structExpr": {
                                        "entries": [
                                          {
                                            "id": "5",
                                            "mapKey": {
                                              "id": "6",
                                              "constExpr": {
                                                "stringValue": "one"
                                              }
                                            },
                                            "value": {
                                              "id": "7",
                                              "constExpr": {
                                                "stringValue": "uno"
                                              }
                                            }
                                          },
                                          {
                                            "id": "8",
                                            "mapKey": {
                                              "id": "9",
                                              "constExpr": {
                                                "stringValue": "two"
                                              }
                                            },
                                            "value": {
                                              "id": "10",
                                              "constExpr": {
                                                "stringValue": "dos"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "map_string_string"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "12",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "map_string_string",
                          "value": {
                            "id": "4",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "5",
                                  "mapKey": {
                                    "id": "6",
                                    "constExpr": { "stringValue": "one" }
                                  },
                                  "value": {
                                    "id": "7",
                                    "constExpr": { "stringValue": "uno" }
                                  }
                                },
                                {
                                  "id": "8",
                                  "mapKey": {
                                    "id": "9",
                                    "constExpr": { "stringValue": "two" }
                                  },
                                  "value": {
                                    "id": "10",
                                    "constExpr": { "stringValue": "dos" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "map_string_string",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "required",
            "expression": "has(TestRequired{required_int32: 4}.required_int32)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": { "2": 16, "3": 31, "4": 33, "5": 35, "6": 3 },
                "macroCalls": {
                  "6": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "5",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestRequired",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "required_int32",
                                    "value": {
                                      "id": "4",
                                      "constExpr": { "int64Value": "4" }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "required_int32"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestRequired",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "required_int32",
                          "value": {
                            "id": "4",
                            "constExpr": { "int64Value": "4" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "required_int32",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "optional_unset_no_default",
            "expression": "has(TestAllTypes{}.single_sint32)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "2": 16, "3": 18, "4": 3 },
                "macroCalls": {
                  "4": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": { "messageName": "TestAllTypes" }
                            },
                            "field": "single_sint32"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_sint32",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "optional_set_no_default",
            "expression": "has(TestAllTypes{single_sint32: -4}.single_sint32)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [51],
                "positions": { "2": 16, "3": 30, "4": 32, "5": 35, "6": 3 },
                "macroCalls": {
                  "6": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "5",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "single_sint32",
                                    "value": {
                                      "id": "4",
                                      "constExpr": { "int64Value": "-4" }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "single_sint32"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "single_sint32",
                          "value": {
                            "id": "4",
                            "constExpr": { "int64Value": "-4" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_sint32",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "optional_unset_with_default",
            "expression": "has(TestAllTypes{}.single_int32)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "2": 16, "3": 18, "4": 3 },
                "macroCalls": {
                  "4": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": { "messageName": "TestAllTypes" }
                            },
                            "field": "single_int32"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_int32",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "optional_set_with_default",
            "expression": "has(TestAllTypes{single_int32: 16}.single_int32)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "2": 16, "3": 29, "4": 31, "5": 34, "6": 3 },
                "macroCalls": {
                  "6": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "5",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "single_int32",
                                    "value": {
                                      "id": "4",
                                      "constExpr": { "int64Value": "16" }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "single_int32"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "single_int32",
                          "value": {
                            "id": "4",
                            "constExpr": { "int64Value": "16" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_int32",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "optional_set_to_default",
            "expression": "has(TestAllTypes{single_int32: -32}.single_int32)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": { "2": 16, "3": 29, "4": 31, "5": 35, "6": 3 },
                "macroCalls": {
                  "6": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "5",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "single_int32",
                                    "value": {
                                      "id": "4",
                                      "constExpr": { "int64Value": "-32" }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "single_int32"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "single_int32",
                          "value": {
                            "id": "4",
                            "constExpr": { "int64Value": "-32" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_int32",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "optional_message_unset",
            "expression": "has(TestAllTypes{}.standalone_message)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": { "2": 16, "3": 18, "4": 3 },
                "macroCalls": {
                  "4": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": { "messageName": "TestAllTypes" }
                            },
                            "field": "standalone_message"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "standalone_message",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "optional_message_set",
            "expression": "has(TestAllTypes{standalone_message: TestAllTypes.NestedMessage{}}.standalone_message)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [87],
                "positions": { "2": 16, "3": 35, "4": 63, "5": 66, "6": 3 },
                "macroCalls": {
                  "6": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "5",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "standalone_message",
                                    "value": {
                                      "id": "4",
                                      "structExpr": {
                                        "messageName": "TestAllTypes.NestedMessage"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "standalone_message"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "standalone_message",
                          "value": {
                            "id": "4",
                            "structExpr": {
                              "messageName": "TestAllTypes.NestedMessage"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "standalone_message",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "optional_enum_unset",
            "expression": "has(TestAllTypes{}.standalone_enum)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "2": 16, "3": 18, "4": 3 },
                "macroCalls": {
                  "4": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": { "messageName": "TestAllTypes" }
                            },
                            "field": "standalone_enum"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "standalone_enum",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "optional_enum_set",
            "expression": "has(TestAllTypes{standalone_enum: TestAllTypes.NestedEnum.BAR}.standalone_enum)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [80],
                "positions": {
                  "2": 16,
                  "3": 32,
                  "4": 34,
                  "5": 46,
                  "6": 57,
                  "7": 62,
                  "8": 3
                },
                "macroCalls": {
                  "8": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "7",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "standalone_enum",
                                    "value": {
                                      "id": "6",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "5",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "4",
                                              "identExpr": {
                                                "name": "TestAllTypes"
                                              }
                                            },
                                            "field": "NestedEnum"
                                          }
                                        },
                                        "field": "BAR"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "standalone_enum"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "8",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "standalone_enum",
                          "value": {
                            "id": "6",
                            "selectExpr": {
                              "operand": {
                                "id": "5",
                                "selectExpr": {
                                  "operand": {
                                    "id": "4",
                                    "identExpr": { "name": "TestAllTypes" }
                                  },
                                  "field": "NestedEnum"
                                }
                              },
                              "field": "BAR"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "standalone_enum",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "optional_enum_set_zero",
            "expression": "has(TestAllTypes{standalone_enum: TestAllTypes.NestedEnum.FOO}.standalone_enum)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [80],
                "positions": {
                  "2": 16,
                  "3": 32,
                  "4": 34,
                  "5": 46,
                  "6": 57,
                  "7": 62,
                  "8": 3
                },
                "macroCalls": {
                  "8": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "7",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "standalone_enum",
                                    "value": {
                                      "id": "6",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "5",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "4",
                                              "identExpr": {
                                                "name": "TestAllTypes"
                                              }
                                            },
                                            "field": "NestedEnum"
                                          }
                                        },
                                        "field": "FOO"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "standalone_enum"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "8",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "standalone_enum",
                          "value": {
                            "id": "6",
                            "selectExpr": {
                              "operand": {
                                "id": "5",
                                "selectExpr": {
                                  "operand": {
                                    "id": "4",
                                    "identExpr": { "name": "TestAllTypes" }
                                  },
                                  "field": "NestedEnum"
                                }
                              },
                              "field": "FOO"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "standalone_enum",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "oneof_unset",
            "expression": "has(TestAllTypes{}.single_nested_message)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "2": 16, "3": 18, "4": 3 },
                "macroCalls": {
                  "4": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": { "messageName": "TestAllTypes" }
                            },
                            "field": "single_nested_message"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_nested_message",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "oneof_other_set",
            "expression": "has(TestAllTypes{single_nested_enum: TestAllTypes.NestedEnum.BAZ}.single_nested_message)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [89],
                "positions": {
                  "2": 16,
                  "3": 35,
                  "4": 37,
                  "5": 49,
                  "6": 60,
                  "7": 65,
                  "8": 3
                },
                "macroCalls": {
                  "8": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "7",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "single_nested_enum",
                                    "value": {
                                      "id": "6",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "5",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "4",
                                              "identExpr": {
                                                "name": "TestAllTypes"
                                              }
                                            },
                                            "field": "NestedEnum"
                                          }
                                        },
                                        "field": "BAZ"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "single_nested_message"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "8",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "single_nested_enum",
                          "value": {
                            "id": "6",
                            "selectExpr": {
                              "operand": {
                                "id": "5",
                                "selectExpr": {
                                  "operand": {
                                    "id": "4",
                                    "identExpr": { "name": "TestAllTypes" }
                                  },
                                  "field": "NestedEnum"
                                }
                              },
                              "field": "BAZ"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_nested_message",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "oneof_set",
            "expression": "has(TestAllTypes{single_nested_message: TestAllTypes.NestedMessage{}}.single_nested_message)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [93],
                "positions": { "2": 16, "3": 38, "4": 66, "5": 69, "6": 3 },
                "macroCalls": {
                  "6": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "5",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "single_nested_message",
                                    "value": {
                                      "id": "4",
                                      "structExpr": {
                                        "messageName": "TestAllTypes.NestedMessage"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "single_nested_message"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "single_nested_message",
                          "value": {
                            "id": "4",
                            "structExpr": {
                              "messageName": "TestAllTypes.NestedMessage"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_nested_message",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "oneof_set_default",
            "expression": "has(TestAllTypes{single_nested_enum: TestAllTypes.NestedEnum.FOO}.single_nested_enum)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [86],
                "positions": {
                  "2": 16,
                  "3": 35,
                  "4": 37,
                  "5": 49,
                  "6": 60,
                  "7": 65,
                  "8": 3
                },
                "macroCalls": {
                  "8": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "7",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "single_nested_enum",
                                    "value": {
                                      "id": "6",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "5",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "4",
                                              "identExpr": {
                                                "name": "TestAllTypes"
                                              }
                                            },
                                            "field": "NestedEnum"
                                          }
                                        },
                                        "field": "FOO"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "single_nested_enum"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "8",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "single_nested_enum",
                          "value": {
                            "id": "6",
                            "selectExpr": {
                              "operand": {
                                "id": "5",
                                "selectExpr": {
                                  "operand": {
                                    "id": "4",
                                    "identExpr": { "name": "TestAllTypes" }
                                  },
                                  "field": "NestedEnum"
                                }
                              },
                              "field": "FOO"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_nested_enum",
                  "testOnly": true
                }
              }
            }
          }
        ]
      },
      {
        "name": "set_null",
        "tests": [
          {
            "name": "single_message",
            "expression": "TestAllTypes{single_nested_message: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [60],
                "positions": { "1": 12, "2": 34, "3": 36, "4": 42, "5": 57 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_nested_message",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "single_any",
            "expression": "TestAllTypes{single_any: null}.single_any",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 12, "2": 23, "3": 25, "4": 30 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_any",
                          "value": {
                            "id": "3",
                            "constExpr": { "nullValue": null }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_any"
                }
              }
            }
          },
          {
            "name": "single_value",
            "expression": "TestAllTypes{single_value: null}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 32 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "nullValue": null }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "single_duration",
            "expression": "TestAllTypes{single_duration: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [54],
                "positions": { "1": 12, "2": 28, "3": 30, "4": 36, "5": 51 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_duration",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "single_timestamp",
            "expression": "TestAllTypes{single_timestamp: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [55],
                "positions": { "1": 12, "2": 29, "3": 31, "4": 37, "5": 52 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_timestamp",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "single_scalar",
            "expression": "TestAllTypes{single_bool: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": { "1": 12, "2": 24, "3": 26, "4": 32, "5": 47 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_bool",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "repeated",
            "expression": "TestAllTypes{repeated_int32: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [53],
                "positions": { "1": 12, "2": 27, "3": 29, "4": 35, "5": 50 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "repeated_int32",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "map",
            "expression": "TestAllTypes{map_string_string: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [56],
                "positions": { "1": 12, "2": 30, "3": 32, "4": 38, "5": 53 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "map_string_string",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "list_value",
            "expression": "TestAllTypes{list_value: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "1": 12, "2": 23, "3": 25, "4": 31, "5": 46 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "list_value",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "single_struct",
            "expression": "TestAllTypes{single_struct: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": { "1": 12, "2": 26, "3": 28, "4": 34, "5": 49 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_struct",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "proto2_ext",
    "sections": [
      {
        "name": "has_ext",
        "tests": [
          {
            "name": "package_scoped_int32",
            "expression": "proto.hasExt(msg, google.api.expr.test.v1.proto2.int32_ext)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [60],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 24,
                  "6": 28,
                  "7": 33,
                  "8": 38,
                  "9": 41,
                  "10": 48
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "proto" } },
                  "function": "hasExt",
                  "args": [
                    { "id": "3", "identExpr": { "name": "msg" } },
                    {
                      "id": "10",
                      "selectExpr": {
                        "operand": {
                          "id": "9",
                          "selectExpr": {
                            "operand": {
                              "id": "8",
                              "selectExpr": {
                                "operand": {
                                  "id": "7",
                                  "selectExpr": {
                                    "operand": {
                                      "id": "6",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "5",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "4",
                                              "identExpr": { "name": "google" }
                                            },
                                            "field": "api"
                                          }
                                        },
                                        "field": "expr"
                                      }
                                    },
                                    "field": "test"
                                  }
                                },
                                "field": "v1"
                              }
                            },
                            "field": "proto2"
                          }
                        },
                        "field": "int32_ext"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "package_scoped_nested_ext",
            "expression": "proto.hasExt(msg, google.api.expr.test.v1.proto2.nested_ext)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [61],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 24,
                  "6": 28,
                  "7": 33,
                  "8": 38,
                  "9": 41,
                  "10": 48
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "proto" } },
                  "function": "hasExt",
                  "args": [
                    { "id": "3", "identExpr": { "name": "msg" } },
                    {
                      "id": "10",
                      "selectExpr": {
                        "operand": {
                          "id": "9",
                          "selectExpr": {
                            "operand": {
                              "id": "8",
                              "selectExpr": {
                                "operand": {
                                  "id": "7",
                                  "selectExpr": {
                                    "operand": {
                                      "id": "6",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "5",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "4",
                                              "identExpr": { "name": "google" }
                                            },
                                            "field": "api"
                                          }
                                        },
                                        "field": "expr"
                                      }
                                    },
                                    "field": "test"
                                  }
                                },
                                "field": "v1"
                              }
                            },
                            "field": "proto2"
                          }
                        },
                        "field": "nested_ext"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "package_scoped_test_all_types_ext",
            "expression": "proto.hasExt(msg, google.api.expr.test.v1.proto2.test_all_types_ext)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [69],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 24,
                  "6": 28,
                  "7": 33,
                  "8": 38,
                  "9": 41,
                  "10": 48
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "proto" } },
                  "function": "hasExt",
                  "args": [
                    { "id": "3", "identExpr": { "name": "msg" } },
                    {
                      "id": "10",
                      "selectExpr": {
                        "operand": {
                          "id": "9",
                          "selectExpr": {
                            "operand": {
                              "id": "8",
                              "selectExpr": {
                                "operand": {
                                  "id": "7",
                                  "selectExpr": {
                                    "operand": {
                                      "id": "6",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "5",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "4",
                                              "identExpr": { "name": "google" }
                                            },
                                            "field": "api"
                                          }
                                        },
                                        "field": "expr"
                                      }
                                    },
                                    "field": "test"
                                  }
                                },
                                "field": "v1"
                              }
                            },
                            "field": "proto2"
                          }
                        },
                        "field": "test_all_types_ext"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "package_scoped_test_all_types_nested_enum_ext",
            "expression": "proto.hasExt(msg, google.api.expr.test.v1.proto2.nested_enum_ext)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [66],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 24,
                  "6": 28,
                  "7": 33,
                  "8": 38,
                  "9": 41,
                  "10": 48
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "proto" } },
                  "function": "hasExt",
                  "args": [
                    { "id": "3", "identExpr": { "name": "msg" } },
                    {
                      "id": "10",
                      "selectExpr": {
                        "operand": {
                          "id": "9",
                          "selectExpr": {
                            "operand": {
                              "id": "8",
                              "selectExpr": {
                                "operand": {
                                  "id": "7",
                                  "selectExpr": {
                                    "operand": {
                                      "id": "6",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "5",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "4",
                                              "identExpr": { "name": "google" }
                                            },
                                            "field": "api"
                                          }
                                        },
                                        "field": "expr"
                                      }
                                    },
                                    "field": "test"
                                  }
                                },
                                "field": "v1"
                              }
                            },
                            "field": "proto2"
                          }
                        },
                        "field": "nested_enum_ext"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "package_scoped_repeated_test_all_types",
            "expression": "proto.hasExt(msg, google.api.expr.test.v1.proto2.repeated_test_all_types)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [74],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 24,
                  "6": 28,
                  "7": 33,
                  "8": 38,
                  "9": 41,
                  "10": 48
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "proto" } },
                  "function": "hasExt",
                  "args": [
                    { "id": "3", "identExpr": { "name": "msg" } },
                    {
                      "id": "10",
                      "selectExpr": {
                        "operand": {
                          "id": "9",
                          "selectExpr": {
                            "operand": {
                              "id": "8",
                              "selectExpr": {
                                "operand": {
                                  "id": "7",
                                  "selectExpr": {
                                    "operand": {
                                      "id": "6",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "5",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "4",
                                              "identExpr": { "name": "google" }
                                            },
                                            "field": "api"
                                          }
                                        },
                                        "field": "expr"
                                      }
                                    },
                                    "field": "test"
                                  }
                                },
                                "field": "v1"
                              }
                            },
                            "field": "proto2"
                          }
                        },
                        "field": "repeated_test_all_types"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "message_scoped_int64",
            "expression": "proto.hasExt(msg, google.api.expr.test.v1.proto2.Proto2ExtensionScopedMessage.int64_ext)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [89],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 24,
                  "6": 28,
                  "7": 33,
                  "8": 38,
                  "9": 41,
                  "10": 48,
                  "11": 77
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "proto" } },
                  "function": "hasExt",
                  "args": [
                    { "id": "3", "identExpr": { "name": "msg" } },
                    {
                      "id": "11",
                      "selectExpr": {
                        "operand": {
                          "id": "10",
                          "selectExpr": {
                            "operand": {
                              "id": "9",
                              "selectExpr": {
                                "operand": {
                                  "id": "8",
                                  "selectExpr": {
                                    "operand": {
                                      "id": "7",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "6",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "5",
                                              "selectExpr": {
                                                "operand": {
                                                  "id": "4",
                                                  "identExpr": {
                                                    "name": "google"
                                                  }
                                                },
                                                "field": "api"
                                              }
                                            },
                                            "field": "expr"
                                          }
                                        },
                                        "field": "test"
                                      }
                                    },
                                    "field": "v1"
                                  }
                                },
                                "field": "proto2"
                              }
                            },
                            "field": "Proto2ExtensionScopedMessage"
                          }
                        },
                        "field": "int64_ext"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "message_scoped_nested_ext",
            "expression": "proto.hasExt(msg, google.api.expr.test.v1.proto2.Proto2ExtensionScopedMessage.message_scoped_nested_ext)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [105],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 24,
                  "6": 28,
                  "7": 33,
                  "8": 38,
                  "9": 41,
                  "10": 48,
                  "11": 77
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "proto" } },
                  "function": "hasExt",
                  "args": [
                    { "id": "3", "identExpr": { "name": "msg" } },
                    {
                      "id": "11",
                      "selectExpr": {
                        "operand": {
                          "id": "10",
                          "selectExpr": {
                            "operand": {
                              "id": "9",
                              "selectExpr": {
                                "operand": {
                                  "id": "8",
                                  "selectExpr": {
                                    "operand": {
                                      "id": "7",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "6",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "5",
                                              "selectExpr": {
                                                "operand": {
                                                  "id": "4",
                                                  "identExpr": {
                                                    "name": "google"
                                                  }
                                                },
                                                "field": "api"
                                              }
                                            },
                                            "field": "expr"
                                          }
                                        },
                                        "field": "test"
                                      }
                                    },
                                    "field": "v1"
                                  }
                                },
                                "field": "proto2"
                              }
                            },
                            "field": "Proto2ExtensionScopedMessage"
                          }
                        },
                        "field": "message_scoped_nested_ext"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "message_scoped_nested_enum_ext",
            "expression": "proto.hasExt(msg, google.api.expr.test.v1.proto2.Proto2ExtensionScopedMessage.nested_enum_ext)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [95],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 24,
                  "6": 28,
                  "7": 33,
                  "8": 38,
                  "9": 41,
                  "10": 48,
                  "11": 77
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "proto" } },
                  "function": "hasExt",
                  "args": [
                    { "id": "3", "identExpr": { "name": "msg" } },
                    {
                      "id": "11",
                      "selectExpr": {
                        "operand": {
                          "id": "10",
                          "selectExpr": {
                            "operand": {
                              "id": "9",
                              "selectExpr": {
                                "operand": {
                                  "id": "8",
                                  "selectExpr": {
                                    "operand": {
                                      "id": "7",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "6",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "5",
                                              "selectExpr": {
                                                "operand": {
                                                  "id": "4",
                                                  "identExpr": {
                                                    "name": "google"
                                                  }
                                                },
                                                "field": "api"
                                              }
                                            },
                                            "field": "expr"
                                          }
                                        },
                                        "field": "test"
                                      }
                                    },
                                    "field": "v1"
                                  }
                                },
                                "field": "proto2"
                              }
                            },
                            "field": "Proto2ExtensionScopedMessage"
                          }
                        },
                        "field": "nested_enum_ext"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "message_scoped_repeated_test_all_types",
            "expression": "proto.hasExt(msg, google.api.expr.test.v1.proto2.Proto2ExtensionScopedMessage.message_scoped_repeated_test_all_types)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [118],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 24,
                  "6": 28,
                  "7": 33,
                  "8": 38,
                  "9": 41,
                  "10": 48,
                  "11": 77
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "proto" } },
                  "function": "hasExt",
                  "args": [
                    { "id": "3", "identExpr": { "name": "msg" } },
                    {
                      "id": "11",
                      "selectExpr": {
                        "operand": {
                          "id": "10",
                          "selectExpr": {
                            "operand": {
                              "id": "9",
                              "selectExpr": {
                                "operand": {
                                  "id": "8",
                                  "selectExpr": {
                                    "operand": {
                                      "id": "7",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "6",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "5",
                                              "selectExpr": {
                                                "operand": {
                                                  "id": "4",
                                                  "identExpr": {
                                                    "name": "google"
                                                  }
                                                },
                                                "field": "api"
                                              }
                                            },
                                            "field": "expr"
                                          }
                                        },
                                        "field": "test"
                                      }
                                    },
                                    "field": "v1"
                                  }
                                },
                                "field": "proto2"
                              }
                            },
                            "field": "Proto2ExtensionScopedMessage"
                          }
                        },
                        "field": "message_scoped_repeated_test_all_types"
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "get_ext",
        "tests": [
          {
            "name": "package_scoped_int32",
            "expression": "proto.getExt(msg, google.api.expr.test.v1.proto2.int32_ext) == 42",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [66],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 24,
                  "6": 28,
                  "7": 33,
                  "8": 38,
                  "9": 41,
                  "10": 48,
                  "11": 60,
                  "12": 63
                }
              },
              "expr": {
                "id": "11",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "proto" }
                        },
                        "function": "getExt",
                        "args": [
                          { "id": "3", "identExpr": { "name": "msg" } },
                          {
                            "id": "10",
                            "selectExpr": {
                              "operand": {
                                "id": "9",
                                "selectExpr": {
                                  "operand": {
                                    "id": "8",
                                    "selectExpr": {
                                      "operand": {
                                        "id": "7",
                                        "selectExpr": {
                                          "operand": {
                                            "id": "6",
                                            "selectExpr": {
                                              "operand": {
                                                "id": "5",
                                                "selectExpr": {
                                                  "operand": {
                                                    "id": "4",
                                                    "identExpr": {
                                                      "name": "google"
                                                    }
                                                  },
                                                  "field": "api"
                                                }
                                              },
                                              "field": "expr"
                                            }
                                          },
                                          "field": "test"
                                        }
                                      },
                                      "field": "v1"
                                    }
                                  },
                                  "field": "proto2"
                                }
                              },
                              "field": "int32_ext"
                            }
                          }
                        ]
                      }
                    },
                    { "id": "12", "constExpr": { "int64Value": "42" } }
                  ]
                }
              }
            }
          },
          {
            "name": "package_scoped_nested_ext",
            "expression": "proto.getExt(msg, google.api.expr.test.v1.proto2.nested_ext) == google.api.expr.test.v1.proto2.TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [110],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 24,
                  "6": 28,
                  "7": 33,
                  "8": 38,
                  "9": 41,
                  "10": 48,
                  "11": 61,
                  "12": 107
                }
              },
              "expr": {
                "id": "11",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "proto" }
                        },
                        "function": "getExt",
                        "args": [
                          { "id": "3", "identExpr": { "name": "msg" } },
                          {
                            "id": "10",
                            "selectExpr": {
                              "operand": {
                                "id": "9",
                                "selectExpr": {
                                  "operand": {
                                    "id": "8",
                                    "selectExpr": {
                                      "operand": {
                                        "id": "7",
                                        "selectExpr": {
                                          "operand": {
                                            "id": "6",
                                            "selectExpr": {
                                              "operand": {
                                                "id": "5",
                                                "selectExpr": {
                                                  "operand": {
                                                    "id": "4",
                                                    "identExpr": {
                                                      "name": "google"
                                                    }
                                                  },
                                                  "field": "api"
                                                }
                                              },
                                              "field": "expr"
                                            }
                                          },
                                          "field": "test"
                                        }
                                      },
                                      "field": "v1"
                                    }
                                  },
                                  "field": "proto2"
                                }
                              },
                              "field": "nested_ext"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "12",
                      "structExpr": {
                        "messageName": "google.api.expr.test.v1.proto2.TestAllTypes"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "package_scoped_test_all_types_ext",
            "expression": "proto.getExt(msg, google.api.expr.test.v1.proto2.test_all_types_ext) == google.api.expr.test.v1.proto2.TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [118],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 24,
                  "6": 28,
                  "7": 33,
                  "8": 38,
                  "9": 41,
                  "10": 48,
                  "11": 69,
                  "12": 115
                }
              },
              "expr": {
                "id": "11",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "proto" }
                        },
                        "function": "getExt",
                        "args": [
                          { "id": "3", "identExpr": { "name": "msg" } },
                          {
                            "id": "10",
                            "selectExpr": {
                              "operand": {
                                "id": "9",
                                "selectExpr": {
                                  "operand": {
                                    "id": "8",
                                    "selectExpr": {
                                      "operand": {
                                        "id": "7",
                                        "selectExpr": {
                                          "operand": {
                                            "id": "6",
                                            "selectExpr": {
                                              "operand": {
                                                "id": "5",
                                                "selectExpr": {
                                                  "operand": {
                                                    "id": "4",
                                                    "identExpr": {
                                                      "name": "google"
                                                    }
                                                  },
                                                  "field": "api"
                                                }
                                              },
                                              "field": "expr"
                                            }
                                          },
                                          "field": "test"
                                        }
                                      },
                                      "field": "v1"
                                    }
                                  },
                                  "field": "proto2"
                                }
                              },
                              "field": "test_all_types_ext"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "12",
                      "structExpr": {
                        "messageName": "google.api.expr.test.v1.proto2.TestAllTypes"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "package_scoped_test_all_types_nested_enum_ext",
            "expression": "proto.getExt(msg, google.api.expr.test.v1.proto2.nested_enum_ext) == google.api.expr.test.v1.proto2.TestAllTypes.NestedEnum.BAR",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [128],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 24,
                  "6": 28,
                  "7": 33,
                  "8": 38,
                  "9": 41,
                  "10": 48,
                  "11": 66,
                  "12": 69,
                  "13": 75,
                  "14": 79,
                  "15": 84,
                  "16": 89,
                  "17": 92,
                  "18": 99,
                  "19": 112,
                  "20": 123
                }
              },
              "expr": {
                "id": "11",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "proto" }
                        },
                        "function": "getExt",
                        "args": [
                          { "id": "3", "identExpr": { "name": "msg" } },
                          {
                            "id": "10",
                            "selectExpr": {
                              "operand": {
                                "id": "9",
                                "selectExpr": {
                                  "operand": {
                                    "id": "8",
                                    "selectExpr": {
                                      "operand": {
                                        "id": "7",
                                        "selectExpr": {
                                          "operand": {
                                            "id": "6",
                                            "selectExpr": {
                                              "operand": {
                                                "id": "5",
                                                "selectExpr": {
                                                  "operand": {
                                                    "id": "4",
                                                    "identExpr": {
                                                      "name": "google"
                                                    }
                                                  },
                                                  "field": "api"
                                                }
                                              },
                                              "field": "expr"
                                            }
                                          },
                                          "field": "test"
                                        }
                                      },
                                      "field": "v1"
                                    }
                                  },
                                  "field": "proto2"
                                }
                              },
                              "field": "nested_enum_ext"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "20",
                      "selectExpr": {
                        "operand": {
                          "id": "19",
                          "selectExpr": {
                            "operand": {
                              "id": "18",
                              "selectExpr": {
                                "operand": {
                                  "id": "17",
                                  "selectExpr": {
                                    "operand": {
                                      "id": "16",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "15",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "14",
                                              "selectExpr": {
                                                "operand": {
                                                  "id": "13",
                                                  "selectExpr": {
                                                    "operand": {
                                                      "id": "12",
                                                      "identExpr": {
                                                        "name": "google"
                                                      }
                                                    },
                                                    "field": "api"
                                                  }
                                                },
                                                "field": "expr"
                                              }
                                            },
                                            "field": "test"
                                          }
                                        },
                                        "field": "v1"
                                      }
                                    },
                                    "field": "proto2"
                                  }
                                },
                                "field": "TestAllTypes"
                              }
                            },
                            "field": "NestedEnum"
                          }
                        },
                        "field": "BAR"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "package_scoped_repeated_test_all_types",
            "expression": "proto.getExt(msg, google.api.expr.test.v1.proto2.repeated_test_all_types) == [google.api.expr.test.v1.proto2.TestAllTypes{single_int64: 1}, google.api.expr.test.v1.proto2.TestAllTypes{single_bool: true}]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [204],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 24,
                  "6": 28,
                  "7": 33,
                  "8": 38,
                  "9": 41,
                  "10": 48,
                  "11": 74,
                  "12": 77,
                  "13": 121,
                  "14": 134,
                  "15": 136,
                  "16": 183,
                  "17": 195,
                  "18": 197
                }
              },
              "expr": {
                "id": "11",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "proto" }
                        },
                        "function": "getExt",
                        "args": [
                          { "id": "3", "identExpr": { "name": "msg" } },
                          {
                            "id": "10",
                            "selectExpr": {
                              "operand": {
                                "id": "9",
                                "selectExpr": {
                                  "operand": {
                                    "id": "8",
                                    "selectExpr": {
                                      "operand": {
                                        "id": "7",
                                        "selectExpr": {
                                          "operand": {
                                            "id": "6",
                                            "selectExpr": {
                                              "operand": {
                                                "id": "5",
                                                "selectExpr": {
                                                  "operand": {
                                                    "id": "4",
                                                    "identExpr": {
                                                      "name": "google"
                                                    }
                                                  },
                                                  "field": "api"
                                                }
                                              },
                                              "field": "expr"
                                            }
                                          },
                                          "field": "test"
                                        }
                                      },
                                      "field": "v1"
                                    }
                                  },
                                  "field": "proto2"
                                }
                              },
                              "field": "repeated_test_all_types"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "12",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "13",
                            "structExpr": {
                              "messageName": "google.api.expr.test.v1.proto2.TestAllTypes",
                              "entries": [
                                {
                                  "id": "14",
                                  "fieldKey": "single_int64",
                                  "value": {
                                    "id": "15",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "16",
                            "structExpr": {
                              "messageName": "google.api.expr.test.v1.proto2.TestAllTypes",
                              "entries": [
                                {
                                  "id": "17",
                                  "fieldKey": "single_bool",
                                  "value": {
                                    "id": "18",
                                    "constExpr": { "boolValue": true }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "message_scoped_int64",
            "expression": "proto.getExt(msg, google.api.expr.test.v1.proto2.Proto2ExtensionScopedMessage.int64_ext) == 42",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [95],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 24,
                  "6": 28,
                  "7": 33,
                  "8": 38,
                  "9": 41,
                  "10": 48,
                  "11": 77,
                  "12": 89,
                  "13": 92
                }
              },
              "expr": {
                "id": "12",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "proto" }
                        },
                        "function": "getExt",
                        "args": [
                          { "id": "3", "identExpr": { "name": "msg" } },
                          {
                            "id": "11",
                            "selectExpr": {
                              "operand": {
                                "id": "10",
                                "selectExpr": {
                                  "operand": {
                                    "id": "9",
                                    "selectExpr": {
                                      "operand": {
                                        "id": "8",
                                        "selectExpr": {
                                          "operand": {
                                            "id": "7",
                                            "selectExpr": {
                                              "operand": {
                                                "id": "6",
                                                "selectExpr": {
                                                  "operand": {
                                                    "id": "5",
                                                    "selectExpr": {
                                                      "operand": {
                                                        "id": "4",
                                                        "identExpr": {
                                                          "name": "google"
                                                        }
                                                      },
                                                      "field": "api"
                                                    }
                                                  },
                                                  "field": "expr"
                                                }
                                              },
                                              "field": "test"
                                            }
                                          },
                                          "field": "v1"
                                        }
                                      },
                                      "field": "proto2"
                                    }
                                  },
                                  "field": "Proto2ExtensionScopedMessage"
                                }
                              },
                              "field": "int64_ext"
                            }
                          }
                        ]
                      }
                    },
                    { "id": "13", "constExpr": { "int64Value": "42" } }
                  ]
                }
              }
            }
          },
          {
            "name": "message_scoped_nested_ext",
            "expression": "proto.getExt(msg, google.api.expr.test.v1.proto2.Proto2ExtensionScopedMessage.message_scoped_nested_ext) == google.api.expr.test.v1.proto2.TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [154],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 24,
                  "6": 28,
                  "7": 33,
                  "8": 38,
                  "9": 41,
                  "10": 48,
                  "11": 77,
                  "12": 105,
                  "13": 151
                }
              },
              "expr": {
                "id": "12",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "proto" }
                        },
                        "function": "getExt",
                        "args": [
                          { "id": "3", "identExpr": { "name": "msg" } },
                          {
                            "id": "11",
                            "selectExpr": {
                              "operand": {
                                "id": "10",
                                "selectExpr": {
                                  "operand": {
                                    "id": "9",
                                    "selectExpr": {
                                      "operand": {
                                        "id": "8",
                                        "selectExpr": {
                                          "operand": {
                                            "id": "7",
                                            "selectExpr": {
                                              "operand": {
                                                "id": "6",
                                                "selectExpr": {
                                                  "operand": {
                                                    "id": "5",
                                                    "selectExpr": {
                                                      "operand": {
                                                        "id": "4",
                                                        "identExpr": {
                                                          "name": "google"
                                                        }
                                                      },
                                                      "field": "api"
                                                    }
                                                  },
                                                  "field": "expr"
                                                }
                                              },
                                              "field": "test"
                                            }
                                          },
                                          "field": "v1"
                                        }
                                      },
                                      "field": "proto2"
                                    }
                                  },
                                  "field": "Proto2ExtensionScopedMessage"
                                }
                              },
                              "field": "message_scoped_nested_ext"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "13",
                      "structExpr": {
                        "messageName": "google.api.expr.test.v1.proto2.TestAllTypes"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "message_scoped_nested_enum_ext",
            "expression": "proto.getExt(msg, google.api.expr.test.v1.proto2.Proto2ExtensionScopedMessage.nested_enum_ext) == google.api.expr.test.v1.proto2.TestAllTypes.NestedEnum.BAR",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [157],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 24,
                  "6": 28,
                  "7": 33,
                  "8": 38,
                  "9": 41,
                  "10": 48,
                  "11": 77,
                  "12": 95,
                  "13": 98,
                  "14": 104,
                  "15": 108,
                  "16": 113,
                  "17": 118,
                  "18": 121,
                  "19": 128,
                  "20": 141,
                  "21": 152
                }
              },
              "expr": {
                "id": "12",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "proto" }
                        },
                        "function": "getExt",
                        "args": [
                          { "id": "3", "identExpr": { "name": "msg" } },
                          {
                            "id": "11",
                            "selectExpr": {
                              "operand": {
                                "id": "10",
                                "selectExpr": {
                                  "operand": {
                                    "id": "9",
                                    "selectExpr": {
                                      "operand": {
                                        "id": "8",
                                        "selectExpr": {
                                          "operand": {
                                            "id": "7",
                                            "selectExpr": {
                                              "operand": {
                                                "id": "6",
                                                "selectExpr": {
                                                  "operand": {
                                                    "id": "5",
                                                    "selectExpr": {
                                                      "operand": {
                                                        "id": "4",
                                                        "identExpr": {
                                                          "name": "google"
                                                        }
                                                      },
                                                      "field": "api"
                                                    }
                                                  },
                                                  "field": "expr"
                                                }
                                              },
                                              "field": "test"
                                            }
                                          },
                                          "field": "v1"
                                        }
                                      },
                                      "field": "proto2"
                                    }
                                  },
                                  "field": "Proto2ExtensionScopedMessage"
                                }
                              },
                              "field": "nested_enum_ext"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "21",
                      "selectExpr": {
                        "operand": {
                          "id": "20",
                          "selectExpr": {
                            "operand": {
                              "id": "19",
                              "selectExpr": {
                                "operand": {
                                  "id": "18",
                                  "selectExpr": {
                                    "operand": {
                                      "id": "17",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "16",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "15",
                                              "selectExpr": {
                                                "operand": {
                                                  "id": "14",
                                                  "selectExpr": {
                                                    "operand": {
                                                      "id": "13",
                                                      "identExpr": {
                                                        "name": "google"
                                                      }
                                                    },
                                                    "field": "api"
                                                  }
                                                },
                                                "field": "expr"
                                              }
                                            },
                                            "field": "test"
                                          }
                                        },
                                        "field": "v1"
                                      }
                                    },
                                    "field": "proto2"
                                  }
                                },
                                "field": "TestAllTypes"
                              }
                            },
                            "field": "NestedEnum"
                          }
                        },
                        "field": "BAR"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "message_scoped_repeated_test_all_types",
            "expression": "proto.getExt(msg, google.api.expr.test.v1.proto2.Proto2ExtensionScopedMessage.message_scoped_repeated_test_all_types) == [google.api.expr.test.v1.proto2.TestAllTypes{single_int64: 1}, google.api.expr.test.v1.proto2.TestAllTypes{single_bool: true}]",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [248],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 24,
                  "6": 28,
                  "7": 33,
                  "8": 38,
                  "9": 41,
                  "10": 48,
                  "11": 77,
                  "12": 118,
                  "13": 121,
                  "14": 165,
                  "15": 178,
                  "16": 180,
                  "17": 227,
                  "18": 239,
                  "19": 241
                }
              },
              "expr": {
                "id": "12",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "proto" }
                        },
                        "function": "getExt",
                        "args": [
                          { "id": "3", "identExpr": { "name": "msg" } },
                          {
                            "id": "11",
                            "selectExpr": {
                              "operand": {
                                "id": "10",
                                "selectExpr": {
                                  "operand": {
                                    "id": "9",
                                    "selectExpr": {
                                      "operand": {
                                        "id": "8",
                                        "selectExpr": {
                                          "operand": {
                                            "id": "7",
                                            "selectExpr": {
                                              "operand": {
                                                "id": "6",
                                                "selectExpr": {
                                                  "operand": {
                                                    "id": "5",
                                                    "selectExpr": {
                                                      "operand": {
                                                        "id": "4",
                                                        "identExpr": {
                                                          "name": "google"
                                                        }
                                                      },
                                                      "field": "api"
                                                    }
                                                  },
                                                  "field": "expr"
                                                }
                                              },
                                              "field": "test"
                                            }
                                          },
                                          "field": "v1"
                                        }
                                      },
                                      "field": "proto2"
                                    }
                                  },
                                  "field": "Proto2ExtensionScopedMessage"
                                }
                              },
                              "field": "message_scoped_repeated_test_all_types"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "13",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "14",
                            "structExpr": {
                              "messageName": "google.api.expr.test.v1.proto2.TestAllTypes",
                              "entries": [
                                {
                                  "id": "15",
                                  "fieldKey": "single_int64",
                                  "value": {
                                    "id": "16",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "17",
                            "structExpr": {
                              "messageName": "google.api.expr.test.v1.proto2.TestAllTypes",
                              "entries": [
                                {
                                  "id": "18",
                                  "fieldKey": "single_bool",
                                  "value": {
                                    "id": "19",
                                    "constExpr": { "boolValue": true }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "proto3",
    "sections": [
      {
        "name": "literal_singular",
        "tests": [
          {
            "name": "int64_nocontainer",
            "expression": "google.api.expr.test.v1.proto3.TestAllTypes{single_int64: 17}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [62],
                "positions": { "1": 43, "2": 56, "3": 58 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "google.api.expr.test.v1.proto3.TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int64",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "17" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int32",
            "expression": "TestAllTypes{single_int32: -34}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int32",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-34" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int64",
            "expression": "TestAllTypes{single_int64: 17}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int64",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "17" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint32",
            "expression": "TestAllTypes{single_uint32: 1u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 12, "2": 26, "3": 28 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint32",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "1" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint64",
            "expression": "TestAllTypes{single_uint64: 9999u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": { "1": 12, "2": 26, "3": 28 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint64",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "9999" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "sint32",
            "expression": "TestAllTypes{single_sint32: -3}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 12, "2": 26, "3": 28 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_sint32",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-3" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "sint64",
            "expression": "TestAllTypes{single_sint64: 255}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 12, "2": 26, "3": 28 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_sint64",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "255" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "fixed32",
            "expression": "TestAllTypes{single_fixed32: 43u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 12, "2": 27, "3": 29 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_fixed32",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "43" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "fixed64",
            "expression": "TestAllTypes{single_fixed64: 1880u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 12, "2": 27, "3": 29 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_fixed64",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "1880" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "sfixed32",
            "expression": "TestAllTypes{single_sfixed32: -404}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 12, "2": 28, "3": 30 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_sfixed32",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-404" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "sfixed64",
            "expression": "TestAllTypes{single_sfixed64: -1}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 12, "2": 28, "3": 30 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_sfixed64",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-1" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "float",
            "expression": "TestAllTypes{single_float: 3.1416}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_float",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": 3.1416 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "double",
            "expression": "TestAllTypes{single_double: 6.022e23}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "1": 12, "2": 26, "3": 28 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_double",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": 6.022e23 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "bool",
            "expression": "TestAllTypes{single_bool: true}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 12, "2": 24, "3": 26 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_bool",
                      "value": { "id": "3", "constExpr": { "boolValue": true } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "string",
            "expression": "TestAllTypes{single_string: 'foo'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": { "1": 12, "2": 26, "3": 28 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_string",
                      "value": {
                        "id": "3",
                        "constExpr": { "stringValue": "foo" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "bytes",
            "expression": "TestAllTypes{single_bytes: b'\\377'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_bytes",
                      "value": {
                        "id": "3",
                        "constExpr": { "bytesValue": "/w==" }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "literal_wellknown",
        "tests": [
          {
            "name": "any",
            "expression": "TestAllTypes{single_any: TestAllTypes{single_int32: 1}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [56],
                "positions": { "1": 12, "2": 23, "3": 37, "4": 50, "5": 52 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_any",
                      "value": {
                        "id": "3",
                        "structExpr": {
                          "messageName": "TestAllTypes",
                          "entries": [
                            {
                              "id": "4",
                              "fieldKey": "single_int32",
                              "value": {
                                "id": "5",
                                "constExpr": { "int64Value": "1" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "duration",
            "expression": "TestAllTypes{single_duration: duration('123s')}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [48],
                "positions": { "1": 12, "2": 28, "3": 38, "4": 39 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_duration",
                      "value": {
                        "id": "3",
                        "callExpr": {
                          "function": "duration",
                          "args": [
                            {
                              "id": "4",
                              "constExpr": { "stringValue": "123s" }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "timestamp",
            "expression": "TestAllTypes{single_timestamp: timestamp('2009-02-13T23:31:30Z')}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [66],
                "positions": { "1": 12, "2": 29, "3": 40, "4": 41 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_timestamp",
                      "value": {
                        "id": "3",
                        "callExpr": {
                          "function": "timestamp",
                          "args": [
                            {
                              "id": "4",
                              "constExpr": {
                                "stringValue": "2009-02-13T23:31:30Z"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "struct",
            "expression": "TestAllTypes{single_struct: {'one': 1, 'two': 2}}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": {
                  "1": 12,
                  "2": 26,
                  "3": 28,
                  "4": 34,
                  "5": 29,
                  "6": 36,
                  "7": 44,
                  "8": 39,
                  "9": 46
                }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_struct",
                      "value": {
                        "id": "3",
                        "structExpr": {
                          "entries": [
                            {
                              "id": "4",
                              "mapKey": {
                                "id": "5",
                                "constExpr": { "stringValue": "one" }
                              },
                              "value": {
                                "id": "6",
                                "constExpr": { "int64Value": "1" }
                              }
                            },
                            {
                              "id": "7",
                              "mapKey": {
                                "id": "8",
                                "constExpr": { "stringValue": "two" }
                              },
                              "value": {
                                "id": "9",
                                "constExpr": { "int64Value": "2" }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "value",
            "expression": "TestAllTypes{single_value: 'foo'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 12, "2": 25, "3": 27 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_value",
                      "value": {
                        "id": "3",
                        "constExpr": { "stringValue": "foo" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int64_wrapper",
            "expression": "TestAllTypes{single_int64_wrapper: -321}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int64_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-321" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int32_wrapper",
            "expression": "TestAllTypes{single_int32_wrapper: -456}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_int32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "int64Value": "-456" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "double_wrapper",
            "expression": "TestAllTypes{single_double_wrapper: 2.71828}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_double_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": 2.71828 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "float_wrapper",
            "expression": "TestAllTypes{single_float_wrapper: 2.99792e8}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_float_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "doubleValue": 299792000 }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint64_wrapper",
            "expression": "TestAllTypes{single_uint64_wrapper: 8675309u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint64_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "8675309" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint32_wrapper",
            "expression": "TestAllTypes{single_uint32_wrapper: 987u}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_uint32_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "uint64Value": "987" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "string_wrapper",
            "expression": "TestAllTypes{single_string_wrapper: 'hubba'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 12, "2": 34, "3": 36 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_string_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "stringValue": "hubba" }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "bool_wrapper",
            "expression": "TestAllTypes{single_bool_wrapper: true}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 32, "3": 34 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_bool_wrapper",
                      "value": { "id": "3", "constExpr": { "boolValue": true } }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "bytes_wrapper",
            "expression": "TestAllTypes{single_bytes_wrapper: b'\\301\\103'}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [48],
                "positions": { "1": 12, "2": 33, "3": 35 }
              },
              "expr": {
                "id": "1",
                "structExpr": {
                  "messageName": "TestAllTypes",
                  "entries": [
                    {
                      "id": "2",
                      "fieldKey": "single_bytes_wrapper",
                      "value": {
                        "id": "3",
                        "constExpr": { "bytesValue": "wUM=" }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "singular_bind",
        "tests": [
          {
            "name": "int32",
            "expression": "x.single_int32",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": { "id": "1", "identExpr": { "name": "x" } },
                  "field": "single_int32"
                }
              }
            }
          },
          {
            "name": "int64",
            "expression": "x.single_int64",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 1 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": { "id": "1", "identExpr": { "name": "x" } },
                  "field": "single_int64"
                }
              }
            }
          }
        ]
      },
      {
        "name": "empty_field",
        "tests": [
          {
            "name": "scalar",
            "expression": "TestAllTypes{}.single_fixed32",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_fixed32"
                }
              }
            }
          },
          {
            "name": "nested_message",
            "expression": "TestAllTypes{}.single_nested_message",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_nested_message"
                }
              }
            }
          },
          {
            "name": "nested_message_subfield",
            "expression": "TestAllTypes{}.single_nested_message.bb",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 14, "3": 36 }
              },
              "expr": {
                "id": "3",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "selectExpr": {
                      "operand": {
                        "id": "1",
                        "structExpr": { "messageName": "TestAllTypes" }
                      },
                      "field": "single_nested_message"
                    }
                  },
                  "field": "bb"
                }
              }
            }
          },
          {
            "name": "wkt",
            "expression": "TestAllTypes{}.single_int64_wrapper",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_int64_wrapper"
                }
              }
            }
          },
          {
            "name": "repeated_scalar",
            "expression": "TestAllTypes{}.repeated_int64",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "repeated_int64"
                }
              }
            }
          },
          {
            "name": "repeated_nested",
            "expression": "TestAllTypes{}.repeated_nested_message",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "repeated_nested_message"
                }
              }
            }
          },
          {
            "name": "map",
            "expression": "TestAllTypes{}.map_string_string",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 12, "2": 14 }
              },
              "expr": {
                "id": "2",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "map_string_string"
                }
              }
            }
          }
        ]
      },
      {
        "name": "has",
        "tests": [
          {
            "name": "undefined",
            "expression": "has(TestAllTypes{}.no_such_field)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "2": 16, "3": 18, "4": 3 },
                "macroCalls": {
                  "4": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": { "messageName": "TestAllTypes" }
                            },
                            "field": "no_such_field"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "no_such_field",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "repeated_none_implicit",
            "expression": "has(TestAllTypes{}.repeated_int32)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": { "2": 16, "3": 18, "4": 3 },
                "macroCalls": {
                  "4": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": { "messageName": "TestAllTypes" }
                            },
                            "field": "repeated_int32"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "repeated_int32",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "repeated_none_explicit",
            "expression": "has(TestAllTypes{repeated_int32: []}.repeated_int32)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [53],
                "positions": { "2": 16, "3": 31, "4": 33, "5": 36, "6": 3 },
                "macroCalls": {
                  "6": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "5",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "repeated_int32",
                                    "value": { "id": "4", "listExpr": {} }
                                  }
                                ]
                              }
                            },
                            "field": "repeated_int32"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "repeated_int32",
                          "value": { "id": "4", "listExpr": {} }
                        }
                      ]
                    }
                  },
                  "field": "repeated_int32",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "repeated_one",
            "expression": "has(TestAllTypes{repeated_int32: [1]}.repeated_int32)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [54],
                "positions": {
                  "2": 16,
                  "3": 31,
                  "4": 33,
                  "5": 34,
                  "6": 37,
                  "7": 3
                },
                "macroCalls": {
                  "7": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "6",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "repeated_int32",
                                    "value": {
                                      "id": "4",
                                      "listExpr": {
                                        "elements": [
                                          {
                                            "id": "5",
                                            "constExpr": { "int64Value": "1" }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "repeated_int32"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "7",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "repeated_int32",
                          "value": {
                            "id": "4",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "1" }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "repeated_int32",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "repeated_many",
            "expression": "has(TestAllTypes{repeated_int32: [1, 2, 3]}.repeated_int32)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [60],
                "positions": {
                  "2": 16,
                  "3": 31,
                  "4": 33,
                  "5": 34,
                  "6": 37,
                  "7": 40,
                  "8": 43,
                  "9": 3
                },
                "macroCalls": {
                  "9": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "8",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "repeated_int32",
                                    "value": {
                                      "id": "4",
                                      "listExpr": {
                                        "elements": [
                                          {
                                            "id": "5",
                                            "constExpr": { "int64Value": "1" }
                                          },
                                          {
                                            "id": "6",
                                            "constExpr": { "int64Value": "2" }
                                          },
                                          {
                                            "id": "7",
                                            "constExpr": { "int64Value": "3" }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "repeated_int32"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "9",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "repeated_int32",
                          "value": {
                            "id": "4",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "6",
                                  "constExpr": { "int64Value": "2" }
                                },
                                {
                                  "id": "7",
                                  "constExpr": { "int64Value": "3" }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "repeated_int32",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "map_none_implicit",
            "expression": "has(TestAllTypes{}.map_string_string)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "2": 16, "3": 18, "4": 3 },
                "macroCalls": {
                  "4": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": { "messageName": "TestAllTypes" }
                            },
                            "field": "map_string_string"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "map_string_string",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "map_none_explicit",
            "expression": "has(TestAllTypes{map_string_string: {}}.map_string_string)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [59],
                "positions": { "2": 16, "3": 34, "4": 36, "5": 39, "6": 3 },
                "macroCalls": {
                  "6": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "5",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "map_string_string",
                                    "value": { "id": "4", "structExpr": {} }
                                  }
                                ]
                              }
                            },
                            "field": "map_string_string"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "map_string_string",
                          "value": { "id": "4", "structExpr": {} }
                        }
                      ]
                    }
                  },
                  "field": "map_string_string",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "map_one_default",
            "expression": "has(TestAllTypes{map_string_string: {'MT': ''}}.map_string_string)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [67],
                "positions": {
                  "2": 16,
                  "3": 34,
                  "4": 36,
                  "5": 41,
                  "6": 37,
                  "7": 43,
                  "8": 47,
                  "9": 3
                },
                "macroCalls": {
                  "9": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "8",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "map_string_string",
                                    "value": {
                                      "id": "4",
                                      "structExpr": {
                                        "entries": [
                                          {
                                            "id": "5",
                                            "mapKey": {
                                              "id": "6",
                                              "constExpr": {
                                                "stringValue": "MT"
                                              }
                                            },
                                            "value": {
                                              "id": "7",
                                              "constExpr": { "stringValue": "" }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "map_string_string"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "9",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "map_string_string",
                          "value": {
                            "id": "4",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "5",
                                  "mapKey": {
                                    "id": "6",
                                    "constExpr": { "stringValue": "MT" }
                                  },
                                  "value": {
                                    "id": "7",
                                    "constExpr": { "stringValue": "" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "map_string_string",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "map_one",
            "expression": "has(TestAllTypes{map_string_string: {'one': 'uno'}}.map_string_string)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [71],
                "positions": {
                  "2": 16,
                  "3": 34,
                  "4": 36,
                  "5": 42,
                  "6": 37,
                  "7": 44,
                  "8": 51,
                  "9": 3
                },
                "macroCalls": {
                  "9": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "8",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "map_string_string",
                                    "value": {
                                      "id": "4",
                                      "structExpr": {
                                        "entries": [
                                          {
                                            "id": "5",
                                            "mapKey": {
                                              "id": "6",
                                              "constExpr": {
                                                "stringValue": "one"
                                              }
                                            },
                                            "value": {
                                              "id": "7",
                                              "constExpr": {
                                                "stringValue": "uno"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "map_string_string"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "9",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "map_string_string",
                          "value": {
                            "id": "4",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "5",
                                  "mapKey": {
                                    "id": "6",
                                    "constExpr": { "stringValue": "one" }
                                  },
                                  "value": {
                                    "id": "7",
                                    "constExpr": { "stringValue": "uno" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "map_string_string",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "map_many",
            "expression": "has(TestAllTypes{map_string_string: {'one': 'uno', 'two': 'dos'}}.map_string_string)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [85],
                "positions": {
                  "2": 16,
                  "3": 34,
                  "4": 36,
                  "5": 42,
                  "6": 37,
                  "7": 44,
                  "8": 56,
                  "9": 51,
                  "10": 58,
                  "11": 65,
                  "12": 3
                },
                "macroCalls": {
                  "12": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "11",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "map_string_string",
                                    "value": {
                                      "id": "4",
                                      "structExpr": {
                                        "entries": [
                                          {
                                            "id": "5",
                                            "mapKey": {
                                              "id": "6",
                                              "constExpr": {
                                                "stringValue": "one"
                                              }
                                            },
                                            "value": {
                                              "id": "7",
                                              "constExpr": {
                                                "stringValue": "uno"
                                              }
                                            }
                                          },
                                          {
                                            "id": "8",
                                            "mapKey": {
                                              "id": "9",
                                              "constExpr": {
                                                "stringValue": "two"
                                              }
                                            },
                                            "value": {
                                              "id": "10",
                                              "constExpr": {
                                                "stringValue": "dos"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "map_string_string"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "12",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "map_string_string",
                          "value": {
                            "id": "4",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "5",
                                  "mapKey": {
                                    "id": "6",
                                    "constExpr": { "stringValue": "one" }
                                  },
                                  "value": {
                                    "id": "7",
                                    "constExpr": { "stringValue": "uno" }
                                  }
                                },
                                {
                                  "id": "8",
                                  "mapKey": {
                                    "id": "9",
                                    "constExpr": { "stringValue": "two" }
                                  },
                                  "value": {
                                    "id": "10",
                                    "constExpr": { "stringValue": "dos" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "map_string_string",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "single_unset",
            "expression": "has(TestAllTypes{}.single_int32)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "2": 16, "3": 18, "4": 3 },
                "macroCalls": {
                  "4": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": { "messageName": "TestAllTypes" }
                            },
                            "field": "single_int32"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_int32",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "single_set",
            "expression": "has(TestAllTypes{single_int32: 16}.single_int32)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "2": 16, "3": 29, "4": 31, "5": 34, "6": 3 },
                "macroCalls": {
                  "6": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "5",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "single_int32",
                                    "value": {
                                      "id": "4",
                                      "constExpr": { "int64Value": "16" }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "single_int32"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "single_int32",
                          "value": {
                            "id": "4",
                            "constExpr": { "int64Value": "16" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_int32",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "single_set_to_default",
            "expression": "has(TestAllTypes{single_int32: 0}.single_int32)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [48],
                "positions": { "2": 16, "3": 29, "4": 31, "5": 33, "6": 3 },
                "macroCalls": {
                  "6": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "5",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "single_int32",
                                    "value": {
                                      "id": "4",
                                      "constExpr": { "int64Value": "0" }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "single_int32"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "single_int32",
                          "value": {
                            "id": "4",
                            "constExpr": { "int64Value": "0" }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_int32",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "single_message_unset",
            "expression": "has(TestAllTypes{}.standalone_message)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": { "2": 16, "3": 18, "4": 3 },
                "macroCalls": {
                  "4": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": { "messageName": "TestAllTypes" }
                            },
                            "field": "standalone_message"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "standalone_message",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "single_message_set",
            "expression": "has(TestAllTypes{standalone_message: TestAllTypes.NestedMessage{bb: 123}}.standalone_message)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [94],
                "positions": {
                  "2": 16,
                  "3": 35,
                  "4": 63,
                  "5": 66,
                  "6": 68,
                  "7": 73,
                  "8": 3
                },
                "macroCalls": {
                  "8": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "7",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "standalone_message",
                                    "value": {
                                      "id": "4",
                                      "structExpr": {
                                        "messageName": "TestAllTypes.NestedMessage",
                                        "entries": [
                                          {
                                            "id": "5",
                                            "fieldKey": "bb",
                                            "value": {
                                              "id": "6",
                                              "constExpr": {
                                                "int64Value": "123"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "standalone_message"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "8",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "standalone_message",
                          "value": {
                            "id": "4",
                            "structExpr": {
                              "messageName": "TestAllTypes.NestedMessage",
                              "entries": [
                                {
                                  "id": "5",
                                  "fieldKey": "bb",
                                  "value": {
                                    "id": "6",
                                    "constExpr": { "int64Value": "123" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "standalone_message",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "single_message_set_to_default",
            "expression": "has(TestAllTypes{standalone_message: TestAllTypes.NestedMessage{}}.standalone_message)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [87],
                "positions": { "2": 16, "3": 35, "4": 63, "5": 66, "6": 3 },
                "macroCalls": {
                  "6": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "5",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "standalone_message",
                                    "value": {
                                      "id": "4",
                                      "structExpr": {
                                        "messageName": "TestAllTypes.NestedMessage"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "standalone_message"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "standalone_message",
                          "value": {
                            "id": "4",
                            "structExpr": {
                              "messageName": "TestAllTypes.NestedMessage"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "standalone_message",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "single_enum_unset",
            "expression": "has(TestAllTypes{}.standalone_enum)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "2": 16, "3": 18, "4": 3 },
                "macroCalls": {
                  "4": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": { "messageName": "TestAllTypes" }
                            },
                            "field": "standalone_enum"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "standalone_enum",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "single_enum_set",
            "expression": "has(TestAllTypes{standalone_enum: TestAllTypes.NestedEnum.BAR}.standalone_enum)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [80],
                "positions": {
                  "2": 16,
                  "3": 32,
                  "4": 34,
                  "5": 46,
                  "6": 57,
                  "7": 62,
                  "8": 3
                },
                "macroCalls": {
                  "8": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "7",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "standalone_enum",
                                    "value": {
                                      "id": "6",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "5",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "4",
                                              "identExpr": {
                                                "name": "TestAllTypes"
                                              }
                                            },
                                            "field": "NestedEnum"
                                          }
                                        },
                                        "field": "BAR"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "standalone_enum"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "8",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "standalone_enum",
                          "value": {
                            "id": "6",
                            "selectExpr": {
                              "operand": {
                                "id": "5",
                                "selectExpr": {
                                  "operand": {
                                    "id": "4",
                                    "identExpr": { "name": "TestAllTypes" }
                                  },
                                  "field": "NestedEnum"
                                }
                              },
                              "field": "BAR"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "standalone_enum",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "single_enum_set_zero",
            "expression": "has(TestAllTypes{standalone_enum: TestAllTypes.NestedEnum.FOO}.standalone_enum)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [80],
                "positions": {
                  "2": 16,
                  "3": 32,
                  "4": 34,
                  "5": 46,
                  "6": 57,
                  "7": 62,
                  "8": 3
                },
                "macroCalls": {
                  "8": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "7",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "standalone_enum",
                                    "value": {
                                      "id": "6",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "5",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "4",
                                              "identExpr": {
                                                "name": "TestAllTypes"
                                              }
                                            },
                                            "field": "NestedEnum"
                                          }
                                        },
                                        "field": "FOO"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "standalone_enum"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "8",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "standalone_enum",
                          "value": {
                            "id": "6",
                            "selectExpr": {
                              "operand": {
                                "id": "5",
                                "selectExpr": {
                                  "operand": {
                                    "id": "4",
                                    "identExpr": { "name": "TestAllTypes" }
                                  },
                                  "field": "NestedEnum"
                                }
                              },
                              "field": "FOO"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "standalone_enum",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "oneof_unset",
            "expression": "has(TestAllTypes{}.single_nested_message)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "2": 16, "3": 18, "4": 3 },
                "macroCalls": {
                  "4": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "3",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": { "messageName": "TestAllTypes" }
                            },
                            "field": "single_nested_message"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": { "messageName": "TestAllTypes" }
                  },
                  "field": "single_nested_message",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "oneof_other_set",
            "expression": "has(TestAllTypes{single_nested_enum: TestAllTypes.NestedEnum.BAZ}.single_nested_message)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [89],
                "positions": {
                  "2": 16,
                  "3": 35,
                  "4": 37,
                  "5": 49,
                  "6": 60,
                  "7": 65,
                  "8": 3
                },
                "macroCalls": {
                  "8": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "7",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "single_nested_enum",
                                    "value": {
                                      "id": "6",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "5",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "4",
                                              "identExpr": {
                                                "name": "TestAllTypes"
                                              }
                                            },
                                            "field": "NestedEnum"
                                          }
                                        },
                                        "field": "BAZ"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "single_nested_message"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "8",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "single_nested_enum",
                          "value": {
                            "id": "6",
                            "selectExpr": {
                              "operand": {
                                "id": "5",
                                "selectExpr": {
                                  "operand": {
                                    "id": "4",
                                    "identExpr": { "name": "TestAllTypes" }
                                  },
                                  "field": "NestedEnum"
                                }
                              },
                              "field": "BAZ"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_nested_message",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "oneof_set",
            "expression": "has(TestAllTypes{single_nested_message: TestAllTypes.NestedMessage{}}.single_nested_message)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [93],
                "positions": { "2": 16, "3": 38, "4": 66, "5": 69, "6": 3 },
                "macroCalls": {
                  "6": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "5",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "single_nested_message",
                                    "value": {
                                      "id": "4",
                                      "structExpr": {
                                        "messageName": "TestAllTypes.NestedMessage"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "single_nested_message"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "single_nested_message",
                          "value": {
                            "id": "4",
                            "structExpr": {
                              "messageName": "TestAllTypes.NestedMessage"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_nested_message",
                  "testOnly": true
                }
              }
            }
          },
          {
            "name": "oneof_set_default",
            "expression": "has(TestAllTypes{single_nested_enum: TestAllTypes.NestedEnum.FOO}.single_nested_enum)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [86],
                "positions": {
                  "2": 16,
                  "3": 35,
                  "4": 37,
                  "5": 49,
                  "6": 60,
                  "7": 65,
                  "8": 3
                },
                "macroCalls": {
                  "8": {
                    "callExpr": {
                      "function": "has",
                      "args": [
                        {
                          "id": "7",
                          "selectExpr": {
                            "operand": {
                              "id": "2",
                              "structExpr": {
                                "messageName": "TestAllTypes",
                                "entries": [
                                  {
                                    "id": "3",
                                    "fieldKey": "single_nested_enum",
                                    "value": {
                                      "id": "6",
                                      "selectExpr": {
                                        "operand": {
                                          "id": "5",
                                          "selectExpr": {
                                            "operand": {
                                              "id": "4",
                                              "identExpr": {
                                                "name": "TestAllTypes"
                                              }
                                            },
                                            "field": "NestedEnum"
                                          }
                                        },
                                        "field": "FOO"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "field": "single_nested_enum"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "expr": {
                "id": "8",
                "selectExpr": {
                  "operand": {
                    "id": "2",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "3",
                          "fieldKey": "single_nested_enum",
                          "value": {
                            "id": "6",
                            "selectExpr": {
                              "operand": {
                                "id": "5",
                                "selectExpr": {
                                  "operand": {
                                    "id": "4",
                                    "identExpr": { "name": "TestAllTypes" }
                                  },
                                  "field": "NestedEnum"
                                }
                              },
                              "field": "FOO"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_nested_enum",
                  "testOnly": true
                }
              }
            }
          }
        ]
      },
      {
        "name": "set_null",
        "tests": [
          {
            "name": "single_message",
            "expression": "TestAllTypes{single_nested_message: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [60],
                "positions": { "1": 12, "2": 34, "3": 36, "4": 42, "5": 57 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_nested_message",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "single_any",
            "expression": "TestAllTypes{single_any: null}.single_any",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 12, "2": 23, "3": 25, "4": 30 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_any",
                          "value": {
                            "id": "3",
                            "constExpr": { "nullValue": null }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_any"
                }
              }
            }
          },
          {
            "name": "single_value",
            "expression": "TestAllTypes{single_value: null}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 12, "2": 25, "3": 27, "4": 32 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "constExpr": { "nullValue": null }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "single_duration",
            "expression": "TestAllTypes{single_duration: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [54],
                "positions": { "1": 12, "2": 28, "3": 30, "4": 36, "5": 51 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_duration",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "single_timestamp",
            "expression": "TestAllTypes{single_timestamp: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [55],
                "positions": { "1": 12, "2": 29, "3": 31, "4": 37, "5": 52 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_timestamp",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "single_scalar",
            "expression": "TestAllTypes{single_bool: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": { "1": 12, "2": 24, "3": 26, "4": 32, "5": 47 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_bool",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "repeated",
            "expression": "TestAllTypes{repeated_int32: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [53],
                "positions": { "1": 12, "2": 27, "3": 29, "4": 35, "5": 50 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "repeated_int32",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "map",
            "expression": "TestAllTypes{map_string_string: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [56],
                "positions": { "1": 12, "2": 30, "3": 32, "4": 38, "5": 53 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "map_string_string",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "list_value",
            "expression": "TestAllTypes{list_value: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "1": 12, "2": 23, "3": 25, "4": 31, "5": 46 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "list_value",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "single_struct",
            "expression": "TestAllTypes{single_struct: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": { "1": 12, "2": 26, "3": 28, "4": 34, "5": 49 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_struct",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "string",
    "sections": [
      {
        "name": "size",
        "tests": [
          {
            "name": "empty",
            "expression": "size('')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [9],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "size",
                  "args": [{ "id": "2", "constExpr": { "stringValue": "" } }]
                }
              }
            }
          },
          {
            "name": "one_ascii",
            "expression": "size('A')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "size",
                  "args": [{ "id": "2", "constExpr": { "stringValue": "A" } }]
                }
              }
            }
          },
          {
            "name": "one_unicode",
            "expression": "size('Ã¿')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "size",
                  "args": [{ "id": "2", "constExpr": { "stringValue": "Ã¿" } }]
                }
              }
            }
          },
          {
            "name": "ascii",
            "expression": "size('four')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "size",
                  "args": [
                    { "id": "2", "constExpr": { "stringValue": "four" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode",
            "expression": "size('ÏÎ­Î½ÏÎµ')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "size",
                  "args": [
                    { "id": "2", "constExpr": { "stringValue": "ÏÎ­Î½ÏÎµ" } }
                  ]
                }
              }
            }
          },
          {
            "name": "bytes_empty",
            "expression": "size(b'')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "size",
                  "args": [{ "id": "2", "constExpr": { "bytesValue": "" } }]
                }
              }
            }
          },
          {
            "name": "bytes",
            "expression": "size(b'abc')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 4, "2": 5 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "size",
                  "args": [{ "id": "2", "constExpr": { "bytesValue": "YWJj" } }]
                }
              }
            }
          }
        ]
      },
      {
        "name": "starts_with",
        "tests": [
          {
            "name": "basic_true",
            "expression": "'foobar'.startsWith('foo')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 0, "2": 19, "3": 20 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "foobar" }
                  },
                  "function": "startsWith",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "foo" } }]
                }
              }
            }
          },
          {
            "name": "basic_false",
            "expression": "'foobar'.startsWith('bar')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 0, "2": 19, "3": 20 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "foobar" }
                  },
                  "function": "startsWith",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "bar" } }]
                }
              }
            }
          },
          {
            "name": "empty_target",
            "expression": "''.startsWith('foo')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 0, "2": 13, "3": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "" } },
                  "function": "startsWith",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "foo" } }]
                }
              }
            }
          },
          {
            "name": "empty_arg",
            "expression": "'foobar'.startsWith('')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": { "1": 0, "2": 19, "3": 20 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "foobar" }
                  },
                  "function": "startsWith",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "" } }]
                }
              }
            }
          },
          {
            "name": "empty_empty",
            "expression": "''.startsWith('')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 13, "3": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "" } },
                  "function": "startsWith",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "" } }]
                }
              }
            }
          },
          {
            "name": "unicode",
            "expression": "'Ð·Ð°Ð²ÑÑÐ°'.startsWith('Ð·Ð°')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 0, "2": 19, "3": 20 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "Ð·Ð°Ð²ÑÑÐ°" }
                  },
                  "function": "startsWith",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "Ð·Ð°" } }]
                }
              }
            }
          },
          {
            "name": "unicode_smp",
            "expression": "'ð±ðð'.startsWith('ð±')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": { "1": 0, "2": 16, "3": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "ð±ðð" }
                  },
                  "function": "startsWith",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "ð±" } }]
                }
              }
            }
          }
        ]
      },
      {
        "name": "ends_with",
        "tests": [
          {
            "name": "basic_true",
            "expression": "'foobar'.endsWith('bar')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": { "1": 0, "2": 17, "3": 18 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "foobar" }
                  },
                  "function": "endsWith",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "bar" } }]
                }
              }
            }
          },
          {
            "name": "basic_false",
            "expression": "'foobar'.endsWith('foo')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": { "1": 0, "2": 17, "3": 18 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "foobar" }
                  },
                  "function": "endsWith",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "foo" } }]
                }
              }
            }
          },
          {
            "name": "empty_target",
            "expression": "''.endsWith('foo')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 0, "2": 11, "3": 12 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "" } },
                  "function": "endsWith",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "foo" } }]
                }
              }
            }
          },
          {
            "name": "empty_arg",
            "expression": "'foobar'.endsWith('')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": { "1": 0, "2": 17, "3": 18 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "foobar" }
                  },
                  "function": "endsWith",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "" } }]
                }
              }
            }
          },
          {
            "name": "empty_empty",
            "expression": "''.endsWith('')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 11, "3": 12 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "" } },
                  "function": "endsWith",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "" } }]
                }
              }
            }
          },
          {
            "name": "unicode",
            "expression": "'fortÃ©'.endsWith('tÃ©')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": { "1": 0, "2": 16, "3": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "fortÃ©" }
                  },
                  "function": "endsWith",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "tÃ©" } }]
                }
              }
            }
          },
          {
            "name": "unicode_smp",
            "expression": "'ð±ðð'.endsWith('ð')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 14, "3": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "ð±ðð" }
                  },
                  "function": "endsWith",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "ð" } }]
                }
              }
            }
          }
        ]
      },
      {
        "name": "matches",
        "tests": [
          {
            "name": "basic",
            "expression": "'hubba'.matches('ubb')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": { "1": 0, "2": 15, "3": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "hubba" }
                  },
                  "function": "matches",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "ubb" } }]
                }
              }
            }
          },
          {
            "name": "empty_target",
            "expression": "''.matches('foo|bar')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": { "1": 0, "2": 10, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "" } },
                  "function": "matches",
                  "args": [
                    { "id": "3", "constExpr": { "stringValue": "foo|bar" } }
                  ]
                }
              }
            }
          },
          {
            "name": "empty_arg",
            "expression": "'cows'.matches('')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 0, "2": 14, "3": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "cows" }
                  },
                  "function": "matches",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "" } }]
                }
              }
            }
          },
          {
            "name": "empty_empty",
            "expression": "''.matches('')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [15],
                "positions": { "1": 0, "2": 10, "3": 11 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "" } },
                  "function": "matches",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "" } }]
                }
              }
            }
          },
          {
            "name": "re_concat",
            "expression": "'abcd'.matches('bc')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 0, "2": 14, "3": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "abcd" }
                  },
                  "function": "matches",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "bc" } }]
                }
              }
            }
          },
          {
            "name": "re_alt",
            "expression": "'grey'.matches('gr(a|e)y')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 0, "2": 14, "3": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "grey" }
                  },
                  "function": "matches",
                  "args": [
                    { "id": "3", "constExpr": { "stringValue": "gr(a|e)y" } }
                  ]
                }
              }
            }
          },
          {
            "name": "re_rep",
            "expression": "'banana'.matches('ba(na)*')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 0, "2": 16, "3": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "banana" }
                  },
                  "function": "matches",
                  "args": [
                    { "id": "3", "constExpr": { "stringValue": "ba(na)*" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode",
            "expression": "'maÃ±ana'.matches('a+Ã±+a+')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 0, "2": 16, "3": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "maÃ±ana" }
                  },
                  "function": "matches",
                  "args": [
                    { "id": "3", "constExpr": { "stringValue": "a+Ã±+a+" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_smp",
            "expression": "'ð±ðð'.matches('(a|ð){2}')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 0, "2": 13, "3": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "ð±ðð" }
                  },
                  "function": "matches",
                  "args": [
                    { "id": "3", "constExpr": { "stringValue": "(a|ð){2}" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "concatentation",
        "tests": [
          {
            "name": "concat_true",
            "expression": "'he' + 'llo'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 5, "3": 7 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "he" } },
                    { "id": "3", "constExpr": { "stringValue": "llo" } }
                  ]
                }
              }
            }
          },
          {
            "name": "concat_with_spaces",
            "expression": "'hello' + ' ' == 'hello'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": { "1": 0, "2": 8, "3": 10, "4": 14, "5": 17 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          {
                            "id": "1",
                            "constExpr": { "stringValue": "hello" }
                          },
                          { "id": "3", "constExpr": { "stringValue": " " } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "stringValue": "hello" } }
                  ]
                }
              }
            }
          },
          {
            "name": "concat_empty_string_beginning",
            "expression": "'' + 'abc'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "" } },
                    { "id": "3", "constExpr": { "stringValue": "abc" } }
                  ]
                }
              }
            }
          },
          {
            "name": "concat_empty_string_end",
            "expression": "'abc' + ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [11],
                "positions": { "1": 0, "2": 6, "3": 8 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "abc" } },
                    { "id": "3", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "concat_empty_with_empty",
            "expression": "'' + ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [8],
                "positions": { "1": 0, "2": 3, "3": 5 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "stringValue": "" } },
                    { "id": "3", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_unicode",
            "expression": "'Â¢' + 'Ã¿' + 'È'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 4, "3": 6, "4": 10, "5": 12 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          { "id": "1", "constExpr": { "stringValue": "Â¢" } },
                          { "id": "3", "constExpr": { "stringValue": "Ã¿" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "stringValue": "È" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ascii_unicode",
            "expression": "'r' + 'Ã´' + 'le'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 4, "3": 6, "4": 10, "5": 12 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          { "id": "1", "constExpr": { "stringValue": "r" } },
                          { "id": "3", "constExpr": { "stringValue": "Ã´" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "stringValue": "le" } }
                  ]
                }
              }
            }
          },
          {
            "name": "ascii_unicode_unicode_smp",
            "expression": "'a' + 'Ã¿' + 'ð±'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 4, "3": 6, "4": 10, "5": 12 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          { "id": "1", "constExpr": { "stringValue": "a" } },
                          { "id": "3", "constExpr": { "stringValue": "Ã¿" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "stringValue": "ð±" } }
                  ]
                }
              }
            }
          },
          {
            "name": "empty_unicode",
            "expression": "'' + 'Î©' + ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [14],
                "positions": { "1": 0, "2": 3, "3": 5, "4": 9, "5": 11 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          { "id": "1", "constExpr": { "stringValue": "" } },
                          { "id": "3", "constExpr": { "stringValue": "Î©" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "contains",
        "tests": [
          {
            "name": "contains_true",
            "expression": "'hello'.contains('he')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": { "1": 0, "2": 16, "3": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "hello" }
                  },
                  "function": "contains",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "he" } }]
                }
              }
            }
          },
          {
            "name": "contains_empty",
            "expression": "'hello'.contains('')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 0, "2": 16, "3": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "hello" }
                  },
                  "function": "contains",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "" } }]
                }
              }
            }
          },
          {
            "name": "contains_false",
            "expression": "'hello'.contains('ol')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": { "1": 0, "2": 16, "3": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "hello" }
                  },
                  "function": "contains",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "ol" } }]
                }
              }
            }
          },
          {
            "name": "contains_multiple",
            "expression": "'abababc'.contains('ababc')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 0, "2": 18, "3": 19 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "abababc" }
                  },
                  "function": "contains",
                  "args": [
                    { "id": "3", "constExpr": { "stringValue": "ababc" } }
                  ]
                }
              }
            }
          },
          {
            "name": "contains_unicode",
            "expression": "'StraÃe'.contains('aÃ')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": { "1": 0, "2": 17, "3": 18 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "StraÃe" }
                  },
                  "function": "contains",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "aÃ" } }]
                }
              }
            }
          },
          {
            "name": "contains_unicode_smp",
            "expression": "'ð±ðð'.contains('ð')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 14, "3": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "ð±ðð" }
                  },
                  "function": "contains",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "ð" } }]
                }
              }
            }
          },
          {
            "name": "empty_contains",
            "expression": "''.contains('something')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": { "1": 0, "2": 11, "3": 12 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "" } },
                  "function": "contains",
                  "args": [
                    { "id": "3", "constExpr": { "stringValue": "something" } }
                  ]
                }
              }
            }
          },
          {
            "name": "empty_empty",
            "expression": "''.contains('')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 11, "3": 12 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "" } },
                  "function": "contains",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "" } }]
                }
              }
            }
          }
        ]
      },
      {
        "name": "bytes_concat",
        "tests": [
          {
            "name": "concat",
            "expression": "b'abc' + b'def'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 7, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "YWJj" } },
                    { "id": "3", "constExpr": { "bytesValue": "ZGVm" } }
                  ]
                }
              }
            }
          },
          {
            "name": "left_unit",
            "expression": "b'' + b'\\xffoo'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "" } },
                    { "id": "3", "constExpr": { "bytesValue": "/29v" } }
                  ]
                }
              }
            }
          },
          {
            "name": "right_unit",
            "expression": "b'zxy' + b''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [13],
                "positions": { "1": 0, "2": 7, "3": 9 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "enh5" } },
                    { "id": "3", "constExpr": { "bytesValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "empty_empty",
            "expression": "b'' + b''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [10],
                "positions": { "1": 0, "2": 4, "3": 6 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    { "id": "1", "constExpr": { "bytesValue": "" } },
                    { "id": "3", "constExpr": { "bytesValue": "" } }
                  ]
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "string_ext",
    "sections": [
      {
        "name": "char_at",
        "tests": [
          {
            "name": "middle_index",
            "expression": "'tacocat'.charAt(3)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 16, "3": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "tacocat" }
                  },
                  "function": "charAt",
                  "args": [{ "id": "3", "constExpr": { "int64Value": "3" } }]
                }
              }
            }
          },
          {
            "name": "end_index",
            "expression": "'tacocat'.charAt(7)",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 16, "3": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "tacocat" }
                  },
                  "function": "charAt",
                  "args": [{ "id": "3", "constExpr": { "int64Value": "7" } }]
                }
              }
            }
          },
          {
            "name": "multiple",
            "expression": "'Â©Î±T'.charAt(0) == 'Â©' \u0026\u0026 'Â©Î±T'.charAt(1) == 'Î±' \u0026\u0026 'Â©Î±T'.charAt(2) == 'T'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [75],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 16,
                  "5": 19,
                  "6": 26,
                  "7": 38,
                  "8": 39,
                  "9": 42,
                  "10": 45,
                  "11": 23,
                  "12": 52,
                  "13": 64,
                  "14": 65,
                  "15": 68,
                  "16": 71,
                  "17": 49
                }
              },
              "expr": {
                "id": "11",
                "callExpr": {
                  "function": "_\u0026\u0026_",
                  "args": [
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "_==_",
                        "args": [
                          {
                            "id": "2",
                            "callExpr": {
                              "target": {
                                "id": "1",
                                "constExpr": { "stringValue": "Â©Î±T" }
                              },
                              "function": "charAt",
                              "args": [
                                {
                                  "id": "3",
                                  "constExpr": { "int64Value": "0" }
                                }
                              ]
                            }
                          },
                          { "id": "5", "constExpr": { "stringValue": "Â©" } }
                        ]
                      }
                    },
                    {
                      "id": "9",
                      "callExpr": {
                        "function": "_==_",
                        "args": [
                          {
                            "id": "7",
                            "callExpr": {
                              "target": {
                                "id": "6",
                                "constExpr": { "stringValue": "Â©Î±T" }
                              },
                              "function": "charAt",
                              "args": [
                                {
                                  "id": "8",
                                  "constExpr": { "int64Value": "1" }
                                }
                              ]
                            }
                          },
                          { "id": "10", "constExpr": { "stringValue": "Î±" } }
                        ]
                      }
                    },
                    {
                      "id": "15",
                      "callExpr": {
                        "function": "_==_",
                        "args": [
                          {
                            "id": "13",
                            "callExpr": {
                              "target": {
                                "id": "12",
                                "constExpr": { "stringValue": "Â©Î±T" }
                              },
                              "function": "charAt",
                              "args": [
                                {
                                  "id": "14",
                                  "constExpr": { "int64Value": "2" }
                                }
                              ]
                            }
                          },
                          { "id": "16", "constExpr": { "stringValue": "T" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "index_of",
        "tests": [
          {
            "name": "empty_index",
            "expression": "'tacocat'.indexOf('')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [22],
                "positions": { "1": 0, "2": 17, "3": 18 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "tacocat" }
                  },
                  "function": "indexOf",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "" } }]
                }
              }
            }
          },
          {
            "name": "string_index",
            "expression": "'tacocat'.indexOf('ac')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": { "1": 0, "2": 17, "3": 18 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "tacocat" }
                  },
                  "function": "indexOf",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "ac" } }]
                }
              }
            }
          },
          {
            "name": "nomatch",
            "expression": "'tacocat'.indexOf('none') == -1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 0, "2": 17, "3": 18, "4": 26, "5": 29 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "indexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "none" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "empty_index",
            "expression": "'tacocat'.indexOf('', 3) == 3",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": {
                  "1": 0,
                  "2": 17,
                  "3": 18,
                  "4": 22,
                  "5": 25,
                  "6": 28
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "indexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "" } },
                          { "id": "4", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "3" } }
                  ]
                }
              }
            }
          },
          {
            "name": "char_index",
            "expression": "'tacocat'.indexOf('a', 3) == 5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": {
                  "1": 0,
                  "2": 17,
                  "3": 18,
                  "4": 23,
                  "5": 26,
                  "6": 29
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "indexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "a" } },
                          { "id": "4", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "5" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_index",
            "expression": "'tacocat'.indexOf('at', 3) == 5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 0,
                  "2": 17,
                  "3": 18,
                  "4": 24,
                  "5": 27,
                  "6": 30
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "indexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "at" } },
                          { "id": "4", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "5" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_char",
            "expression": "'taÂ©oÂ©Î±T'.indexOf('Â©') == 2",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 0, "2": 17, "3": 18, "4": 23, "5": 26 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "taÂ©oÂ©Î±T" }
                        },
                        "function": "indexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "Â©" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_char_index",
            "expression": "'taÂ©oÂ©Î±T'.indexOf('Â©', 3) == 4",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": {
                  "1": 0,
                  "2": 17,
                  "3": 18,
                  "4": 23,
                  "5": 26,
                  "6": 29
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "taÂ©oÂ©Î±T" }
                        },
                        "function": "indexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "Â©" } },
                          { "id": "4", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "4" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_string_index",
            "expression": "'taÂ©oÂ©Î±T'.indexOf('Â©Î±T', 3) == 4",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": {
                  "1": 0,
                  "2": 17,
                  "3": 18,
                  "4": 25,
                  "5": 28,
                  "6": 31
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "taÂ©oÂ©Î±T" }
                        },
                        "function": "indexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "Â©Î±T" } },
                          { "id": "4", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "4" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_string_nomatch_index",
            "expression": "'taÂ©oÂ©Î±T'.indexOf('Â©Î±', 5) == -1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": {
                  "1": 0,
                  "2": 17,
                  "3": 18,
                  "4": 24,
                  "5": 27,
                  "6": 30
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "taÂ©oÂ©Î±T" }
                        },
                        "function": "indexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "Â©Î±" } },
                          { "id": "4", "constExpr": { "int64Value": "5" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "char_index",
            "expression": "'ijk'.indexOf('k') == 2",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 19, "5": 22 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "ijk" }
                        },
                        "function": "indexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "k" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_with_space_fullmatch",
            "expression": "'hello wello'.indexOf('hello wello') == 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 0, "2": 21, "3": 22, "4": 37, "5": 40 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "hello wello" }
                        },
                        "function": "indexOf",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "hello wello" }
                          }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_with_space_index",
            "expression": "'hello wello'.indexOf('ello', 6) == 7",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": {
                  "1": 0,
                  "2": 21,
                  "3": 22,
                  "4": 30,
                  "5": 33,
                  "6": 36
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "hello wello" }
                        },
                        "function": "indexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "ello" } },
                          { "id": "4", "constExpr": { "int64Value": "6" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "7" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_nomatch_index",
            "expression": "'hello wello'.indexOf('elbo room!!') == -1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [43],
                "positions": { "1": 0, "2": 21, "3": 22, "4": 37, "5": 40 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "hello wello" }
                        },
                        "function": "indexOf",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "elbo room!!" }
                          }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "last_index_of",
        "tests": [
          {
            "name": "empty",
            "expression": "'tacocat'.lastIndexOf('') == 7",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 0, "2": 21, "3": 22, "4": 26, "5": 29 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "lastIndexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "7" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string",
            "expression": "'tacocat'.lastIndexOf('at') == 5",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 0, "2": 21, "3": 22, "4": 28, "5": 31 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "lastIndexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "at" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "5" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_nomatch",
            "expression": "'tacocat'.lastIndexOf('none') == -1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 0, "2": 21, "3": 22, "4": 30, "5": 33 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "lastIndexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "none" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "empty_index",
            "expression": "'tacocat'.lastIndexOf('', 3) == 3",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": {
                  "1": 0,
                  "2": 21,
                  "3": 22,
                  "4": 26,
                  "5": 29,
                  "6": 32
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "lastIndexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "" } },
                          { "id": "4", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "3" } }
                  ]
                }
              }
            }
          },
          {
            "name": "char_index",
            "expression": "'tacocat'.lastIndexOf('a', 3) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": {
                  "1": 0,
                  "2": 21,
                  "3": 22,
                  "4": 27,
                  "5": 30,
                  "6": 33
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "lastIndexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "a" } },
                          { "id": "4", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_char",
            "expression": "'taÂ©oÂ©Î±T'.lastIndexOf('Â©') == 4",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 0, "2": 21, "3": 22, "4": 27, "5": 30 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "taÂ©oÂ©Î±T" }
                        },
                        "function": "lastIndexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "Â©" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "4" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_char_index",
            "expression": "'taÂ©oÂ©Î±T'.lastIndexOf('Â©', 3) == 2",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": {
                  "1": 0,
                  "2": 21,
                  "3": 22,
                  "4": 27,
                  "5": 30,
                  "6": 33
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "taÂ©oÂ©Î±T" }
                        },
                        "function": "lastIndexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "Â©" } },
                          { "id": "4", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "2" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_string_index",
            "expression": "'taÂ©oÂ©Î±T'.lastIndexOf('Â©Î±', 4) == 4",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": {
                  "1": 0,
                  "2": 21,
                  "3": 22,
                  "4": 28,
                  "5": 31,
                  "6": 34
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "taÂ©oÂ©Î±T" }
                        },
                        "function": "lastIndexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "Â©Î±" } },
                          { "id": "4", "constExpr": { "int64Value": "4" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "4" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_with_space_string_index",
            "expression": "'hello wello'.lastIndexOf('ello', 6) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": {
                  "1": 0,
                  "2": 25,
                  "3": 26,
                  "4": 34,
                  "5": 37,
                  "6": 40
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "hello wello" }
                        },
                        "function": "lastIndexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "ello" } },
                          { "id": "4", "constExpr": { "int64Value": "6" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_with_space_string_nomatch",
            "expression": "'hello wello'.lastIndexOf('low') == -1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": { "1": 0, "2": 25, "3": 26, "4": 33, "5": 36 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "hello wello" }
                        },
                        "function": "lastIndexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "low" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_with_space_string_with_space_nomatch",
            "expression": "'hello wello'.lastIndexOf('elbo room!!') == -1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": { "1": 0, "2": 25, "3": 26, "4": 41, "5": 44 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "hello wello" }
                        },
                        "function": "lastIndexOf",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "elbo room!!" }
                          }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "string_with_space_fullmatch",
            "expression": "'hello wello'.lastIndexOf('hello wello') == 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 0, "2": 25, "3": 26, "4": 41, "5": 44 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "hello wello" }
                        },
                        "function": "lastIndexOf",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "hello wello" }
                          }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "repeated_string",
            "expression": "'bananananana'.lastIndexOf('nana', 7) == 6",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [43],
                "positions": {
                  "1": 0,
                  "2": 26,
                  "3": 27,
                  "4": 35,
                  "5": 38,
                  "6": 41
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "bananananana" }
                        },
                        "function": "lastIndexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "nana" } },
                          { "id": "4", "constExpr": { "int64Value": "7" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "6" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "ascii_casing",
        "tests": [
          {
            "name": "lowerascii",
            "expression": "'TacoCat'.lowerAscii() == 'tacocat'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 0, "2": 20, "3": 23, "4": 26 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "TacoCat" }
                        },
                        "function": "lowerAscii"
                      }
                    },
                    { "id": "4", "constExpr": { "stringValue": "tacocat" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lowerascii_unicode",
            "expression": "'TacoCÃt'.lowerAscii() == 'tacocÃt'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 0, "2": 20, "3": 23, "4": 26 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "TacoCÃt" }
                        },
                        "function": "lowerAscii"
                      }
                    },
                    { "id": "4", "constExpr": { "stringValue": "tacocÃt" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lowerascii_unicode_with_space",
            "expression": "'TacoCÃt Xii'.lowerAscii() == 'tacocÃt xii'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 0, "2": 24, "3": 27, "4": 30 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "TacoCÃt Xii" }
                        },
                        "function": "lowerAscii"
                      }
                    },
                    { "id": "4", "constExpr": { "stringValue": "tacocÃt xii" } }
                  ]
                }
              }
            }
          },
          {
            "name": "upperascii",
            "expression": "'tacoCat'.upperAscii() == 'TACOCAT'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 0, "2": 20, "3": 23, "4": 26 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacoCat" }
                        },
                        "function": "upperAscii"
                      }
                    },
                    { "id": "4", "constExpr": { "stringValue": "TACOCAT" } }
                  ]
                }
              }
            }
          },
          {
            "name": "upperascii_unicode",
            "expression": "'tacoCÎ±t'.upperAscii() == 'TACOCÎ±T'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 0, "2": 20, "3": 23, "4": 26 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacoCÎ±t" }
                        },
                        "function": "upperAscii"
                      }
                    },
                    { "id": "4", "constExpr": { "stringValue": "TACOCÎ±T" } }
                  ]
                }
              }
            }
          },
          {
            "name": "upperascii_unicode_with_space",
            "expression": "'TacoCÃt Xii'.upperAscii() == 'TACOCÃT XII'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 0, "2": 24, "3": 27, "4": 30 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "TacoCÃt Xii" }
                        },
                        "function": "upperAscii"
                      }
                    },
                    { "id": "4", "constExpr": { "stringValue": "TACOCÃT XII" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "replace",
        "tests": [
          {
            "name": "no_placeholder",
            "expression": "'12 days 12 hours'.replace('{0}', '2') == '12 days 12 hours'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [61],
                "positions": {
                  "1": 0,
                  "2": 26,
                  "3": 27,
                  "4": 34,
                  "5": 39,
                  "6": 42
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "12 days 12 hours" }
                        },
                        "function": "replace",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "{0}" } },
                          { "id": "4", "constExpr": { "stringValue": "2" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "constExpr": { "stringValue": "12 days 12 hours" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "basic",
            "expression": "'{0} days {0} hours'.replace('{0}', '2') == '2 days 2 hours'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [61],
                "positions": {
                  "1": 0,
                  "2": 28,
                  "3": 29,
                  "4": 36,
                  "5": 41,
                  "6": 44
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "{0} days {0} hours" }
                        },
                        "function": "replace",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "{0}" } },
                          { "id": "4", "constExpr": { "stringValue": "2" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "constExpr": { "stringValue": "2 days 2 hours" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "chained",
            "expression": "'{0} days {0} hours'.replace('{0}', '2', 1).replace('{0}', '23') == '2 days 23 hours'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [86],
                "positions": {
                  "1": 0,
                  "2": 28,
                  "3": 29,
                  "4": 36,
                  "5": 41,
                  "6": 51,
                  "7": 52,
                  "8": 59,
                  "9": 65,
                  "10": 68
                }
              },
              "expr": {
                "id": "9",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "6",
                      "callExpr": {
                        "target": {
                          "id": "2",
                          "callExpr": {
                            "target": {
                              "id": "1",
                              "constExpr": {
                                "stringValue": "{0} days {0} hours"
                              }
                            },
                            "function": "replace",
                            "args": [
                              {
                                "id": "3",
                                "constExpr": { "stringValue": "{0}" }
                              },
                              {
                                "id": "4",
                                "constExpr": { "stringValue": "2" }
                              },
                              { "id": "5", "constExpr": { "int64Value": "1" } }
                            ]
                          }
                        },
                        "function": "replace",
                        "args": [
                          { "id": "7", "constExpr": { "stringValue": "{0}" } },
                          { "id": "8", "constExpr": { "stringValue": "23" } }
                        ]
                      }
                    },
                    {
                      "id": "10",
                      "constExpr": { "stringValue": "2 days 23 hours" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode",
            "expression": "'1 Â©Î±T taco'.replace('Î±T', 'oÂ©Î±') == '1 Â©oÂ©Î± taco'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [51],
                "positions": {
                  "1": 0,
                  "2": 20,
                  "3": 21,
                  "4": 27,
                  "5": 34,
                  "6": 37
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "1 Â©Î±T taco" }
                        },
                        "function": "replace",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "Î±T" } },
                          { "id": "4", "constExpr": { "stringValue": "oÂ©Î±" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "constExpr": { "stringValue": "1 Â©oÂ©Î± taco" }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "split",
        "tests": [
          {
            "name": "empty",
            "expression": "'hello world'.split(' ') == ['hello', 'world']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": {
                  "1": 0,
                  "2": 19,
                  "3": 20,
                  "4": 25,
                  "5": 28,
                  "6": 29,
                  "7": 38
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "hello world" }
                        },
                        "function": "split",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": " " } }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "6",
                            "constExpr": { "stringValue": "hello" }
                          },
                          { "id": "7", "constExpr": { "stringValue": "world" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "zero_limit",
            "expression": "'hello world events!'.split(' ', 0) == []",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": {
                  "1": 0,
                  "2": 27,
                  "3": 28,
                  "4": 33,
                  "5": 36,
                  "6": 39
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "hello world events!" }
                        },
                        "function": "split",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": " " } },
                          { "id": "4", "constExpr": { "int64Value": "0" } }
                        ]
                      }
                    },
                    { "id": "6", "listExpr": {} }
                  ]
                }
              }
            }
          },
          {
            "name": "one_limit",
            "expression": "'hello world events!'.split(' ', 1) == ['hello world events!']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [63],
                "positions": {
                  "1": 0,
                  "2": 27,
                  "3": 28,
                  "4": 33,
                  "5": 36,
                  "6": 39,
                  "7": 40
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "hello world events!" }
                        },
                        "function": "split",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": " " } },
                          { "id": "4", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "7",
                            "constExpr": {
                              "stringValue": "hello world events!"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_negative_limit",
            "expression": "'oÂ©oÂ©oÂ©o'.split('Â©', -1) == ['o', 'o', 'o', 'o']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": {
                  "1": 0,
                  "2": 15,
                  "3": 16,
                  "4": 21,
                  "5": 25,
                  "6": 28,
                  "7": 29,
                  "8": 34,
                  "9": 39,
                  "10": 44
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "oÂ©oÂ©oÂ©o" }
                        },
                        "function": "split",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "Â©" } },
                          { "id": "4", "constExpr": { "int64Value": "-1" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "listExpr": {
                        "elements": [
                          { "id": "7", "constExpr": { "stringValue": "o" } },
                          { "id": "8", "constExpr": { "stringValue": "o" } },
                          { "id": "9", "constExpr": { "stringValue": "o" } },
                          { "id": "10", "constExpr": { "stringValue": "o" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "substring",
        "tests": [
          {
            "name": "start",
            "expression": "'tacocat'.substring(4) == 'cat'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 0, "2": 19, "3": 20, "4": 23, "5": 26 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "substring",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "4" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "stringValue": "cat" } }
                  ]
                }
              }
            }
          },
          {
            "name": "start_with_max_length",
            "expression": "'tacocat'.substring(7) == ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": { "1": 0, "2": 19, "3": 20, "4": 23, "5": 26 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "substring",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "7" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "start_and_end",
            "expression": "'tacocat'.substring(0, 4) == 'taco'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": {
                  "1": 0,
                  "2": 19,
                  "3": 20,
                  "4": 23,
                  "5": 26,
                  "6": 29
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "substring",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "0" } },
                          { "id": "4", "constExpr": { "int64Value": "4" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "stringValue": "taco" } }
                  ]
                }
              }
            }
          },
          {
            "name": "start_and_end_equal_value",
            "expression": "'tacocat'.substring(4, 4) == ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 0,
                  "2": 19,
                  "3": 20,
                  "4": 23,
                  "5": 26,
                  "6": 29
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "substring",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "4" } },
                          { "id": "4", "constExpr": { "int64Value": "4" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_start_and_end",
            "expression": "'taÂ©oÂ©Î±T'.substring(2, 6) == 'Â©oÂ©Î±'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": {
                  "1": 0,
                  "2": 19,
                  "3": 20,
                  "4": 23,
                  "5": 26,
                  "6": 29
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "taÂ©oÂ©Î±T" }
                        },
                        "function": "substring",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "2" } },
                          { "id": "4", "constExpr": { "int64Value": "6" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "stringValue": "Â©oÂ©Î±" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_start_and_end_equal_value",
            "expression": "'taÂ©oÂ©Î±T'.substring(7, 7) == ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 0,
                  "2": 19,
                  "3": 20,
                  "4": 23,
                  "5": 26,
                  "6": 29
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "taÂ©oÂ©Î±T" }
                        },
                        "function": "substring",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "7" } },
                          { "id": "4", "constExpr": { "int64Value": "7" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "trim",
        "tests": [
          {
            "name": "blank_spaces_escaped_chars",
            "expression": "' \\f\\n\\r\\t\\vtext  '.trim() == 'text'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 0, "2": 24, "3": 27, "4": 30 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": {
                            "stringValue": " \f\n\r\t\u000btext  "
                          }
                        },
                        "function": "trim"
                      }
                    },
                    { "id": "4", "constExpr": { "stringValue": "text" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_space_chars_1",
            "expression": "'\\u0085\\u00a0\\u1680text'.trim() == 'text'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 0, "2": 29, "3": 32, "4": 35 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "ÂÂ átext" }
                        },
                        "function": "trim"
                      }
                    },
                    { "id": "4", "constExpr": { "stringValue": "text" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_space_chars_2",
            "expression": "'text\\u2000\\u2001\\u2002\\u2003\\u2004\\u2004\\u2006\\u2007\\u2008\\u2009'.trim() == 'text'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [84],
                "positions": { "1": 0, "2": 71, "3": 74, "4": 77 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "textââââââââââ" }
                        },
                        "function": "trim"
                      }
                    },
                    { "id": "4", "constExpr": { "stringValue": "text" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_space_chars_3",
            "expression": "'\\u200atext\\u2028\\u2029\\u202F\\u205F\\u3000'.trim() == 'text'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [60],
                "positions": { "1": 0, "2": 47, "3": 50, "4": 53 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": {
                            "stringValue": "âtext\u2028\u2029â¯âã"
                          }
                        },
                        "function": "trim"
                      }
                    },
                    { "id": "4", "constExpr": { "stringValue": "text" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_no_trim",
            "expression": "'\\u180etext\\u200b\\u200c\\u200d\\u2060\\ufeff'.trim() == '\\u180etext\\u200b\\u200c\\u200d\\u2060\\ufeff'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [96],
                "positions": { "1": 0, "2": 47, "3": 50, "4": 53 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "á textââââ ï»¿" }
                        },
                        "function": "trim"
                      }
                    },
                    { "id": "4", "constExpr": { "stringValue": "á textââââ ï»¿" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "join",
        "tests": [
          {
            "name": "empty_separator",
            "expression": "['x', 'y'].join() == 'xy'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 6,
                  "4": 15,
                  "5": 18,
                  "6": 21
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "4",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "listExpr": {
                            "elements": [
                              {
                                "id": "2",
                                "constExpr": { "stringValue": "x" }
                              },
                              { "id": "3", "constExpr": { "stringValue": "y" } }
                            ]
                          }
                        },
                        "function": "join"
                      }
                    },
                    { "id": "6", "constExpr": { "stringValue": "xy" } }
                  ]
                }
              }
            }
          },
          {
            "name": "dash_separator",
            "expression": "['x', 'y'].join('-') == 'x-y'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": {
                  "1": 0,
                  "2": 1,
                  "3": 6,
                  "4": 15,
                  "5": 16,
                  "6": 21,
                  "7": 24
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "4",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "listExpr": {
                            "elements": [
                              {
                                "id": "2",
                                "constExpr": { "stringValue": "x" }
                              },
                              { "id": "3", "constExpr": { "stringValue": "y" } }
                            ]
                          }
                        },
                        "function": "join",
                        "args": [
                          { "id": "5", "constExpr": { "stringValue": "-" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "stringValue": "x-y" } }
                  ]
                }
              }
            }
          },
          {
            "name": "empty_string_empty_separator",
            "expression": "[].join() == ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [16],
                "positions": { "1": 0, "2": 7, "3": 10, "4": 13 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": { "id": "1", "listExpr": {} },
                        "function": "join"
                      }
                    },
                    { "id": "4", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "empty_string_dash_separator",
            "expression": "[].join('-') == ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 0, "2": 7, "3": 8, "4": 13, "5": 16 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": { "id": "1", "listExpr": {} },
                        "function": "join",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "-" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "quote",
        "tests": [
          {
            "name": "multiline",
            "expression": "strings.quote(\"first\\nsecond\") == \"\\\"first\\\\nsecond\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [55],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 31, "5": 34 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "first\nsecond" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "constExpr": { "stringValue": "\"first\\nsecond\"" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "escaped",
            "expression": "strings.quote(\"bell\\a\") == \"\\\"bell\\\\a\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 24, "5": 27 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "bell\u0007" }
                          }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "stringValue": "\"bell\\a\"" } }
                  ]
                }
              }
            }
          },
          {
            "name": "backspace",
            "expression": "strings.quote(\"\\bbackspace\") == \"\\\"\\\\bbackspace\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [51],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 29, "5": 32 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "\bbackspace" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "constExpr": { "stringValue": "\"\\bbackspace\"" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "form_feed",
            "expression": "strings.quote(\"\\fform feed\") == \"\\\"\\\\fform feed\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [51],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 29, "5": 32 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "\fform feed" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "constExpr": { "stringValue": "\"\\fform feed\"" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "carriage_return",
            "expression": "strings.quote(\"carriage \\r return\") == \"\\\"carriage \\\\r return\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [65],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 36, "5": 39 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "carriage \r return" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "constExpr": { "stringValue": "\"carriage \\r return\"" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "horizontal_tab",
            "expression": "strings.quote(\"horizontal tab\\t\") == \"\\\"horizontal tab\\\\t\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [61],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 34, "5": 37 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "horizontal tab\t" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "constExpr": { "stringValue": "\"horizontal tab\\t\"" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "vertical_tab",
            "expression": "strings.quote(\"vertical \\v tab\") == \"\\\"vertical \\\\v tab\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [59],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 33, "5": 36 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": {
                              "stringValue": "vertical \u000b tab"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "constExpr": { "stringValue": "\"vertical \\v tab\"" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "double_slash",
            "expression": "strings.quote(\"double \\\\\\\\ slash\") == \"\\\"double \\\\\\\\\\\\\\\\ slash\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [66],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 35, "5": 38 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "double \\\\ slash" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "constExpr": {
                        "stringValue": "\"double \\\\\\\\ slash\""
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "two_escape_sequences",
            "expression": "strings.quote(\"two escape sequences \\\\a\\\\n\") == \"\\\"two escape sequences \\\\\\\\a\\\\\\\\n\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [86],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 45, "5": 48 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": {
                              "stringValue": "two escape sequences \\a\\n"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "constExpr": {
                        "stringValue": "\"two escape sequences \\\\a\\\\n\""
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "verbatim",
            "expression": "strings.quote(\"verbatim\") == \"\\\"verbatim\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 26, "5": 29 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "verbatim" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "constExpr": { "stringValue": "\"verbatim\"" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "ends_with",
            "expression": "strings.quote(\"ends with \\\\\") == \"\\\"ends with \\\\\\\\\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [54],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 30, "5": 33 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "ends with \\" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "constExpr": { "stringValue": "\"ends with \\\\\"" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "starts_with",
            "expression": "strings.quote(\"\\\\ starts with\") == \"\\\"\\\\\\\\ starts with\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [58],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 32, "5": 35 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "\\ starts with" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "constExpr": { "stringValue": "\"\\\\ starts with\"" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "printable_unicode",
            "expression": "strings.quote(\"printable unicodeð\") == \"\\\"printable unicodeð\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [64],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 36, "5": 39 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": {
                              "stringValue": "printable unicodeð"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "constExpr": { "stringValue": "\"printable unicodeð\"" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "mid_string_quote",
            "expression": "strings.quote(\"mid string \\\" quote\") == \"\\\"mid string \\\\\\\" quote\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [68],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 37, "5": 40 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": {
                              "stringValue": "mid string \" quote"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "constExpr": {
                        "stringValue": "\"mid string \\\" quote\""
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "single_quote_with_double_quote",
            "expression": "strings.quote('single-quote with \"double quote\"') == \"\\\"single-quote with \\\\\\\"double quote\\\\\\\"\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [98],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 50, "5": 53 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": {
                              "stringValue": "single-quote with \"double quote\""
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "constExpr": {
                        "stringValue": "\"single-quote with \\\"double quote\\\"\""
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "size_unicode_char",
            "expression": "strings.quote(\"size('Ã¿')\") == \"\\\"size('Ã¿')\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [46],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 27, "5": 30 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "size('Ã¿')" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "constExpr": { "stringValue": "\"size('Ã¿')\"" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "size_unicode_string",
            "expression": "strings.quote(\"size('ÏÎ­Î½ÏÎµ')\") == \"\\\"size('ÏÎ­Î½ÏÎµ')\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [54],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 31, "5": 34 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "size('ÏÎ­Î½ÏÎµ')" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "constExpr": { "stringValue": "\"size('ÏÎ­Î½ÏÎµ')\"" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode",
            "expression": "strings.quote(\"Ð·Ð°Ð²ÑÑÐ°\") == \"\\\"Ð·Ð°Ð²ÑÑÐ°\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 24, "5": 27 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "Ð·Ð°Ð²ÑÑÐ°" }
                          }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "stringValue": "\"Ð·Ð°Ð²ÑÑÐ°\"" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_code_points",
            "expression": "strings.quote(\"\\U0001F431\\U0001F600\\U0001F61B\")",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [48],
                "positions": { "1": 0, "2": 13, "3": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "strings" } },
                  "function": "quote",
                  "args": [
                    { "id": "3", "constExpr": { "stringValue": "ð±ðð" } }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode_2",
            "expression": "strings.quote(\"taÂ©oÂ©Î±T\") == \"\\\"taÂ©oÂ©Î±T\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 25, "5": 28 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "taÂ©oÂ©Î±T" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "constExpr": { "stringValue": "\"taÂ©oÂ©Î±T\"" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "empty_quote",
            "expression": "strings.quote(\"\")",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 13, "3": 14 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "strings" } },
                  "function": "quote",
                  "args": [{ "id": "3", "constExpr": { "stringValue": "" } }]
                }
              }
            }
          }
        ]
      },
      {
        "name": "format",
        "tests": [
          {
            "name": "no-op",
            "expression": "\"no substitution\".format([])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": { "1": 0, "2": 24, "3": 25 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "no substitution" }
                  },
                  "function": "format",
                  "args": [{ "id": "3", "listExpr": {} }]
                }
              }
            }
          },
          {
            "name": "mid-string substitution",
            "expression": "\"str is %s and some more\".format([\"filler\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 0, "2": 32, "3": 33, "4": 34 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "str is %s and some more" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "constExpr": { "stringValue": "filler" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "percent escaping",
            "expression": "\"%% and also %%\".format([])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 0, "2": 23, "3": 24 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "%% and also %%" }
                  },
                  "function": "format",
                  "args": [{ "id": "3", "listExpr": {} }]
                }
              }
            }
          },
          {
            "name": "substution inside escaped percent signs",
            "expression": "\"%%%s%%\".format([\"text\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 0, "2": 15, "3": 16, "4": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "%%%s%%" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "stringValue": "text" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "substitution with one escaped percent sign on the right",
            "expression": "\"%s%%\".format([\"percent on the right\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "%s%%" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "constExpr": {
                              "stringValue": "percent on the right"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "substitution with one escaped percent sign on the left",
            "expression": "\"%%%s\".format([\"percent on the left\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "%%%s" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "constExpr": {
                              "stringValue": "percent on the left"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "multiple substitutions",
            "expression": "\"%d %d %d, %s %s %s, %d %d %d, %s %s %s\".format([1, 2, 3, \"A\", \"B\", \"C\", 4, 5, 6, \"D\", \"E\", \"F\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [98],
                "positions": {
                  "1": 0,
                  "2": 47,
                  "3": 48,
                  "4": 49,
                  "5": 52,
                  "6": 55,
                  "7": 58,
                  "8": 63,
                  "9": 68,
                  "10": 73,
                  "11": 76,
                  "12": 79,
                  "13": 82,
                  "14": 87,
                  "15": 92
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": {
                      "stringValue": "%d %d %d, %s %s %s, %d %d %d, %s %s %s"
                    }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "2" } },
                          { "id": "6", "constExpr": { "int64Value": "3" } },
                          { "id": "7", "constExpr": { "stringValue": "A" } },
                          { "id": "8", "constExpr": { "stringValue": "B" } },
                          { "id": "9", "constExpr": { "stringValue": "C" } },
                          { "id": "10", "constExpr": { "int64Value": "4" } },
                          { "id": "11", "constExpr": { "int64Value": "5" } },
                          { "id": "12", "constExpr": { "int64Value": "6" } },
                          { "id": "13", "constExpr": { "stringValue": "D" } },
                          { "id": "14", "constExpr": { "stringValue": "E" } },
                          { "id": "15", "constExpr": { "stringValue": "F" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "percent sign escape sequence support",
            "expression": "\"%%escaped %s%%\".format([\"percent\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 0, "2": 23, "3": 24, "4": 25 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "%%escaped %s%%" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "constExpr": { "stringValue": "percent" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "fixed point formatting clause",
            "expression": "\"%.3f\".format([1.2345])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "%.3f" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "doubleValue": 1.2345 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "binary formatting clause",
            "expression": "\"this is 5 in binary: %b\".format([5])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [38],
                "positions": { "1": 0, "2": 32, "3": 33, "4": 34 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "this is 5 in binary: %b" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "int64Value": "5" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint support for binary formatting",
            "expression": "\"unsigned 64 in binary: %b\".format([uint(64)])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": { "1": 0, "2": 34, "3": 35, "4": 40, "5": 41 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "unsigned 64 in binary: %b" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "uint",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "64" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "bool support for binary formatting",
            "expression": "\"bit set from bool: %b\".format([true])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": { "1": 0, "2": 30, "3": 31, "4": 32 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "bit set from bool: %b" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "boolValue": true } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "octal formatting clause",
            "expression": "\"%o\".format([11])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [18],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 13 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%o" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "int64Value": "11" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint support for octal formatting clause",
            "expression": "\"this is an unsigned octal: %o\".format([uint(65535)])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [54],
                "positions": { "1": 0, "2": 38, "3": 39, "4": 44, "5": 45 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": {
                      "stringValue": "this is an unsigned octal: %o"
                    }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "uint",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "65535" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "lowercase hexadecimal formatting clause",
            "expression": "\"%x is 20 in hexadecimal\".format([30])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": { "1": 0, "2": 32, "3": 33, "4": 34 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "%x is 20 in hexadecimal" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "int64Value": "30" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uppercase hexadecimal formatting clause",
            "expression": "\"%X is 20 in hexadecimal\".format([30])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": { "1": 0, "2": 32, "3": 33, "4": 34 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "%X is 20 in hexadecimal" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "int64Value": "30" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "unsigned support for hexadecimal formatting clause",
            "expression": "\"%X is 6000 in hexadecimal\".format([uint(6000)])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "1": 0, "2": 34, "3": 35, "4": 40, "5": 41 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "%X is 6000 in hexadecimal" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "uint",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "6000" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "string support with hexadecimal formatting clause",
            "expression": "\"%x\".format([\"Hello world!\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 13 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%x" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "constExpr": { "stringValue": "Hello world!" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "string support with uppercase hexadecimal formatting clause",
            "expression": "\"%X\".format([\"Hello world!\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 13 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%X" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "constExpr": { "stringValue": "Hello world!" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "byte support with hexadecimal formatting clause",
            "expression": "\"%x\".format([b\"byte string\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 13 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%x" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "constExpr": { "bytesValue": "Ynl0ZSBzdHJpbmc=" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "byte support with uppercase hexadecimal formatting clause",
            "expression": "\"%X\".format([b\"byte string\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 13 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%X" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "constExpr": { "bytesValue": "Ynl0ZSBzdHJpbmc=" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "scientific notation formatting clause",
            "expression": "\"%.6e\".format([1052.032911275])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 15 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "%.6e" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "constExpr": { "doubleValue": 1052.032911275 }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "default precision for fixed-point clause",
            "expression": "\"%f\".format([2.71828])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 13 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%f" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "doubleValue": 2.71828 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "default precision for scientific notation",
            "expression": "\"%e\".format([2.71828])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 13 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%e" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "doubleValue": 2.71828 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "unicode output for scientific notation",
            "expression": "\"unescaped unicode: %e, escaped unicode: %e\".format([2.71828, 2.71828])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [72],
                "positions": { "1": 0, "2": 51, "3": 52, "4": 53, "5": 62 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": {
                      "stringValue": "unescaped unicode: %e, escaped unicode: %e"
                    }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "constExpr": { "doubleValue": 2.71828 }
                          },
                          { "id": "5", "constExpr": { "doubleValue": 2.71828 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "NaN support for fixed-point",
            "expression": "\"%f\".format([\"NaN\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 13 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%f" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "stringValue": "NaN" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "positive infinity support for fixed-point",
            "expression": "\"%f\".format([\"Infinity\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 13 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%f" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "constExpr": { "stringValue": "Infinity" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "negative infinity support for fixed-point",
            "expression": "\"%f\".format([\"-Infinity\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 13 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%f" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "constExpr": { "stringValue": "-Infinity" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uint support for decimal clause",
            "expression": "\"%d\".format([uint(64)])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 17, "5": 18 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%d" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "uint",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "64" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "null support for string",
            "expression": "\"null: %s\".format([null])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 0, "2": 17, "3": 18, "4": 19 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "null: %s" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "nullValue": null } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "int support for string",
            "expression": "\"%s\".format([999999999999])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 13 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%s" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "constExpr": { "int64Value": "999999999999" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "bytes support for string",
            "expression": "\"some bytes: %s\".format([b\"xyz\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 0, "2": 23, "3": 24, "4": 25 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "some bytes: %s" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "bytesValue": "eHl6" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "type() support for string",
            "expression": "\"type is %s\".format([type(\"test string\")])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [43],
                "positions": { "1": 0, "2": 19, "3": 20, "4": 25, "5": 26 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "type is %s" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "type",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "stringValue": "test string" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "timestamp support for string",
            "expression": "\"%s\".format([timestamp(\"2023-02-03T23:31:20+00:00\")])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [54],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 22, "5": 23 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%s" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": {
                                    "stringValue": "2023-02-03T23:31:20+00:00"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "duration support for string",
            "expression": "\"%s\".format([duration(\"1h45m47s\")])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 21, "5": 22 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%s" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "duration",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "stringValue": "1h45m47s" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "list support for string",
            "expression": "\"%s\".format([[\"abc\", 3.14, null, [9, 8, 7, 6], timestamp(\"2023-02-03T23:31:20Z\")]])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [84],
                "positions": {
                  "1": 0,
                  "2": 11,
                  "3": 12,
                  "4": 13,
                  "5": 14,
                  "6": 21,
                  "7": 27,
                  "8": 33,
                  "9": 34,
                  "10": 37,
                  "11": 40,
                  "12": 43,
                  "13": 56,
                  "14": 57
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%s" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "5",
                                  "constExpr": { "stringValue": "abc" }
                                },
                                {
                                  "id": "6",
                                  "constExpr": { "doubleValue": 3.14 }
                                },
                                {
                                  "id": "7",
                                  "constExpr": { "nullValue": null }
                                },
                                {
                                  "id": "8",
                                  "listExpr": {
                                    "elements": [
                                      {
                                        "id": "9",
                                        "constExpr": { "int64Value": "9" }
                                      },
                                      {
                                        "id": "10",
                                        "constExpr": { "int64Value": "8" }
                                      },
                                      {
                                        "id": "11",
                                        "constExpr": { "int64Value": "7" }
                                      },
                                      {
                                        "id": "12",
                                        "constExpr": { "int64Value": "6" }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "13",
                                  "callExpr": {
                                    "function": "timestamp",
                                    "args": [
                                      {
                                        "id": "14",
                                        "constExpr": {
                                          "stringValue": "2023-02-03T23:31:20Z"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "map support for string",
            "expression": "\"%s\".format([{\"key1\": b\"xyz\", \"key5\": null, \"key2\": duration(\"2h\"), \"key4\": true, \"key3\": 2.71828}])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [101],
                "positions": {
                  "1": 0,
                  "2": 11,
                  "3": 12,
                  "4": 13,
                  "5": 20,
                  "6": 14,
                  "7": 22,
                  "8": 36,
                  "9": 30,
                  "10": 38,
                  "11": 50,
                  "12": 44,
                  "13": 60,
                  "14": 61,
                  "15": 74,
                  "16": 68,
                  "17": 76,
                  "18": 88,
                  "19": 82,
                  "20": 90
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%s" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "5",
                                  "mapKey": {
                                    "id": "6",
                                    "constExpr": { "stringValue": "key1" }
                                  },
                                  "value": {
                                    "id": "7",
                                    "constExpr": { "bytesValue": "eHl6" }
                                  }
                                },
                                {
                                  "id": "8",
                                  "mapKey": {
                                    "id": "9",
                                    "constExpr": { "stringValue": "key5" }
                                  },
                                  "value": {
                                    "id": "10",
                                    "constExpr": { "nullValue": null }
                                  }
                                },
                                {
                                  "id": "11",
                                  "mapKey": {
                                    "id": "12",
                                    "constExpr": { "stringValue": "key2" }
                                  },
                                  "value": {
                                    "id": "13",
                                    "callExpr": {
                                      "function": "duration",
                                      "args": [
                                        {
                                          "id": "14",
                                          "constExpr": { "stringValue": "2h" }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": "15",
                                  "mapKey": {
                                    "id": "16",
                                    "constExpr": { "stringValue": "key4" }
                                  },
                                  "value": {
                                    "id": "17",
                                    "constExpr": { "boolValue": true }
                                  }
                                },
                                {
                                  "id": "18",
                                  "mapKey": {
                                    "id": "19",
                                    "constExpr": { "stringValue": "key3" }
                                  },
                                  "value": {
                                    "id": "20",
                                    "constExpr": { "doubleValue": 2.71828 }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "map support (all key types)",
            "expression": "\"map with multiple key types: %s\".format([{1: \"value1\", uint(2): \"value2\", true: double(\"NaN\")}])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [98],
                "positions": {
                  "1": 0,
                  "2": 40,
                  "3": 41,
                  "4": 42,
                  "5": 44,
                  "6": 43,
                  "7": 46,
                  "8": 63,
                  "9": 60,
                  "10": 61,
                  "11": 65,
                  "12": 79,
                  "13": 75,
                  "14": 87,
                  "15": 88
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": {
                      "stringValue": "map with multiple key types: %s"
                    }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "5",
                                  "mapKey": {
                                    "id": "6",
                                    "constExpr": { "int64Value": "1" }
                                  },
                                  "value": {
                                    "id": "7",
                                    "constExpr": { "stringValue": "value1" }
                                  }
                                },
                                {
                                  "id": "8",
                                  "mapKey": {
                                    "id": "9",
                                    "callExpr": {
                                      "function": "uint",
                                      "args": [
                                        {
                                          "id": "10",
                                          "constExpr": { "int64Value": "2" }
                                        }
                                      ]
                                    }
                                  },
                                  "value": {
                                    "id": "11",
                                    "constExpr": { "stringValue": "value2" }
                                  }
                                },
                                {
                                  "id": "12",
                                  "mapKey": {
                                    "id": "13",
                                    "constExpr": { "boolValue": true }
                                  },
                                  "value": {
                                    "id": "14",
                                    "callExpr": {
                                      "function": "double",
                                      "args": [
                                        {
                                          "id": "15",
                                          "constExpr": { "stringValue": "NaN" }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "boolean support for %s",
            "expression": "\"true bool: %s, false bool: %s\".format([true, false])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [54],
                "positions": { "1": 0, "2": 38, "3": 39, "4": 40, "5": 46 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": {
                      "stringValue": "true bool: %s, false bool: %s"
                    }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "boolValue": true } },
                          { "id": "5", "constExpr": { "boolValue": false } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyntype support for string formatting clause",
            "expression": "\"dynamic string: %s\".format([dyn(\"a string\")])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": { "1": 0, "2": 27, "3": 28, "4": 32, "5": 33 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "dynamic string: %s" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "dyn",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "stringValue": "a string" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyntype support for numbers with string formatting clause",
            "expression": "\"dynIntStr: %s dynDoubleStr: %s\".format([dyn(32), dyn(56.8)])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [62],
                "positions": {
                  "1": 0,
                  "2": 39,
                  "3": 40,
                  "4": 44,
                  "5": 45,
                  "6": 53,
                  "7": 54
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": {
                      "stringValue": "dynIntStr: %s dynDoubleStr: %s"
                    }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "dyn",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "32" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "6",
                            "callExpr": {
                              "function": "dyn",
                              "args": [
                                {
                                  "id": "7",
                                  "constExpr": { "doubleValue": 56.8 }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyntype support for integer formatting clause",
            "expression": "\"dynamic int: %d\".format([dyn(128)])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 0, "2": 24, "3": 25, "4": 29, "5": 30 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "dynamic int: %d" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "dyn",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "128" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyntype support for integer formatting clause (unsigned)",
            "expression": "\"dynamic unsigned int: %d\".format([dyn(256u)])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": { "1": 0, "2": 33, "3": 34, "4": 38, "5": 39 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "dynamic unsigned int: %d" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "dyn",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "uint64Value": "256" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyntype support for hex formatting clause",
            "expression": "\"dynamic hex int: %x\".format([dyn(22)])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 0, "2": 28, "3": 29, "4": 33, "5": 34 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "dynamic hex int: %x" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "dyn",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "22" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyntype support for hex formatting clause (uppercase)",
            "expression": "\"dynamic hex int: %X (uppercase)\".format([dyn(26)])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": { "1": 0, "2": 40, "3": 41, "4": 45, "5": 46 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": {
                      "stringValue": "dynamic hex int: %X (uppercase)"
                    }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "dyn",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "26" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyntype support for unsigned hex formatting clause",
            "expression": "\"dynamic hex int: %x (unsigned)\".format([dyn(500u)])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [53],
                "positions": { "1": 0, "2": 39, "3": 40, "4": 44, "5": 45 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": {
                      "stringValue": "dynamic hex int: %x (unsigned)"
                    }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "dyn",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "uint64Value": "500" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyntype support for fixed-point formatting clause",
            "expression": "\"dynamic double: %.3f\".format([dyn(4.5)])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 0, "2": 29, "3": 30, "4": 34, "5": 35 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "dynamic double: %.3f" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "dyn",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "doubleValue": 4.5 }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyntype support for scientific notation",
            "expression": "\"(dyntype) e: %e\".format([dyn(2.71828)])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 0, "2": 24, "3": 25, "4": 29, "5": 30 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "(dyntype) e: %e" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "dyn",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "doubleValue": 2.71828 }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyntype NaN/infinity support for fixed-point",
            "expression": "\"NaN: %f, infinity: %f\".format([dyn(\"NaN\"), dyn(\"Infinity\")])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [62],
                "positions": {
                  "1": 0,
                  "2": 30,
                  "3": 31,
                  "4": 35,
                  "5": 36,
                  "6": 47,
                  "7": 48
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "NaN: %f, infinity: %f" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "dyn",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "stringValue": "NaN" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "6",
                            "callExpr": {
                              "function": "dyn",
                              "args": [
                                {
                                  "id": "7",
                                  "constExpr": { "stringValue": "Infinity" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyntype support for timestamp",
            "expression": "\"dyntype timestamp: %s\".format([dyn(timestamp(\"2009-11-10T23:00:00Z\"))])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [73],
                "positions": {
                  "1": 0,
                  "2": 30,
                  "3": 31,
                  "4": 35,
                  "5": 45,
                  "6": 46
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "dyntype timestamp: %s" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "dyn",
                              "args": [
                                {
                                  "id": "5",
                                  "callExpr": {
                                    "function": "timestamp",
                                    "args": [
                                      {
                                        "id": "6",
                                        "constExpr": {
                                          "stringValue": "2009-11-10T23:00:00Z"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyntype support for duration",
            "expression": "\"dyntype duration: %s\".format([dyn(duration(\"8747s\"))])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [56],
                "positions": {
                  "1": 0,
                  "2": 29,
                  "3": 30,
                  "4": 34,
                  "5": 43,
                  "6": 44
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "dyntype duration: %s" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "dyn",
                              "args": [
                                {
                                  "id": "5",
                                  "callExpr": {
                                    "function": "duration",
                                    "args": [
                                      {
                                        "id": "6",
                                        "constExpr": { "stringValue": "8747s" }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyntype support for lists",
            "expression": "\"dyntype list: %s\".format([dyn([6, 4.2, \"a string\"])])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [55],
                "positions": {
                  "1": 0,
                  "2": 25,
                  "3": 26,
                  "4": 30,
                  "5": 31,
                  "6": 32,
                  "7": 35,
                  "8": 40
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "dyntype list: %s" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "dyn",
                              "args": [
                                {
                                  "id": "5",
                                  "listExpr": {
                                    "elements": [
                                      {
                                        "id": "6",
                                        "constExpr": { "int64Value": "6" }
                                      },
                                      {
                                        "id": "7",
                                        "constExpr": { "doubleValue": 4.2 }
                                      },
                                      {
                                        "id": "8",
                                        "constExpr": {
                                          "stringValue": "a string"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "dyntype support for maps",
            "expression": "\"dyntype map: %s\".format([{\"strKey\":\"x\", 6:duration(\"422s\"), true:42}])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [72],
                "positions": {
                  "1": 0,
                  "2": 24,
                  "3": 25,
                  "4": 26,
                  "5": 35,
                  "6": 27,
                  "7": 36,
                  "8": 42,
                  "9": 41,
                  "10": 51,
                  "11": 52,
                  "12": 65,
                  "13": 61,
                  "14": 66
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "dyntype map: %s" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "5",
                                  "mapKey": {
                                    "id": "6",
                                    "constExpr": { "stringValue": "strKey" }
                                  },
                                  "value": {
                                    "id": "7",
                                    "constExpr": { "stringValue": "x" }
                                  }
                                },
                                {
                                  "id": "8",
                                  "mapKey": {
                                    "id": "9",
                                    "constExpr": { "int64Value": "6" }
                                  },
                                  "value": {
                                    "id": "10",
                                    "callExpr": {
                                      "function": "duration",
                                      "args": [
                                        {
                                          "id": "11",
                                          "constExpr": { "stringValue": "422s" }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": "12",
                                  "mapKey": {
                                    "id": "13",
                                    "constExpr": { "boolValue": true }
                                  },
                                  "value": {
                                    "id": "14",
                                    "constExpr": { "int64Value": "42" }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "message field support",
            "expression": "\"message field msg.single_int32: %d, msg.single_double: %.1f\".format([2, 1.0])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [79],
                "positions": { "1": 0, "2": 68, "3": 69, "4": 70, "5": 73 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": {
                      "stringValue": "message field msg.single_int32: %d, msg.single_double: %.1f"
                    }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "int64Value": "2" } },
                          { "id": "5", "constExpr": { "doubleValue": 1 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "string substitution in a string variable",
            "expression": "str_var.format([\"filler\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 0, "2": 14, "3": 15, "4": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "str_var" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "constExpr": { "stringValue": "filler" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "multiple substitutions in a string variable",
            "expression": "str_var.format([1, 2, 3, \"A\", \"B\", \"C\", 4, 5, 6, \"D\", \"E\", \"F\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [65],
                "positions": {
                  "1": 0,
                  "2": 14,
                  "3": 15,
                  "4": 16,
                  "5": 19,
                  "6": 22,
                  "7": 25,
                  "8": 30,
                  "9": 35,
                  "10": 40,
                  "11": 43,
                  "12": 46,
                  "13": 49,
                  "14": 54,
                  "15": 59
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "str_var" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "2" } },
                          { "id": "6", "constExpr": { "int64Value": "3" } },
                          { "id": "7", "constExpr": { "stringValue": "A" } },
                          { "id": "8", "constExpr": { "stringValue": "B" } },
                          { "id": "9", "constExpr": { "stringValue": "C" } },
                          { "id": "10", "constExpr": { "int64Value": "4" } },
                          { "id": "11", "constExpr": { "int64Value": "5" } },
                          { "id": "12", "constExpr": { "int64Value": "6" } },
                          { "id": "13", "constExpr": { "stringValue": "D" } },
                          { "id": "14", "constExpr": { "stringValue": "E" } },
                          { "id": "15", "constExpr": { "stringValue": "F" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "substution inside escaped percent signs in a string variable",
            "expression": "str_var.format([\"text\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": { "1": 0, "2": 14, "3": 15, "4": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "str_var" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "stringValue": "text" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "fixed point formatting clause in a string variable",
            "expression": "str_var.format([1.2345])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": { "1": 0, "2": 14, "3": 15, "4": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "str_var" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "doubleValue": 1.2345 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "binary formatting clause in a string variable",
            "expression": "str_var.format([5])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 14, "3": 15, "4": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "str_var" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "int64Value": "5" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "scientific notation formatting clause in a string variable",
            "expression": "str_var.format([1052.032911275])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 0, "2": 14, "3": 15, "4": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "str_var" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "constExpr": { "doubleValue": 1052.032911275 }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "default precision for fixed-point clause in a string variable",
            "expression": "str_var.format([2.71828])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 0, "2": 14, "3": 15, "4": 16 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "str_var" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "doubleValue": 2.71828 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "format_errors",
        "tests": [
          {
            "name": "multiline",
            "expression": "strings.quote(\"first\\nsecond\") == \"\\\"first\\\\nsecond\\\"\"",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [55],
                "positions": { "1": 0, "2": 13, "3": 14, "4": 31, "5": 34 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "identExpr": { "name": "strings" }
                        },
                        "function": "quote",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "first\nsecond" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "constExpr": { "stringValue": "\"first\\nsecond\"" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "unrecognized formatting clause",
            "expression": "\"%a\".format([1])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [17],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 13 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%a" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "out of bounds arg index",
            "expression": "\"%d %d %d\".format([0, 1])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 0, "2": 17, "3": 18, "4": 19, "5": 22 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "%d %d %d" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "int64Value": "0" } },
                          { "id": "5", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "string substitution is not allowed with binary clause",
            "expression": "\"string is %b\".format([\"abc\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 0, "2": 21, "3": 22, "4": 23 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "string is %b" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "stringValue": "abc" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "duration substitution not allowed with decimal clause",
            "expression": "\"%d\".format([duration(\"30m2s\")])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 0, "2": 11, "3": 12, "4": 21, "5": 22 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%d" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "duration",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "stringValue": "30m2s" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "string substitution not allowed with octal clause",
            "expression": "\"octal: %o\".format([\"a string\"])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 0, "2": 18, "3": 19, "4": 20 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "octal: %o" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "constExpr": { "stringValue": "a string" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "double substitution not allowed with hex clause",
            "expression": "\"double is %x\".format([0.5])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": { "1": 0, "2": 21, "3": 22, "4": 23 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "double is %x" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "doubleValue": 0.5 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "uppercase not allowed for scientific clause",
            "expression": "\"double is %E\".format([0.5])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": { "1": 0, "2": 21, "3": 22, "4": 23 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "double is %E" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "doubleValue": 0.5 } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "object not allowed",
            "expression": "\"object is %s\".format([google.api.expr.test.v1.proto3.TestAllTypes{}])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [71],
                "positions": { "1": 0, "2": 21, "3": 22, "4": 66 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "object is %s" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "structExpr": {
                              "messageName": "google.api.expr.test.v1.proto3.TestAllTypes"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "object inside list",
            "expression": "\"%s\".format([[1, 2, google.api.expr.test.v1.proto3.TestAllTypes{}]])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [69],
                "positions": {
                  "1": 0,
                  "2": 11,
                  "3": 12,
                  "4": 13,
                  "5": 14,
                  "6": 17,
                  "7": 63
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%s" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "listExpr": {
                              "elements": [
                                {
                                  "id": "5",
                                  "constExpr": { "int64Value": "1" }
                                },
                                {
                                  "id": "6",
                                  "constExpr": { "int64Value": "2" }
                                },
                                {
                                  "id": "7",
                                  "structExpr": {
                                    "messageName": "google.api.expr.test.v1.proto3.TestAllTypes"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "object inside map",
            "expression": "\"%s\".format([{1: \"a\", 2: google.api.expr.test.v1.proto3.TestAllTypes{}}])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [74],
                "positions": {
                  "1": 0,
                  "2": 11,
                  "3": 12,
                  "4": 13,
                  "5": 15,
                  "6": 14,
                  "7": 17,
                  "8": 23,
                  "9": 22,
                  "10": 68
                }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "constExpr": { "stringValue": "%s" } },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          {
                            "id": "4",
                            "structExpr": {
                              "entries": [
                                {
                                  "id": "5",
                                  "mapKey": {
                                    "id": "6",
                                    "constExpr": { "int64Value": "1" }
                                  },
                                  "value": {
                                    "id": "7",
                                    "constExpr": { "stringValue": "a" }
                                  }
                                },
                                {
                                  "id": "8",
                                  "mapKey": {
                                    "id": "9",
                                    "constExpr": { "int64Value": "2" }
                                  },
                                  "value": {
                                    "id": "10",
                                    "structExpr": {
                                      "messageName": "google.api.expr.test.v1.proto3.TestAllTypes"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "null not allowed for %d",
            "expression": "\"null: %d\".format([null])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 0, "2": 17, "3": 18, "4": 19 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "null: %d" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "nullValue": null } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "null not allowed for %e",
            "expression": "\"null: %e\".format([null])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 0, "2": 17, "3": 18, "4": 19 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "null: %e" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "nullValue": null } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "null not allowed for %f",
            "expression": "\"null: %f\".format([null])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 0, "2": 17, "3": 18, "4": 19 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "null: %f" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "nullValue": null } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "null not allowed for %x",
            "expression": "\"null: %x\".format([null])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 0, "2": 17, "3": 18, "4": 19 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "null: %x" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "nullValue": null } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "null not allowed for %X",
            "expression": "\"null: %X\".format([null])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 0, "2": 17, "3": 18, "4": 19 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "null: %X" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "nullValue": null } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "null not allowed for %b",
            "expression": "\"null: %b\".format([null])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 0, "2": 17, "3": 18, "4": 19 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "null: %b" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "nullValue": null } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "null not allowed for %o",
            "expression": "\"null: %o\".format([null])",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 0, "2": 17, "3": 18, "4": 19 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "constExpr": { "stringValue": "null: %o" }
                  },
                  "function": "format",
                  "args": [
                    {
                      "id": "3",
                      "listExpr": {
                        "elements": [
                          { "id": "4", "constExpr": { "nullValue": null } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "value_errors",
        "tests": [
          {
            "name": "charat_out_of_range",
            "expression": "'tacocat'.charAt(30) == ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 0, "2": 16, "3": 17, "4": 21, "5": 24 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "charAt",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "30" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "indexof_out_of_range",
            "expression": "'tacocat'.indexOf('a', 30) == -1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": {
                  "1": 0,
                  "2": 17,
                  "3": 18,
                  "4": 23,
                  "5": 27,
                  "6": 30
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "indexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "a" } },
                          { "id": "4", "constExpr": { "int64Value": "30" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lastindexof_negative_index",
            "expression": "'tacocat'.lastIndexOf('a', -1) == -1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": {
                  "1": 0,
                  "2": 21,
                  "3": 22,
                  "4": 27,
                  "5": 31,
                  "6": 34
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "lastIndexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "a" } },
                          { "id": "4", "constExpr": { "int64Value": "-1" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "lastindexof_out_of_range",
            "expression": "'tacocat'.lastIndexOf('a', 30) == -1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": {
                  "1": 0,
                  "2": 21,
                  "3": 22,
                  "4": 27,
                  "5": 31,
                  "6": 34
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "lastIndexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "a" } },
                          { "id": "4", "constExpr": { "int64Value": "30" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "-1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "substring_out_of_range",
            "expression": "'tacocat'.substring(40) == 'cat'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 0, "2": 19, "3": 20, "4": 24, "5": 27 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "substring",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "40" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "stringValue": "cat" } }
                  ]
                }
              }
            }
          },
          {
            "name": "substring_negative_index",
            "expression": "'tacocat'.substring(-1) == 'cat'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": { "1": 0, "2": 19, "3": 20, "4": 24, "5": 27 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "substring",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "-1" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "stringValue": "cat" } }
                  ]
                }
              }
            }
          },
          {
            "name": "substring_end_index_out_of_range",
            "expression": "'tacocat'.substring(1, 50) == 'cat'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": {
                  "1": 0,
                  "2": 19,
                  "3": 20,
                  "4": 23,
                  "5": 27,
                  "6": 30
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "substring",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "int64Value": "50" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "stringValue": "cat" } }
                  ]
                }
              }
            }
          },
          {
            "name": "substring_begin_index_out_of_range",
            "expression": "'tacocat'.substring(49, 50) == 'cat'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": {
                  "1": 0,
                  "2": 19,
                  "3": 20,
                  "4": 24,
                  "5": 28,
                  "6": 31
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "substring",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "49" } },
                          { "id": "4", "constExpr": { "int64Value": "50" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "stringValue": "cat" } }
                  ]
                }
              }
            }
          },
          {
            "name": "substring_end_index_greater_than_begin_index",
            "expression": "'tacocat'.substring(4, 3) == ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 0,
                  "2": 19,
                  "3": 20,
                  "4": 23,
                  "5": 26,
                  "6": 29
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "substring",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "4" } },
                          { "id": "4", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "type_errors",
        "tests": [
          {
            "name": "charat_invalid_type",
            "expression": "42.charAt(2) == ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [19],
                "positions": { "1": 0, "2": 9, "3": 10, "4": 13, "5": 16 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "int64Value": "42" }
                        },
                        "function": "charAt",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "charat_invalid_argument",
            "expression": "'hello'.charAt(true) == ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 0, "2": 14, "3": 15, "4": 21, "5": 24 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "hello" }
                        },
                        "function": "charAt",
                        "args": [
                          { "id": "3", "constExpr": { "boolValue": true } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "indexof_unary_invalid_type",
            "expression": "24.indexOf('2') == 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [21],
                "positions": { "1": 0, "2": 10, "3": 11, "4": 16, "5": 19 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "int64Value": "24" }
                        },
                        "function": "indexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "2" } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "indexof_unary_invalid_argument",
            "expression": "'hello'.indexOf(true) == 1",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 0, "2": 15, "3": 16, "4": 22, "5": 25 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "hello" }
                        },
                        "function": "indexOf",
                        "args": [
                          { "id": "3", "constExpr": { "boolValue": true } }
                        ]
                      }
                    },
                    { "id": "5", "constExpr": { "int64Value": "1" } }
                  ]
                }
              }
            }
          },
          {
            "name": "indexof_binary_invalid_argument",
            "expression": "42.indexOf('4', 0) == 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 16,
                  "5": 19,
                  "6": 22
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "int64Value": "42" }
                        },
                        "function": "indexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "4" } },
                          { "id": "4", "constExpr": { "int64Value": "0" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "indexof_binary_invalid_argument_2",
            "expression": "'42'.indexOf(4, 0) == 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [24],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 16,
                  "5": 19,
                  "6": 22
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "42" }
                        },
                        "function": "indexOf",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "4" } },
                          { "id": "4", "constExpr": { "int64Value": "0" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "indexof_binary_both_invalid_arguments",
            "expression": "'42'.indexOf('4', '0') == 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 23,
                  "6": 26
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "42" }
                        },
                        "function": "indexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "4" } },
                          { "id": "4", "constExpr": { "stringValue": "0" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "indexof_ternary_invalid_arguments",
            "expression": "'42'.indexOf('4', 0, 1) == 0",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 21,
                  "6": 24,
                  "7": 27
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "42" }
                        },
                        "function": "indexOf",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "4" } },
                          { "id": "4", "constExpr": { "int64Value": "0" } },
                          { "id": "5", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "int64Value": "0" } }
                  ]
                }
              }
            }
          },
          {
            "name": "split_invalid_type",
            "expression": "42.split('2') == ['4']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": {
                  "1": 0,
                  "2": 8,
                  "3": 9,
                  "4": 14,
                  "5": 17,
                  "6": 18
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "int64Value": "42" }
                        },
                        "function": "split",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "2" } }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "listExpr": {
                        "elements": [
                          { "id": "6", "constExpr": { "stringValue": "4" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "replace_invalid_type",
            "expression": "42.replace(2, 1) == '41'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [25],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 14,
                  "5": 17,
                  "6": 20
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "int64Value": "42" }
                        },
                        "function": "replace",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "2" } },
                          { "id": "4", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "stringValue": "41" } }
                  ]
                }
              }
            }
          },
          {
            "name": "replace_binary_invalid_argument",
            "expression": "'42'.replace(2, 1) == '41'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 16,
                  "5": 19,
                  "6": 22
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "42" }
                        },
                        "function": "replace",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "2" } },
                          { "id": "4", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "stringValue": "41" } }
                  ]
                }
              }
            }
          },
          {
            "name": "replace_binary_invalid_argument_2",
            "expression": "'42'.replace('2', 1) == '41'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 21,
                  "6": 24
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "42" }
                        },
                        "function": "replace",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "2" } },
                          { "id": "4", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "stringValue": "41" } }
                  ]
                }
              }
            }
          },
          {
            "name": "replace_ternary_invalid_argument",
            "expression": "42.replace('2', '1', 1) == '41'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 16,
                  "5": 21,
                  "6": 24,
                  "7": 27
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "int64Value": "42" }
                        },
                        "function": "replace",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "2" } },
                          { "id": "4", "constExpr": { "stringValue": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "stringValue": "41" } }
                  ]
                }
              }
            }
          },
          {
            "name": "replace_ternary_invalid_argument_2",
            "expression": "'42'.replace(2, '1', 1) == '41'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 16,
                  "5": 21,
                  "6": 24,
                  "7": 27
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "42" }
                        },
                        "function": "replace",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "2" } },
                          { "id": "4", "constExpr": { "stringValue": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "stringValue": "41" } }
                  ]
                }
              }
            }
          },
          {
            "name": "replace_ternary_invalid_argument_3",
            "expression": "'42'.replace('2', 1, 1) == '41'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [32],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 21,
                  "6": 24,
                  "7": 27
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "42" }
                        },
                        "function": "replace",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "2" } },
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "stringValue": "41" } }
                  ]
                }
              }
            }
          },
          {
            "name": "replace_ternary_invalid_argument_4",
            "expression": "'42'.replace('2', '1', '1') == '41'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 23,
                  "6": 28,
                  "7": 31
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "42" }
                        },
                        "function": "replace",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "2" } },
                          { "id": "4", "constExpr": { "stringValue": "1" } },
                          { "id": "5", "constExpr": { "stringValue": "1" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "stringValue": "41" } }
                  ]
                }
              }
            }
          },
          {
            "name": "replace_quaternary_invalid_argument",
            "expression": "'42'.replace('2', '1', 1, false) == '41'",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 18,
                  "5": 23,
                  "6": 26,
                  "7": 33,
                  "8": 36
                }
              },
              "expr": {
                "id": "7",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "42" }
                        },
                        "function": "replace",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "2" } },
                          { "id": "4", "constExpr": { "stringValue": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "1" } },
                          { "id": "6", "constExpr": { "boolValue": false } }
                        ]
                      }
                    },
                    { "id": "8", "constExpr": { "stringValue": "41" } }
                  ]
                }
              }
            }
          },
          {
            "name": "split_invalid_type_empty_arg",
            "expression": "42.split('') == ['4', '2']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": {
                  "1": 0,
                  "2": 8,
                  "3": 9,
                  "4": 13,
                  "5": 16,
                  "6": 17,
                  "7": 22
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "int64Value": "42" }
                        },
                        "function": "split",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "" } }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "listExpr": {
                        "elements": [
                          { "id": "6", "constExpr": { "stringValue": "4" } },
                          { "id": "7", "constExpr": { "stringValue": "2" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "split_invalid_argument",
            "expression": "'42'.split(2) == ['4']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [23],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 14,
                  "5": 17,
                  "6": 18
                }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "42" }
                        },
                        "function": "split",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "2" } }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "listExpr": {
                        "elements": [
                          { "id": "6", "constExpr": { "stringValue": "4" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "split_binary_invalid_type",
            "expression": "42.split('2', '1') == ['4']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": {
                  "1": 0,
                  "2": 8,
                  "3": 9,
                  "4": 14,
                  "5": 19,
                  "6": 22,
                  "7": 23
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "int64Value": "42" }
                        },
                        "function": "split",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "2" } },
                          { "id": "4", "constExpr": { "stringValue": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "listExpr": {
                        "elements": [
                          { "id": "7", "constExpr": { "stringValue": "4" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "split_binary_invalid_argument",
            "expression": "'42'.split(2, 1) == ['4']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 14,
                  "5": 17,
                  "6": 20,
                  "7": 21
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "42" }
                        },
                        "function": "split",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "2" } },
                          { "id": "4", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "listExpr": {
                        "elements": [
                          { "id": "7", "constExpr": { "stringValue": "4" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "split_binary_invalid_argument_2",
            "expression": "'42'.split('2', '1') == ['4']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 16,
                  "5": 21,
                  "6": 24,
                  "7": 25
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "42" }
                        },
                        "function": "split",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "2" } },
                          { "id": "4", "constExpr": { "stringValue": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "6",
                      "listExpr": {
                        "elements": [
                          { "id": "7", "constExpr": { "stringValue": "4" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "split_ternary_invalid_argument",
            "expression": "'42'.split('2', 1, 1) == ['4']",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": {
                  "1": 0,
                  "2": 10,
                  "3": 11,
                  "4": 16,
                  "5": 19,
                  "6": 22,
                  "7": 25,
                  "8": 26
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "42" }
                        },
                        "function": "split",
                        "args": [
                          { "id": "3", "constExpr": { "stringValue": "2" } },
                          { "id": "4", "constExpr": { "int64Value": "1" } },
                          { "id": "5", "constExpr": { "int64Value": "1" } }
                        ]
                      }
                    },
                    {
                      "id": "7",
                      "listExpr": {
                        "elements": [
                          { "id": "8", "constExpr": { "stringValue": "4" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "substring_ternary_invalid_argument",
            "expression": "'hello'.substring(1, 2, 3) == ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [33],
                "positions": {
                  "1": 0,
                  "2": 17,
                  "3": 18,
                  "4": 21,
                  "5": 24,
                  "6": 27,
                  "7": 30
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "hello" }
                        },
                        "function": "substring",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "1" } },
                          { "id": "4", "constExpr": { "int64Value": "2" } },
                          { "id": "5", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    { "id": "7", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "substring_binary_invalid_type",
            "expression": "30.substring(true, 3) == ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [28],
                "positions": {
                  "1": 0,
                  "2": 12,
                  "3": 13,
                  "4": 19,
                  "5": 22,
                  "6": 25
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "int64Value": "30" }
                        },
                        "function": "substring",
                        "args": [
                          { "id": "3", "constExpr": { "boolValue": true } },
                          { "id": "4", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "substring_binary_invalid_argument",
            "expression": "'tacocat'.substring(true, 3) == ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": {
                  "1": 0,
                  "2": 19,
                  "3": 20,
                  "4": 26,
                  "5": 29,
                  "6": 32
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "substring",
                        "args": [
                          { "id": "3", "constExpr": { "boolValue": true } },
                          { "id": "4", "constExpr": { "int64Value": "3" } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          },
          {
            "name": "substring_binary_invalid_argument_2",
            "expression": "'tacocat'.substring(0, false) == ''",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": {
                  "1": 0,
                  "2": 19,
                  "3": 20,
                  "4": 23,
                  "5": 30,
                  "6": 33
                }
              },
              "expr": {
                "id": "5",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "target": {
                          "id": "1",
                          "constExpr": { "stringValue": "tacocat" }
                        },
                        "function": "substring",
                        "args": [
                          { "id": "3", "constExpr": { "int64Value": "0" } },
                          { "id": "4", "constExpr": { "boolValue": false } }
                        ]
                      }
                    },
                    { "id": "6", "constExpr": { "stringValue": "" } }
                  ]
                }
              }
            }
          }
        ]
      }
    ]
  },
  {
    "name": "timestamps",
    "sections": [
      {
        "name": "timestamp_conversions",
        "tests": [
          {
            "name": "toInt_timestamp",
            "expression": "int(timestamp('2009-02-13T23:31:30Z'))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [39],
                "positions": { "1": 3, "2": 13, "3": 14 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "int",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:31:30Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "toString_timestamp",
            "expression": "string(timestamp('2009-02-13T23:31:30Z'))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [42],
                "positions": { "1": 6, "2": 16, "3": 17 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "string",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:31:30Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "toString_timestamp_nanos",
            "expression": "string(timestamp('9999-12-31T23:59:59.999999999Z'))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": { "1": 6, "2": 16, "3": 17 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "string",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": {
                              "stringValue": "9999-12-31T23:59:59.999999999Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "toType_timestamp",
            "expression": "type(timestamp('2009-02-13T23:31:30Z'))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 4, "2": 14, "3": 15 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:31:30Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "duration_conversions",
        "tests": [
          {
            "name": "toString_duration",
            "expression": "string(duration('1000000s'))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [29],
                "positions": { "1": 6, "2": 15, "3": 16 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "string",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "1000000s" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "toType_duration",
            "expression": "type(duration('1000000s'))",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 4, "2": 13, "3": 14 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "type",
                  "args": [
                    {
                      "id": "2",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          {
                            "id": "3",
                            "constExpr": { "stringValue": "1000000s" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "timestamp_selectors",
        "tests": [
          {
            "name": "getDate",
            "expression": "timestamp('2009-02-13T23:31:30Z').getDate()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [44],
                "positions": { "1": 9, "2": 10, "3": 41 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getDate"
                }
              }
            }
          },
          {
            "name": "getDayOfMonth",
            "expression": "timestamp('2009-02-13T23:31:30Z').getDayOfMonth()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": { "1": 9, "2": 10, "3": 47 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getDayOfMonth"
                }
              }
            }
          },
          {
            "name": "getDayOfWeek",
            "expression": "timestamp('2009-02-13T23:31:30Z').getDayOfWeek()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "1": 9, "2": 10, "3": 46 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getDayOfWeek"
                }
              }
            }
          },
          {
            "name": "getDayOfYear",
            "expression": "timestamp('2009-02-13T23:31:30Z').getDayOfYear()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [49],
                "positions": { "1": 9, "2": 10, "3": 46 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getDayOfYear"
                }
              }
            }
          },
          {
            "name": "getFullYear",
            "expression": "timestamp('2009-02-13T23:31:30Z').getFullYear()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [48],
                "positions": { "1": 9, "2": 10, "3": 45 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getFullYear"
                }
              }
            }
          },
          {
            "name": "getHours",
            "expression": "timestamp('2009-02-13T23:31:30Z').getHours()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 9, "2": 10, "3": 42 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getHours"
                }
              }
            }
          },
          {
            "name": "getMilliseconds",
            "expression": "timestamp('2009-02-13T23:31:20.123456789Z').getMilliseconds()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [62],
                "positions": { "1": 9, "2": 10, "3": 59 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": {
                            "stringValue": "2009-02-13T23:31:20.123456789Z"
                          }
                        }
                      ]
                    }
                  },
                  "function": "getMilliseconds"
                }
              }
            }
          },
          {
            "name": "getMinutes",
            "expression": "timestamp('2009-02-13T23:31:30Z').getMinutes()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": { "1": 9, "2": 10, "3": 44 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getMinutes"
                }
              }
            }
          },
          {
            "name": "getMonth",
            "expression": "timestamp('2009-02-13T23:31:30Z').getMonth()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [45],
                "positions": { "1": 9, "2": 10, "3": 42 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getMonth"
                }
              }
            }
          },
          {
            "name": "getSeconds",
            "expression": "timestamp('2009-02-13T23:31:30Z').getSeconds()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [47],
                "positions": { "1": 9, "2": 10, "3": 44 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getSeconds"
                }
              }
            }
          }
        ]
      },
      {
        "name": "timestamp_selectors_tz",
        "tests": [
          {
            "name": "getDate",
            "expression": "timestamp('2009-02-13T23:31:30Z').getDate('Australia/Sydney')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [62],
                "positions": { "1": 9, "2": 10, "3": 41, "4": 42 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getDate",
                  "args": [
                    {
                      "id": "4",
                      "constExpr": { "stringValue": "Australia/Sydney" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "getDayOfMonth_name_pos",
            "expression": "timestamp('2009-02-13T23:31:30Z').getDayOfMonth('US/Central')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [62],
                "positions": { "1": 9, "2": 10, "3": 47, "4": 48 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getDayOfMonth",
                  "args": [
                    { "id": "4", "constExpr": { "stringValue": "US/Central" } }
                  ]
                }
              }
            }
          },
          {
            "name": "getDayOfMonth_numerical_pos",
            "expression": "timestamp('2009-02-13T23:31:30Z').getDayOfMonth('+11:00')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [58],
                "positions": { "1": 9, "2": 10, "3": 47, "4": 48 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getDayOfMonth",
                  "args": [
                    { "id": "4", "constExpr": { "stringValue": "+11:00" } }
                  ]
                }
              }
            }
          },
          {
            "name": "getDayOfMonth_numerical_neg",
            "expression": "timestamp('2009-02-13T02:00:00Z').getDayOfMonth('-02:30')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [58],
                "positions": { "1": 9, "2": 10, "3": 47, "4": 48 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T02:00:00Z" }
                        }
                      ]
                    }
                  },
                  "function": "getDayOfMonth",
                  "args": [
                    { "id": "4", "constExpr": { "stringValue": "-02:30" } }
                  ]
                }
              }
            }
          },
          {
            "name": "getDayOfMonth_name_neg",
            "expression": "timestamp('2009-02-13T02:00:00Z').getDayOfMonth('America/St_Johns')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [68],
                "positions": { "1": 9, "2": 10, "3": 47, "4": 48 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T02:00:00Z" }
                        }
                      ]
                    }
                  },
                  "function": "getDayOfMonth",
                  "args": [
                    {
                      "id": "4",
                      "constExpr": { "stringValue": "America/St_Johns" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "getDayOfWeek",
            "expression": "timestamp('2009-02-13T23:31:30Z').getDayOfWeek('UTC')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [54],
                "positions": { "1": 9, "2": 10, "3": 46, "4": 47 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getDayOfWeek",
                  "args": [{ "id": "4", "constExpr": { "stringValue": "UTC" } }]
                }
              }
            }
          },
          {
            "name": "getDayOfYear",
            "expression": "timestamp('2009-02-13T23:31:30Z').getDayOfYear('US/Central')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [61],
                "positions": { "1": 9, "2": 10, "3": 46, "4": 47 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getDayOfYear",
                  "args": [
                    { "id": "4", "constExpr": { "stringValue": "US/Central" } }
                  ]
                }
              }
            }
          },
          {
            "name": "getFullYear",
            "expression": "timestamp('2009-02-13T23:31:30Z').getFullYear('-09:30')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [56],
                "positions": { "1": 9, "2": 10, "3": 45, "4": 46 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getFullYear",
                  "args": [
                    { "id": "4", "constExpr": { "stringValue": "-09:30" } }
                  ]
                }
              }
            }
          },
          {
            "name": "getHours",
            "expression": "timestamp('2009-02-13T23:31:30Z').getHours('02:00')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": { "1": 9, "2": 10, "3": 42, "4": 43 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getHours",
                  "args": [
                    { "id": "4", "constExpr": { "stringValue": "02:00" } }
                  ]
                }
              }
            }
          },
          {
            "name": "getMinutes",
            "expression": "timestamp('2009-02-13T23:31:30Z').getMinutes('Asia/Kathmandu')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [63],
                "positions": { "1": 9, "2": 10, "3": 44, "4": 45 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getMinutes",
                  "args": [
                    {
                      "id": "4",
                      "constExpr": { "stringValue": "Asia/Kathmandu" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "getMonth",
            "expression": "timestamp('2009-02-13T23:31:30Z').getMonth('UTC')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [50],
                "positions": { "1": 9, "2": 10, "3": 42, "4": 43 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getMonth",
                  "args": [{ "id": "4", "constExpr": { "stringValue": "UTC" } }]
                }
              }
            }
          },
          {
            "name": "getSeconds",
            "expression": "timestamp('2009-02-13T23:31:30Z').getSeconds('-00:00')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [55],
                "positions": { "1": 9, "2": 10, "3": 44, "4": 45 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "timestamp",
                      "args": [
                        {
                          "id": "2",
                          "constExpr": { "stringValue": "2009-02-13T23:31:30Z" }
                        }
                      ]
                    }
                  },
                  "function": "getSeconds",
                  "args": [
                    { "id": "4", "constExpr": { "stringValue": "-00:00" } }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "timestamp_equality",
        "tests": [
          {
            "name": "eq_same",
            "expression": "timestamp('2009-02-13T23:31:30Z') == timestamp('2009-02-13T23:31:30Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [71],
                "positions": { "1": 9, "2": 10, "3": 34, "4": 46, "5": 47 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:31:30Z"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:31:30Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_diff",
            "expression": "timestamp('2009-02-13T23:31:29Z') == timestamp('2009-02-13T23:31:30Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [71],
                "positions": { "1": 9, "2": 10, "3": 34, "4": 46, "5": 47 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:31:29Z"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:31:30Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "neq_same",
            "expression": "timestamp('1945-05-07T02:41:00Z') != timestamp('1945-05-07T02:41:00Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [71],
                "positions": { "1": 9, "2": 10, "3": 34, "4": 46, "5": 47 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "stringValue": "1945-05-07T02:41:00Z"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": {
                              "stringValue": "1945-05-07T02:41:00Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "neq_diff",
            "expression": "timestamp('2000-01-01T00:00:00Z') != timestamp('2001-01-01T00:00:00Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [71],
                "positions": { "1": 9, "2": 10, "3": 34, "4": 46, "5": 47 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "stringValue": "2000-01-01T00:00:00Z"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": {
                              "stringValue": "2001-01-01T00:00:00Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "duration_equality",
        "tests": [
          {
            "name": "eq_same",
            "expression": "duration('123s') == duration('123s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 8, "2": 9, "3": 17, "4": 28, "5": 29 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "2", "constExpr": { "stringValue": "123s" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "5", "constExpr": { "stringValue": "123s" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "eq_diff",
            "expression": "duration('60s') == duration('3600s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 8, "2": 9, "3": 16, "4": 27, "5": 28 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "2", "constExpr": { "stringValue": "60s" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "5", "constExpr": { "stringValue": "3600s" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "neq_same",
            "expression": "duration('604800s') != duration('604800s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [43],
                "positions": { "1": 8, "2": 9, "3": 20, "4": 31, "5": 32 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "stringValue": "604800s" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": { "stringValue": "604800s" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "neq_diff",
            "expression": "duration('86400s') != duration('86164s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [41],
                "positions": { "1": 8, "2": 9, "3": 19, "4": 30, "5": 31 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_!=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "stringValue": "86400s" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": { "stringValue": "86164s" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "timestamp_arithmetic",
        "tests": [
          {
            "name": "add_duration_to_time",
            "expression": "timestamp('2009-02-13T23:00:00Z') + duration('240s') == timestamp('2009-02-13T23:04:00Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [90],
                "positions": {
                  "1": 9,
                  "2": 10,
                  "3": 34,
                  "4": 44,
                  "5": 45,
                  "6": 53,
                  "7": 65,
                  "8": 66
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          {
                            "id": "1",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "2",
                                  "constExpr": {
                                    "stringValue": "2009-02-13T23:00:00Z"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "duration",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "stringValue": "240s" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "7",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "8",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:04:00Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "add_time_to_duration",
            "expression": "duration('120s') + timestamp('2009-02-13T23:01:00Z') == timestamp('2009-02-13T23:03:00Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [90],
                "positions": {
                  "1": 8,
                  "2": 9,
                  "3": 17,
                  "4": 28,
                  "5": 29,
                  "6": 53,
                  "7": 65,
                  "8": 66
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          {
                            "id": "1",
                            "callExpr": {
                              "function": "duration",
                              "args": [
                                {
                                  "id": "2",
                                  "constExpr": { "stringValue": "120s" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": {
                                    "stringValue": "2009-02-13T23:01:00Z"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "7",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "8",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:03:00Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "add_duration_to_duration",
            "expression": "duration('600s') + duration('50s') == duration('650s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [55],
                "positions": {
                  "1": 8,
                  "2": 9,
                  "3": 17,
                  "4": 27,
                  "5": 28,
                  "6": 35,
                  "7": 46,
                  "8": 47
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          {
                            "id": "1",
                            "callExpr": {
                              "function": "duration",
                              "args": [
                                {
                                  "id": "2",
                                  "constExpr": { "stringValue": "600s" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "duration",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "stringValue": "50s" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "7",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "8", "constExpr": { "stringValue": "650s" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "add_time_to_duration_nanos_negative",
            "expression": "timestamp('0001-01-01T00:00:01.000000001Z') + duration('-999999999ns') == timestamp('0001-01-01T00:00:00.000000002Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [118],
                "positions": {
                  "1": 9,
                  "2": 10,
                  "3": 44,
                  "4": 54,
                  "5": 55,
                  "6": 71,
                  "7": 83,
                  "8": 84
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          {
                            "id": "1",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "2",
                                  "constExpr": {
                                    "stringValue": "0001-01-01T00:00:01.000000001Z"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "duration",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "stringValue": "-999999999ns" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "7",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "8",
                            "constExpr": {
                              "stringValue": "0001-01-01T00:00:00.000000002Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "add_time_to_duration_nanos_positive",
            "expression": "timestamp('0001-01-01T00:00:01.999999999Z') + duration('999999999ns') == timestamp('0001-01-01T00:00:02.999999998Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [117],
                "positions": {
                  "1": 9,
                  "2": 10,
                  "3": 44,
                  "4": 54,
                  "5": 55,
                  "6": 70,
                  "7": 82,
                  "8": 83
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "_+_",
                        "args": [
                          {
                            "id": "1",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "2",
                                  "constExpr": {
                                    "stringValue": "0001-01-01T00:00:01.999999999Z"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "duration",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "stringValue": "999999999ns" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "7",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "8",
                            "constExpr": {
                              "stringValue": "0001-01-01T00:00:02.999999998Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "subtract_duration_from_time",
            "expression": "timestamp('2009-02-13T23:10:00Z') - duration('600s') == timestamp('2009-02-13T23:00:00Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [90],
                "positions": {
                  "1": 9,
                  "2": 10,
                  "3": 34,
                  "4": 44,
                  "5": 45,
                  "6": 53,
                  "7": 65,
                  "8": 66
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "_-_",
                        "args": [
                          {
                            "id": "1",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "2",
                                  "constExpr": {
                                    "stringValue": "2009-02-13T23:10:00Z"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "duration",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "stringValue": "600s" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "7",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "8",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:00:00Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "subtract_time_from_time",
            "expression": "timestamp('2009-02-13T23:31:00Z') - timestamp('2009-02-13T23:29:00Z') == duration('120s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [90],
                "positions": {
                  "1": 9,
                  "2": 10,
                  "3": 34,
                  "4": 45,
                  "5": 46,
                  "6": 70,
                  "7": 81,
                  "8": 82
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "_-_",
                        "args": [
                          {
                            "id": "1",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "2",
                                  "constExpr": {
                                    "stringValue": "2009-02-13T23:31:00Z"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": {
                                    "stringValue": "2009-02-13T23:29:00Z"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "7",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "8", "constExpr": { "stringValue": "120s" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "subtract_duration_from_duration",
            "expression": "duration('900s') - duration('42s') == duration('858s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [55],
                "positions": {
                  "1": 8,
                  "2": 9,
                  "3": 17,
                  "4": 27,
                  "5": 28,
                  "6": 35,
                  "7": 46,
                  "8": 47
                }
              },
              "expr": {
                "id": "6",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "3",
                      "callExpr": {
                        "function": "_-_",
                        "args": [
                          {
                            "id": "1",
                            "callExpr": {
                              "function": "duration",
                              "args": [
                                {
                                  "id": "2",
                                  "constExpr": { "stringValue": "900s" }
                                }
                              ]
                            }
                          },
                          {
                            "id": "4",
                            "callExpr": {
                              "function": "duration",
                              "args": [
                                {
                                  "id": "5",
                                  "constExpr": { "stringValue": "42s" }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "7",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "8", "constExpr": { "stringValue": "858s" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "comparisons",
        "tests": [
          {
            "name": "leq_timestamp_true",
            "expression": "timestamp('2009-02-13T23:00:00Z') \u003c= timestamp('2009-02-13T23:00:00Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [71],
                "positions": { "1": 9, "2": 10, "3": 34, "4": 46, "5": 47 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:00:00Z"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:00:00Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "leq_timestamp_false",
            "expression": "timestamp('2009-02-13T23:00:00Z') \u003c= timestamp('2009-02-13T22:59:59Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [71],
                "positions": { "1": 9, "2": 10, "3": 34, "4": 46, "5": 47 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:00:00Z"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": {
                              "stringValue": "2009-02-13T22:59:59Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "leq_duration_true",
            "expression": "duration('200s') \u003c= duration('200s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 8, "2": 9, "3": 17, "4": 28, "5": 29 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "2", "constExpr": { "stringValue": "200s" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "5", "constExpr": { "stringValue": "200s" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "leq_duration_false",
            "expression": "duration('300s') \u003c= duration('200s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 8, "2": 9, "3": 17, "4": 28, "5": 29 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "2", "constExpr": { "stringValue": "300s" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "5", "constExpr": { "stringValue": "200s" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "less_timestamp_true",
            "expression": "timestamp('2009-02-13T23:00:00Z') \u003c timestamp('2009-03-13T23:00:00Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [70],
                "positions": { "1": 9, "2": 10, "3": 34, "4": 45, "5": 46 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:00:00Z"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": {
                              "stringValue": "2009-03-13T23:00:00Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "less_duration_true",
            "expression": "duration('200s') \u003c duration('300s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 8, "2": 9, "3": 17, "4": 27, "5": 28 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003c_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "2", "constExpr": { "stringValue": "200s" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "5", "constExpr": { "stringValue": "300s" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "geq_timestamp_true",
            "expression": "timestamp('2009-02-13T23:00:00Z') \u003e= timestamp('2009-02-13T23:00:00Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [71],
                "positions": { "1": 9, "2": 10, "3": 34, "4": 46, "5": 47 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:00:00Z"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:00:00Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "geq_timestamp_false",
            "expression": "timestamp('2009-02-13T22:58:00Z') \u003e= timestamp('2009-02-13T23:00:00Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [71],
                "positions": { "1": 9, "2": 10, "3": 34, "4": 46, "5": 47 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "stringValue": "2009-02-13T22:58:00Z"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:00:00Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "geq_duration_true",
            "expression": "duration('200s') \u003e= duration('200s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 8, "2": 9, "3": 17, "4": 28, "5": 29 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "2", "constExpr": { "stringValue": "200s" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "5", "constExpr": { "stringValue": "200s" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "geq_duration_false",
            "expression": "duration('120s') \u003e= duration('200s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [37],
                "positions": { "1": 8, "2": 9, "3": 17, "4": 28, "5": 29 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e=_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "2", "constExpr": { "stringValue": "120s" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "5", "constExpr": { "stringValue": "200s" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "greater_timestamp_true",
            "expression": "timestamp('2009-02-13T23:59:00Z') \u003e timestamp('2009-02-13T23:00:00Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [70],
                "positions": { "1": 9, "2": 10, "3": 34, "4": 45, "5": 46 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:59:00Z"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": {
                              "stringValue": "2009-02-13T23:00:00Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "greater_duration_true",
            "expression": "duration('300s') \u003e duration('200s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [36],
                "positions": { "1": 8, "2": 9, "3": 17, "4": 27, "5": 28 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_\u003e_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "2", "constExpr": { "stringValue": "300s" } }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "5", "constExpr": { "stringValue": "200s" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "duration_converters",
        "tests": [
          {
            "name": "get_hours",
            "expression": "duration('10000s').getHours()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [30],
                "positions": { "1": 8, "2": 9, "3": 27 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "duration",
                      "args": [
                        { "id": "2", "constExpr": { "stringValue": "10000s" } }
                      ]
                    }
                  },
                  "function": "getHours"
                }
              }
            }
          },
          {
            "name": "get_milliseconds",
            "expression": "x.getMilliseconds()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [20],
                "positions": { "1": 0, "2": 17 }
              },
              "expr": {
                "id": "2",
                "callExpr": {
                  "target": { "id": "1", "identExpr": { "name": "x" } },
                  "function": "getMilliseconds"
                }
              }
            }
          },
          {
            "name": "get_minutes",
            "expression": "duration('3730s').getMinutes()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 8, "2": 9, "3": 28 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "duration",
                      "args": [
                        { "id": "2", "constExpr": { "stringValue": "3730s" } }
                      ]
                    }
                  },
                  "function": "getMinutes"
                }
              }
            }
          },
          {
            "name": "get_seconds",
            "expression": "duration('3730s').getSeconds()",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [31],
                "positions": { "1": 8, "2": 9, "3": 28 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "target": {
                    "id": "1",
                    "callExpr": {
                      "function": "duration",
                      "args": [
                        { "id": "2", "constExpr": { "stringValue": "3730s" } }
                      ]
                    }
                  },
                  "function": "getSeconds"
                }
              }
            }
          }
        ]
      },
      {
        "name": "timestamp_range",
        "tests": [
          {
            "name": "from_string_under",
            "expression": "timestamp('0000-01-01T00:00:00Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [34],
                "positions": { "1": 9, "2": 10 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "timestamp",
                  "args": [
                    {
                      "id": "2",
                      "constExpr": { "stringValue": "0000-01-01T00:00:00Z" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "from_string_over",
            "expression": "timestamp('10000-01-01T00:00:00Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [35],
                "positions": { "1": 9, "2": 10 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "timestamp",
                  "args": [
                    {
                      "id": "2",
                      "constExpr": { "stringValue": "10000-01-01T00:00:00Z" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "add_duration_under",
            "expression": "timestamp('0001-01-01T00:00:00Z') + duration('-1s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [52],
                "positions": { "1": 9, "2": 10, "3": 34, "4": 44, "5": 45 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "stringValue": "0001-01-01T00:00:00Z"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "5", "constExpr": { "stringValue": "-1s" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "add_duration_over",
            "expression": "timestamp('9999-12-31T23:59:59Z') + duration('1s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [51],
                "positions": { "1": 9, "2": 10, "3": 34, "4": 44, "5": 45 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "stringValue": "9999-12-31T23:59:59Z"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "5", "constExpr": { "stringValue": "1s" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "add_duration_nanos_over",
            "expression": "timestamp('9999-12-31T23:59:59.999999999Z') + duration('1ns')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [62],
                "positions": { "1": 9, "2": 10, "3": 44, "4": 54, "5": 55 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "stringValue": "9999-12-31T23:59:59.999999999Z"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "5", "constExpr": { "stringValue": "1ns" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "add_duration_nanos_under",
            "expression": "timestamp('0001-01-01T00:00:00Z') + duration('-1ns')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [53],
                "positions": { "1": 9, "2": 10, "3": 34, "4": 44, "5": 45 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "stringValue": "0001-01-01T00:00:00Z"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          { "id": "5", "constExpr": { "stringValue": "-1ns" } }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "sub_time_duration_over",
            "expression": "timestamp('9999-12-31T23:59:59Z') - timestamp('0001-01-01T00:00:00Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [70],
                "positions": { "1": 9, "2": 10, "3": 34, "4": 45, "5": 46 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_-_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "stringValue": "9999-12-31T23:59:59Z"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": {
                              "stringValue": "0001-01-01T00:00:00Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "sub_time_duration_under",
            "expression": "timestamp('0001-01-01T00:00:00Z') - timestamp('9999-12-31T23:59:59Z')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [70],
                "positions": { "1": 9, "2": 10, "3": 34, "4": 45, "5": 46 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_-_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": {
                              "stringValue": "0001-01-01T00:00:00Z"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "timestamp",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": {
                              "stringValue": "9999-12-31T23:59:59Z"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "duration_range",
        "tests": [
          {
            "name": "from_string_under",
            "expression": "duration('-320000000000s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [27],
                "positions": { "1": 8, "2": 9 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "duration",
                  "args": [
                    {
                      "id": "2",
                      "constExpr": { "stringValue": "-320000000000s" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "from_string_over",
            "expression": "duration('320000000000s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [26],
                "positions": { "1": 8, "2": 9 }
              },
              "expr": {
                "id": "1",
                "callExpr": {
                  "function": "duration",
                  "args": [
                    {
                      "id": "2",
                      "constExpr": { "stringValue": "320000000000s" }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "add_under",
            "expression": "duration('-200000000000s') + duration('-200000000000s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [56],
                "positions": { "1": 8, "2": 9, "3": 27, "4": 37, "5": 38 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "stringValue": "-200000000000s" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": { "stringValue": "-200000000000s" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "add_over",
            "expression": "duration('200000000000s') + duration('200000000000s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [54],
                "positions": { "1": 8, "2": 9, "3": 26, "4": 36, "5": 37 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_+_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "stringValue": "200000000000s" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": { "stringValue": "200000000000s" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "sub_under",
            "expression": "duration('-200000000000s') - duration('200000000000s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [55],
                "positions": { "1": 8, "2": 9, "3": 27, "4": 37, "5": 38 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_-_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "stringValue": "-200000000000s" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": { "stringValue": "200000000000s" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "sub_over",
            "expression": "duration('200000000000s') - duration('-200000000000s')",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [55],
                "positions": { "1": 8, "2": 9, "3": 26, "4": 36, "5": 37 }
              },
              "expr": {
                "id": "3",
                "callExpr": {
                  "function": "_-_",
                  "args": [
                    {
                      "id": "1",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          {
                            "id": "2",
                            "constExpr": { "stringValue": "200000000000s" }
                          }
                        ]
                      }
                    },
                    {
                      "id": "4",
                      "callExpr": {
                        "function": "duration",
                        "args": [
                          {
                            "id": "5",
                            "constExpr": { "stringValue": "-200000000000s" }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    ]
  },
  { "name": "unknowns", "sections": null },
  {
    "name": "wrappers",
    "sections": [
      {
        "name": "bool",
        "tests": [
          {
            "name": "to_any",
            "expression": "TestAllTypes{single_any: google.protobuf.BoolValue{value: true}}.single_any",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [76],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 50,
                  "4": 56,
                  "5": 58,
                  "6": 64
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_any",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.BoolValue",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "boolValue": true }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_any"
                }
              }
            }
          },
          {
            "name": "to_json",
            "expression": "TestAllTypes{single_value: google.protobuf.BoolValue{value: true}}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [80],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 52,
                  "4": 58,
                  "5": 60,
                  "6": 66
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.BoolValue",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "boolValue": true }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "to_null",
            "expression": "TestAllTypes{single_bool_wrapper: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [58],
                "positions": { "1": 12, "2": 32, "3": 34, "4": 40, "5": 55 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_bool_wrapper",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "int32",
        "tests": [
          {
            "name": "to_any",
            "expression": "TestAllTypes{single_any: google.protobuf.Int32Value{value: 1}}.single_any",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [74],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 51,
                  "4": 57,
                  "5": 59,
                  "6": 62
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_any",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.Int32Value",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_any"
                }
              }
            }
          },
          {
            "name": "to_json",
            "expression": "TestAllTypes{single_value: google.protobuf.Int32Value{value: 1}}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [78],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 53,
                  "4": 59,
                  "5": 61,
                  "6": 64
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.Int32Value",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "to_null",
            "expression": "TestAllTypes{single_int32_wrapper: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [59],
                "positions": { "1": 12, "2": 33, "3": 35, "4": 41, "5": 56 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_int32_wrapper",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "int64",
        "tests": [
          {
            "name": "to_any",
            "expression": "TestAllTypes{single_any: google.protobuf.Int64Value{value: 1}}.single_any",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [74],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 51,
                  "4": 57,
                  "5": 59,
                  "6": 62
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_any",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.Int64Value",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_any"
                }
              }
            }
          },
          {
            "name": "to_json_number",
            "expression": "TestAllTypes{single_value: google.protobuf.Int64Value{value: 1}}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [78],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 53,
                  "4": 59,
                  "5": 61,
                  "6": 64
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.Int64Value",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "int64Value": "1" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "to_json_string",
            "expression": "TestAllTypes{single_value: google.protobuf.Int64Value{value: 9223372036854775807}}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [96],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 53,
                  "4": 59,
                  "5": 61,
                  "6": 82
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.Int64Value",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": {
                                      "int64Value": "9223372036854775807"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "to_null",
            "expression": "TestAllTypes{single_int64_wrapper: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [59],
                "positions": { "1": 12, "2": 33, "3": 35, "4": 41, "5": 56 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_int64_wrapper",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "uint32",
        "tests": [
          {
            "name": "to_any",
            "expression": "TestAllTypes{single_any: google.protobuf.UInt32Value{value: 1u}}.single_any",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [76],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 52,
                  "4": 58,
                  "5": 60,
                  "6": 64
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_any",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.UInt32Value",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "uint64Value": "1" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_any"
                }
              }
            }
          },
          {
            "name": "to_json",
            "expression": "TestAllTypes{single_value: google.protobuf.UInt32Value{value: 1u}}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [80],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 54,
                  "4": 60,
                  "5": 62,
                  "6": 66
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.UInt32Value",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "uint64Value": "1" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "to_null",
            "expression": "TestAllTypes{single_uint32_wrapper: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [60],
                "positions": { "1": 12, "2": 34, "3": 36, "4": 42, "5": 57 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_uint32_wrapper",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "uint64",
        "tests": [
          {
            "name": "to_any",
            "expression": "TestAllTypes{single_any: google.protobuf.UInt64Value{value: 1u}}.single_any",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [76],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 52,
                  "4": 58,
                  "5": 60,
                  "6": 64
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_any",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.UInt64Value",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "uint64Value": "1" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_any"
                }
              }
            }
          },
          {
            "name": "to_json_number",
            "expression": "TestAllTypes{single_value: google.protobuf.UInt64Value{value: 1u}}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [80],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 54,
                  "4": 60,
                  "5": 62,
                  "6": 66
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.UInt64Value",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "uint64Value": "1" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "to_json_string",
            "expression": "TestAllTypes{single_value: google.protobuf.UInt64Value{value: 18446744073709551615u}}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [99],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 54,
                  "4": 60,
                  "5": 62,
                  "6": 85
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.UInt64Value",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": {
                                      "uint64Value": "18446744073709551615"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "to_null",
            "expression": "TestAllTypes{single_uint64_wrapper: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [60],
                "positions": { "1": 12, "2": 34, "3": 36, "4": 42, "5": 57 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_uint64_wrapper",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "float",
        "tests": [
          {
            "name": "to_any",
            "expression": "TestAllTypes{single_any: google.protobuf.FloatValue{value: 1.0}}.single_any",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [76],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 51,
                  "4": 57,
                  "5": 59,
                  "6": 64
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_any",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.FloatValue",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "doubleValue": 1 }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_any"
                }
              }
            }
          },
          {
            "name": "to_json",
            "expression": "TestAllTypes{single_value: google.protobuf.FloatValue{value: 1.0}}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [80],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 53,
                  "4": 59,
                  "5": 61,
                  "6": 66
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.FloatValue",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "doubleValue": 1 }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "to_null",
            "expression": "TestAllTypes{single_float_wrapper: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [59],
                "positions": { "1": 12, "2": 33, "3": 35, "4": 41, "5": 56 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_float_wrapper",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "double",
        "tests": [
          {
            "name": "to_any",
            "expression": "TestAllTypes{single_any: google.protobuf.DoubleValue{value: 1.0}}.single_any",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [77],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 52,
                  "4": 58,
                  "5": 60,
                  "6": 65
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_any",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.DoubleValue",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "doubleValue": 1 }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_any"
                }
              }
            }
          },
          {
            "name": "to_json",
            "expression": "TestAllTypes{single_value: google.protobuf.DoubleValue{value: 1.0}}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [81],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 54,
                  "4": 60,
                  "5": 62,
                  "6": 67
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.DoubleValue",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "doubleValue": 1 }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "to_null",
            "expression": "TestAllTypes{single_double_wrapper: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [60],
                "positions": { "1": 12, "2": 34, "3": 36, "4": 42, "5": 57 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_double_wrapper",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "bytes",
        "tests": [
          {
            "name": "to_any",
            "expression": "TestAllTypes{single_any: google.protobuf.BytesValue{value: b'foo'}}.single_any",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [79],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 51,
                  "4": 57,
                  "5": 59,
                  "6": 67
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_any",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.BytesValue",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "bytesValue": "Zm9v" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_any"
                }
              }
            }
          },
          {
            "name": "to_json",
            "expression": "TestAllTypes{single_value: google.protobuf.BytesValue{value: b'foo'}}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [83],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 53,
                  "4": 59,
                  "5": 61,
                  "6": 69
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.BytesValue",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "bytesValue": "Zm9v" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "to_null",
            "expression": "TestAllTypes{single_bytes_wrapper: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [59],
                "positions": { "1": 12, "2": 33, "3": 35, "4": 41, "5": 56 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_bytes_wrapper",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "string",
        "tests": [
          {
            "name": "to_any",
            "expression": "TestAllTypes{single_any: google.protobuf.StringValue{value: 'foo'}}.single_any",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [79],
                "positions": {
                  "1": 12,
                  "2": 23,
                  "3": 52,
                  "4": 58,
                  "5": 60,
                  "6": 67
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_any",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.StringValue",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "stringValue": "foo" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_any"
                }
              }
            }
          },
          {
            "name": "to_json",
            "expression": "TestAllTypes{single_value: google.protobuf.StringValue{value: 'foo'}}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [83],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 54,
                  "4": 60,
                  "5": 62,
                  "6": 69
                }
              },
              "expr": {
                "id": "6",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.StringValue",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "value",
                                  "value": {
                                    "id": "5",
                                    "constExpr": { "stringValue": "foo" }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          },
          {
            "name": "to_null",
            "expression": "TestAllTypes{single_string_wrapper: null} == TestAllTypes{}",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [60],
                "positions": { "1": 12, "2": 34, "3": 36, "4": 42, "5": 57 }
              },
              "expr": {
                "id": "4",
                "callExpr": {
                  "function": "_==_",
                  "args": [
                    {
                      "id": "1",
                      "structExpr": {
                        "messageName": "TestAllTypes",
                        "entries": [
                          {
                            "id": "2",
                            "fieldKey": "single_string_wrapper",
                            "value": {
                              "id": "3",
                              "constExpr": { "nullValue": null }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "5",
                      "structExpr": { "messageName": "TestAllTypes" }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      {
        "name": "value",
        "tests": [
          {
            "name": "default_to_json",
            "expression": "TestAllTypes{single_any: TestAllTypes{}.single_value}.single_any",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [65],
                "positions": { "1": 12, "2": 23, "3": 37, "4": 39, "5": 53 }
              },
              "expr": {
                "id": "5",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_any",
                          "value": {
                            "id": "4",
                            "selectExpr": {
                              "operand": {
                                "id": "3",
                                "structExpr": { "messageName": "TestAllTypes" }
                              },
                              "field": "single_value"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_any"
                }
              }
            }
          }
        ]
      },
      {
        "name": "list_value",
        "tests": [
          {
            "name": "literal_to_any",
            "expression": "TestAllTypes{single_any: []}.single_any",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 23, "3": 25, "4": 28 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_any",
                          "value": { "id": "3", "listExpr": {} }
                        }
                      ]
                    }
                  },
                  "field": "single_any"
                }
              }
            }
          }
        ]
      },
      {
        "name": "struct",
        "tests": [
          {
            "name": "literal_to_any",
            "expression": "TestAllTypes{single_any: {}}.single_any",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [40],
                "positions": { "1": 12, "2": 23, "3": 25, "4": 28 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_any",
                          "value": { "id": "3", "structExpr": {} }
                        }
                      ]
                    }
                  },
                  "field": "single_any"
                }
              }
            }
          }
        ]
      },
      {
        "name": "field_mask",
        "tests": [
          {
            "name": "to_json",
            "expression": "TestAllTypes{single_value: google.protobuf.FieldMask{paths: ['foo', 'bar']}}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [90],
                "positions": {
                  "1": 12,
                  "2": 25,
                  "3": 52,
                  "4": 58,
                  "5": 60,
                  "6": 61,
                  "7": 68,
                  "8": 76
                }
              },
              "expr": {
                "id": "8",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.FieldMask",
                              "entries": [
                                {
                                  "id": "4",
                                  "fieldKey": "paths",
                                  "value": {
                                    "id": "5",
                                    "listExpr": {
                                      "elements": [
                                        {
                                          "id": "6",
                                          "constExpr": { "stringValue": "foo" }
                                        },
                                        {
                                          "id": "7",
                                          "constExpr": { "stringValue": "bar" }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          }
        ]
      },
      {
        "name": "duration",
        "tests": [
          {
            "name": "to_json",
            "expression": "TestAllTypes{single_value: duration('1000000s')}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [62],
                "positions": { "1": 12, "2": 25, "3": 35, "4": 36, "5": 48 }
              },
              "expr": {
                "id": "5",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "callExpr": {
                              "function": "duration",
                              "args": [
                                {
                                  "id": "4",
                                  "constExpr": { "stringValue": "1000000s" }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          }
        ]
      },
      {
        "name": "timestamp",
        "tests": [
          {
            "name": "to_json",
            "expression": "TestAllTypes{single_value: timestamp('9999-12-31T23:59:59.999999999Z')}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [85],
                "positions": { "1": 12, "2": 25, "3": 36, "4": 37, "5": 71 }
              },
              "expr": {
                "id": "5",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "callExpr": {
                              "function": "timestamp",
                              "args": [
                                {
                                  "id": "4",
                                  "constExpr": {
                                    "stringValue": "9999-12-31T23:59:59.999999999Z"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          }
        ]
      },
      {
        "name": "empty",
        "tests": [
          {
            "name": "to_json",
            "expression": "TestAllTypes{single_value: google.protobuf.Empty{}}.single_value",
            "result": {
              "sourceInfo": {
                "location": "\u003cinput\u003e",
                "lineOffsets": [65],
                "positions": { "1": 12, "2": 25, "3": 48, "4": 51 }
              },
              "expr": {
                "id": "4",
                "selectExpr": {
                  "operand": {
                    "id": "1",
                    "structExpr": {
                      "messageName": "TestAllTypes",
                      "entries": [
                        {
                          "id": "2",
                          "fieldKey": "single_value",
                          "value": {
                            "id": "3",
                            "structExpr": {
                              "messageName": "google.protobuf.Empty"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "field": "single_value"
                }
              }
            }
          }
        ]
      }
    ]
  }
]
